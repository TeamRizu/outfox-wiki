[{"id":0,"href":"/releases/A4.9.9HF3/","title":"OutFox Alpha 4.9.9HF3 Build","parent":"Release History","content":"Release Date: 8th August 2021    \u0026ldquo;How\u0026rsquo;s that new feature coming along?\u0026quot;    (Incorporates Internal Builds 4.9.9HF3a to 4.9.9HF3b)    (Incorporates Internal Builds 4.9.9HF3-rc0 to 4.9.9HF3-rc4)    (Incorporates Internal Builds 4.9.9HF2-rc0 to 4.9.9HF2-rc3)    (Incorporates Internal Builds 4.9.9HF-rc0 to 4.9.9HF-rc4)    Cabinets now have restored scores! We apologise for the issues this update caused. Ensure you have downloaded 4.9.9HF3b    Right, we finally fixed the annoying RageFile glitch that was affecting the hash system to be different to 5.1/5.0.12. Sorry about all this hassle, we fixed a wedge of bugs in the loading system, but did not expect everyone to have built massive amounts of stuff on top of these bugs being there, so we have adjusted the system so backward compatible themes / API / ScoreShare / Groovestats etc once more work again.\nThanks for being so patient while we ironed this out! it has been a pain!\nWhy the hotfix rush?!    For those curious about the flurry of hotfix patches, we fixed the way the game sees a lot of non-ASCII based file names and folder names. This allowed for us to support accented characters as well as glyphs and japanese characters, alongside with what we found before. This allowed for us to finally fix the bug of \u0026lsquo;one file per folder\u0026rsquo; which was done for DWI way back in 2002, so as we move to a more mode agnostic (we support more than one game mode) we can allow users to have simfiles for different modes/games in the same folder. This was perfect on OutFox specific things - but broke most stuff on 5.1/5.0.12 horribly.\nWhat we had not realised was that a lot of things had been built up on this old bugged behaviour over the years, and that for some reason, there was a hash of the path of the simfile which was being picked up by all these systems. This completely changed the reported hash, and thus score reporting things or sharing things suddenly didn\u0026rsquo;t know their hash and it also didn\u0026rsquo;t help with DWI being so jank it broke even how SM saw some of the charts.\nWe have kept the multiloading system in place. We need this for other modes, however we have adjusted carefully the loading system for SM/SSC/DWI so it matches back to how past versions work, so all of these things can remain intact and working.\nWe\u0026rsquo;ll need to think hard on how to apply the fixes in the future, as we don\u0026rsquo;t really want all of this all over again!\n ALL:     ❕ Fixed missing score issue by restoring bugged SM5.1 code ❕✅ Fixed stats.xml glitch due to bad parse - Thanks Zankoku for the assistance on this! ❕✅ Fixed ScreenMessage Overflow on some systems ❕✅ New libsamplerate resampler - faster pipeline ❕✅ Fixed pointless crash on ScreenMessage ❕✅ Fixed crash/hang when using GrooveStats ❕✅ Fixed hang on Simply Love when using Solo ❕✅ Increased RageLog buffering to prevent overflow crashes with lots of files/Key Sounds ❕✅ Reduced Log output on DTX ❕✅ Fixed visual request on GLX/X11 ❕✅ Removed Windows 98 calls ❕✅ Fixed some obscure 2001 DWI files crash ❕✅ Fixed DWI title destroying hash keys ❕✅ Fixed DWI loading\u0026hellip; nothing at all\u0026hellip; ❕✅ Fixed PMS table corruption ❕✅ Fixed BMS hash table creation ❕✅ Fixed SSC/SM hash generation ❕✅ Fixed Sound buffer width sometimes getting to the max ❕✅ Fixed freeze on Jukebox with some non-dance modes ❕✅ Fixed sound scheduler on Windows/Linux ❕✅ NEW Sound tweaks for haste and rate, based off of new code ❕✅ NEW Sound resample preference, leave it alone for now, as it replicates RageSoundResample fine.   This mini hotfix (HF2) includes a few things we were going to leave to the next release, but as we had to fix bugs in them anyway, it was easier to apply.\nALL:     ❕✅ Fixed SM hash corruption ❕✅ Fixed DWI being loaded due to lazy people not cleaning their simfile folders ❕✅ The system will not load DWI if an ssc or sm is found ❕✅ Fixed odd SM title bug ❕✅ Fixed Crash with older hardware not supporting what it advertises ❕✅ Fixed Crash with course loading that affected some folks with \u0026gt;640 songs ❕✅ Fixed Notesloader issues with Mac and Linux ❕✅ Fixed GCC / Mac compile ❕✅ Fixed Windows 10/11 affinity issues ❕✅ Fixed Occasional spike on Windows 10/11 when using an XInput controller ❕✅ Taiko adjustments for notefield ❕✅ Fixed SM/SSC loading to be more cabinet friendly.   Signed Mac builds update!    The big news is we (now finally!) have passed the prerequisites for GateKeeper on Mac, so this hotfix should behave and work fine, without any issues. Do remember to just drag and drop as the dmg lets you know how to do so, and it will run as other applications. Thanks to Jose and Squirrel for their efforts, and Jose for puzzling through, and Jousway for fixing one of the bugs in gh mode which was causing issuess as well.\n Notes Loading    There were several issues with the notes loaders and how antivirus/software protection apps were seeing OutFox when we were loading simfiles. This alpha hotfix now has addressed this by allowing you all to add more than one simfile in a song folder, cutting down on the folder rabbit hole. As we move to a more multi-game engine, this will also allow you to keep things tidy on your drive, and ensure it is a seamless experience for you all. Of course, please check the audio files are the same for the chart you are going to add to the folder, as you may find you have a nasty sync issue, but we also now support multidifficulty setups, as this is required for pump and taiko specifically.\n Difficulty System Revamp    This hotfix also sees a tweak to the difficulty system used in OutFox. In the past it was tied to the DDR paradigm and then left to rot as one of those \u0026lsquo;StepMania Things\u0026rsquo;. This however really stifled what we could do within the engine, especially with modes with different names/brackets etc. With the release of gddm and taiko we needed more difficulties than the game offered, so this has now been resolved. Themes which are based off of 5.1/5.0.x will still work due to the numbers being the same as before. If there are any issues with your theme, do let us know, but we have tested several with no issues.\n New #VOLUME and #PAN    These features have been missing from our keysound support since 2002, and we are proud to say that we have them in this hotfix! They are completely supported in gddm from the parser, (do reset your cache of course!) and they also work in beat/popn. taiko will need the support as well, so shout out to Jous for putting up with my waaaahh-luigi on getting it added to the game. This build also supports the hidden chips/keysounds for gddm and we\u0026rsquo;ll work on getting the final compatibility added in due course.\n New gh Modernisation    Due to the need to run with a slightly more secure runtime on Mac OS Catalina/Big Sur/Monterey on the Intel based macs there were some functions in our gh mode which gatekeeper did not approve of. The way the notes were cast have been fixed, fever/star power has been sorted to be more gh3 like, and taps and open strums are also tweaked to be better. Please give them a try and let us know! A theme for this mode is in the works, so apologies for the barebone approach we have at the moment. It\u0026rsquo;s also why we are an alpha after all\u0026hellip;\nALL:    Mode Specific\n ❕✅ Fixed SM/SSC Noteloader corruption with some Japanese and Korean Titles/Artists on dance notesloaders ❕✅ Fixed DTX Noteloader memory leak ❕✅ Fixed DTX Parser missing some drums in gddm mode ❕✅ Fixed BMS Keysounds not seeking/reading correctly ❕✅ Fixed PMS Keysounds not buffering correctly ❕✅ Modernise Keysound system to prevent buffer under-runs ❕✅ Fix BMS/PMS missing channels, Hidden notes will come next Alpha ❕✅ Fix beat crash with charts that had more than 866 keysounds ❕✅ Fix popn crash with charts that had more than 1022 keysounds ❕✅ Fix #VOLUME not being applied correctly to beat and gddm keysounds ❕✅ Fix #PAN not being applied to beat and popn keysounds ❕✅ Fix gh loading crash with some older charts. ❕✅ Fixed RageSound preload causing missing chips in gddm and notes in beat ❕✅ Fixed gh crash due to an overzealous lightsman double update ❕✅ Fixed crash in DTX/BMS/PMS due to strings being over optimised on Mac Intel/Linux ❕✅ Fixed gh note types to please the Mac OS gatekeeper gods ❕✅ Fixed gh open strum notes ❕✅ Fixed gh fever to be closer to gh3 ❕✅ New gh HOPO notes system ❕✅ Fixed gh tap notes not showing up sometimes on older CHART files  Engine\n ❕✅ Fixed Screen msg Bug - Closes 17 year old issue ❕✅ Fixed crash in Jukebox with non-dance modes ❕✅ Fixed overflow in tween awareness - Closes 14 year old issue ❕✅ Fixed Actor overflow on tween actions - Closes 14 year old issue ❕✅ Fixed OptionsPrefs issue - Closes #375 ❕✅ Fixed editor scrolling issue ❕✅ Fixed editor buffer overflow when using \u0026gt;496 keysounds ❕✅ Fixed editor input being sent garbage ❕✅ Fixed editor input parser arrays ❕✅ Fixed crash in practice mode ❕✅ Fixed endless loop with some older BMS/PMS charts in practice mode - Thanks EDMSPack ❕✅ Fixed potential buffer overflow exploit in soundreader ❕✅ Fixed keysounds being stopped when they didn\u0026rsquo;t need to be, forcing a reload of the sound ❕✅ Fixed Keysound index system ❕✅ New Added save on exit theme metrics for option screens ❕✅ Fixed freeze on game select screen due to missing module - Thanks Kaede! ❕✅ Modernised the notesloader system in preparation for more loaders ❕✅ Fixed some types of charts being erroroneously skipped during the parse load ❕✅ NEW Multi Sim File Loading from 1 directory ❕✅ NEW Non DDR difficulty system so we can properly support other modes  Linux\n ❕✅ Fixed crash on linux versions that do not support the new Neutral Vendor libraries ❕✅ Fixed crash on Debian/Ubuntu/Fedora/Arch with inifile due to a race condition ❕✅ Fixed edge case crash on Clear/Fedora preventing the game booting on some 4.x / \u0026lt; 5.1 Kernels  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Fixed edge case crash on Twister/Raspbian preventing the game booting on some 4.x Kernels ❕✅ Fixed crash on Raspbian with inifile due to a race condition ❕✅ Fixed crash on RockPi 4B/4C when not using the first HDMI port/Audio  Mac OS\n ❕✅ Fixed input with guitar hero based controllers ❕✅ Rewrote internal gh mode to fix overly harsh input restrictions ❕✅ Fixed internal system to be signed compliant ❕✅ New enhanced build pipeline to ensure signing passes on Mac OS Intel ❕✅ New streamlined and optimised code for Mac M1 now we are properly signed   KNOWN ISSUES: Alpha 4.9.9HF     ❕❌ ISSUE Song Charts will not pan the player correctly when being played ❕❌ ISSUE Playing beat/popnsongs on Endless Mode may have a crash on song loading. Please be aware that course mode for these modes are a bit tempremental at the moment! ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE gddm mode: We do not support the XA codec at this time, it\u0026rsquo;ll play silent. ❕❌ ISSUE beat/popn/gddm some early (pre2013) songs may play some sound samples / keysounds at the wrong speed   Release Date: 31st July 2021    \u0026ldquo;Hey! Why don\u0026rsquo;t you just get up and dance, man?\u0026quot;    (Incorporates Internal Builds 4.9.8.1 to 4.9.8.6BE) (Incorporates Internal Builds 4.9.9-rc0 to 4.9.9-rc8)\nAlpha Statistics       Commits Changed files Additions Deletions     433 2079 185,205 29,552    In Memorium of SHIKI, a long running well known game music musician, who gave us over two decades of music spanning dance, vocaloid and techno, most of which was charted into BMS, SM and others, sadly passed away this month.    This alpha, our loading screen is in memory of one of his more famous StepMania Based Charts, Air.\nAir\nDigitalic Rain\nAngellic Layer\nSETSUNA (feat. Hatsune Miku)\nRest In Peace.    SHIKI ?? - 6th July 2021.     TEXTURE FONT GENERATOR V0.34     ❕✅🐲📝 Added ? \u0026amp; ! to number glyph profile ❕✅🐲📝 Fixed MFC overflow preventing compile ❕✅🐲📝 Fixed PNG causing a crash on legacy codepages ❕✅🐲📝 Fixed compile on visual studio community 2019  This build requires a cache reset if you are on Linux or MacOS, due to the internal changes. Please find your save folder and delete the contents of /cache. This will make your first time run of 4.9.9 slightly longer as it has to rebuild the index, but it is to accommodate the new modes/setup etc. Please remember to restart the game after doing a cache build, so you do not have as many issues with memory management.  New (and some Old!) Modes Update Version 2    Following on from the last release, we have continued to improve and revamp the note system for the new modes, with Jousway taking the time to make available new types and styles available that were never before. This month fixes some omissions we made from the last release, which slipped through the testing teams.\n pump    We have fixed the scoring bug that was in the previous build, and thank you for those who took the time to report the issues. Keep in mind that Soundwaves still uses \u0026lsquo;dance\u0026rsquo; paradigms for scoring, but other themes that use different scoring systems based on \u0026lsquo;pump/piu\u0026rsquo; should work correctly now.\nThe tick-count has been tweaked to work correctly as there was a miscalculation in the offset math inherited from upstream. This now behaves as expected.\nGetting random misses on hold heads has been resolved as well as the holds with small tails (mini/micro holds).\nSupport for co-op charts has been added. 5 player is introduced with up to 10 players support, though the noteskins have not been prepared at this time. The numbers on the noteskins are separately labeled so with a few adjustments and extra assets you will be able to update any noteskin to work with co-op. Co-op charts made on StepF2/StepP1 should work on OutFox, however, better note types are currently being developed by Jousway so that there can be more than 3 real players defined. Stay tuned!\nThose of you who have reported that we still have a \u0026lsquo;superb\u0026rsquo; bug on holds, this will be fixed when we introduce the new piu mode - remember the pump mode is getting Quality of Life updates for now, before we move over to updating things properly in the future.\nMicro/Miniholds also do not trigger misses/cause a weird tick to happen anymore, and there also are no \u0026lsquo;phantom\u0026rsquo; mines in long (5+ measure) holds - this was an oddity which has been fixed now.\nWe\u0026rsquo;re still working on improving SF2/SP1 custom charts parsing. Except for a few charts, you can play the majority of content made for it on OutFox with no problems. As always, if you find any oddities make sure you report them to us!\n popn    There was also a reported issue where some of the channels (lanes) of the PMS 7 button mode were not parsing correctly, or were actually being missed completely, resulting in a chart \u0026lsquo;misplacing\u0026rsquo; green and blue lanes. This was due to Squirrel misreading the spec on how BMS98/PMS was transcribed and set up the function wrong. It is fixed in this release.\nWe also have added 18 lane mode (No PMS/(BME) File support yet though!)\nThank you to all of those that took the time to report this and to kick us into getting outfox into a proper BMS/PMS parser. There are still a few features missing from po-mu mode, but these will be added to the game as per the spec (see the table below for more information.)\npopn mode also had a few tweaks and adjustments this alpha mainly in how keysounds are loaded within the game. This should now mean the mode should be smoother overall.\nThanks to the channels being set right, we also are happy to announce another feature to \u0026lsquo;popn\u0026rsquo; mode: 2 player! This was not available on the original client, but it did always irk us how there was never 2 player options other than 3 button battle. In a future update, there will be a battle mode for \u0026lsquo;popn\u0026rsquo; but for now, enjoy the 2 player fun. We will finally be having a theme for \u0026lsquo;popn\u0026rsquo; in OutFox really soon, so this is finally a move from the \u0026lsquo;dance\u0026rsquo; centric era of the application\u0026rsquo;s past.\nHave some fun with mod files from dance on popn-four\nbeat will be getting some attention this next quarter!     para    We have given this mode a polish (and for those with an arcade cab, with 3 sensors doing nothing!) we added the \u0026lsquo;fabled\u0026rsquo; 360, or 8 sensor mode. This mode was designed for in the arcade for when the player twirls or turns, but was never actioned. The sensors for the back are actually there! This mode adds that, and for those who feel adventurous, we will be publishing some information on how to make your own 360 8 sensor panel controller in due course.\n taitai    Announcing our 15th mode!\nTaiTai is based off of a popular game where you hit a drum in it\u0026rsquo;s face. The game is horizontally based, with the notes travelling from right to left, and you hit the drum when the note gets to the receptor. The orange notes are for the inner part of the drum, and the blue ones are for the outer rim of the drum.\nFor the moment, some of the quirkier parts of this mode are a work in progress, bear with us as we also write new parsers for this mode. We plan to add support for the special note types and other effects in the game, as well as improve timing and other bits and pieces that are still yet to do.\nOnce more, we have no theme for this yet! (We are an alpha after all!) However, we will have a theme available for this soon that will give the mode polish and a playable feel.\nWe still have the scoring and timing system to finish, along with effects on double notes/taps and the \u0026lsquo;roll\u0026rsquo; notes which you hit as much as you can. Feel free to give it a run and let us know what you think!\nThere is a collection of noteskins including Shizuka, Crystal TaiTai and others.\nThe autogen for this mode has been rewritten by Jousway to include a more TaiTai aware selection of notes, so that we do not get odd holds/overlaps in things. Give it a try!\n gddm    This release sees the long awaited updates to our gddm mode!\nThe lane drawing has been fixed, so that notes or \u0026lsquo;chips\u0026rsquo; as they are referred to display correctly, and we have properly sorted out the \u0026lsquo;merged\u0026rsquo; lane support.\nWe have planned to \u0026lsquo;straddle\u0026rsquo; support for the DTXMania NX/Ver. K layouts for the specified channels from the documentation, as these appear to be the most popular branches of this. A detailed channel support list will follow later on.\nAs of this build we have fixed loading .DTX files and these support most of the DRUM based side of the loading, see the table below. This will be improved in time, as we get better knowledge of this system.\nWe also support the \u0026lsquo;combined\u0026rsquo; lane system which adds lane 2 and lane 3\u0026rsquo;s extra notes, and Real mode (again, REAL filenames are yet to be parsed as such, the engine makes a \u0026lsquo;guess\u0026rsquo; on this!)\ngddm still needs a lot of work, and optimisation before we will consider it \u0026lsquo;ready\u0026rsquo;, so do expect the odd quirk or weird behaviour, and let us know what you think/would like to see as we define the mode and it\u0026rsquo;s featureset and support. we will be working on the gdgf parser in the coming months so that the guitar/bass charts will work as well.\nWe do not support XA file decoding at this time, we are looking into options. If you have a dtx file with XA files contained, they will just be played as silence, but won\u0026rsquo;t crash the game.   Current BMS/PMS/DTX Notedata support as of 4.9.9    Key:     ✅ Fully supported and used in Mode ✓ Fully supported and not used in Mode 📝? No Documentation on this channel\u0026rsquo;s support ❌ Not Supported / Not Available ~ Not Used  Channel Support Table       BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     01 Background Music Background Music Background Music ✅ ✅ ✅ Supported ✅   02 Measure Length Measure length Measure Multiplication factor ✅ ✅ ❌ Supported / OutFox Channel 2 lasts a measure on DTX ✅   03 Set Initial BPM Set Initial BPM Set Initial BPM ✅ ✅ ✅ Supported ✅   04 BGA Base BG Base BG Layer 1 ✅ ✅ ✅ Supported - needs enabling ✅   05 eXtended Object eXtended Object eXtended Object ✅ ✅ ✅ Supported 📝?   06 BGA Layer Miss BGA Poor Not Used ✅ ✅ ✓ Supported - needs enabling ~   07 BGA Layer BG Layer BG Layer 2 ✅ ✅ ✅ Supported - needs enabling sits above channel 4 ✅   08 Extended BPM Set BPM Extended BPM ✅ ✅ ✅ Supported - Changes bpm to value ✅   09 Stop Stop Not Used ✅ ✓ ✓ Supported ~   0A BGA Layer 2 BGA Layer 2 Not Used ✅ ✅ ✓ Supported, used for BMS/PMS ~   0B BGA Base Opacity BGA Base Opacity Not Used ❌ ❌ ~ Not Supported ~   0C BGA Layer Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0D BGA Layer 2 Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0E BGA Poor Opacity BGA Poor Opacity Not Used ❌ ❌ ~ Not Supported ~   0F Not Used Not Used Not Used ~ ~ ~ Not Used ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     10 Not Used Not Used Not Used ~ ~ ~ Not Used ~   11 P1 Key 1 P1 Left White HiHatClose ✅ ✅ ✅ Supported ✅   12 P1 Key 2 P1 Left Yellow Snare ✅ ✅ ✅ Supported ✅   13 P1 Key 3 P1 Left Green Bass Drum ✅ ✅ ✅ Supported ✅   14 P1 Key 4 P1 Left Blue High Tom ✅ ✅ ✅ Supported ✅   15 P1 Key 5 P1 Red Low Tom ✅ ✅ ✅ Supported ✅   16 P1 Turn/Scratch Not Used Cymbal ✅ ~ ✅ Supported ✅   17 P1 FootPedal Not Used Floor Tom ❌ ~ ✅ Supported ✅   18 P1 Key 6 Not Used High Hat Open ✅ ~ ✅ Supported ✅   19 P1 Key 7 Not Used Ride Cymbal ✅ ~ ✅ Supported ✅   1A Not Used Not Used Left Cymbal ~ ~ ✅ Supported ✅   1B Not Used Not Used Left Pedal ~ ~ ✅ Supported ✅   1C Not Used Not Used Left Bass Drum ~ ~ ✅ Supported ✅   1D Not Used Not Used Not Used ~ ~ ~ Supported ~   1E Not Used Not Used Not Used ~ ~ ~ Supported ~   1F Not Used Not Used Drums Fill in Sound ~ ~ ✅ Supported ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     20 Not Used Not Used Guitar OPEN ~ ~ ❌ Not Supported yet on DTX ✅   21 P2 Key 1 Not Used Guitar xxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   22 P2 Key 2 P1 Right Blue Guitar xGxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   23 P2 Key 3 P1 Right Green Guitar xGBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   24 P2 Key 4 P1 Right Yellow Guitar Rxxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   25 P2 Key 5 P1 Right White Guitar RxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   26 P2 Turn/Scratch Not Used Guitar RGxxx ✅ ~ ❌ Not Supported yet on DTX ✅   27 P2 FootPedal Not Used Guitar RGBxx ❌ ~ ❌ Not Supported yet on DTX ✅   28 P2 Key 6 Not Used Guitar Wail ✅ ~ ❌ Not Supported yet on DTX ✅   29 P2 Key 7 Not Used Not Supported ✅ ~ ~ Supported ~   2A Not Used Not Used Not Supported ~ ~ ~ Not Used ~   2B Not Used Not Used Not Used ~ ~ ~ Not Used ~   2C Not Used Not Used Guitar Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2D Not Used Not Used Bass Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2E Not Used Not Used Not Used ~ ~ ~ Supported ~   2F Not Used Not Used Guitar Wailing Sound ~ ~ ❌ Not Supported yet on DTX ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     30 Not Used Not Used Not Used ~ ~ ~ Not Used ~   31 P1 Key 1 Hidden P1 Left White Hidden HiHatClose Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   32 P1 Key 2 Hidden P1 Left Yellow Hidden Snare Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   33 P1 Key 3 Hidden P1 Left Green Hidden Bass Drum Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   34 P1 Key 4 Hidden P1 Left Blue Hidden High Tom Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   35 P1 Key 5 Hidden Not Used Low Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   36 P1 Turn/Scratch Hidden Not Used Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   37 P1 FootPedal Hidden Not Used Floor Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   38 P1 Key 6 Hidden Not Used High Hat Open Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   39 P1 Key 7 Hidden Not Used Ride Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   3A Not Used Not Used Left Cymbal Hidden Note ~ ~ ✅ Supported ✅   3B Not Used Not Used Left Pedal Hidden Note ~ ~ ✅ Supported ✅   3C Not Used Not Used Left Bass Drum Hidden Note ~ ~ ✅ Supported ✅   3D Not Used Not Used Not Used ~ ~ ~ Supported ~   3E Not Used Not Used Not Used ~ ~ ~ Supported ~   3F Not Used Not Used Not Used ~ ~ ~ Supported ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     40 Not Used Not Used Not Used ~ ~ ~ Not Used ~   41 P2 Key 1 Hidden Not Used Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   42 P2 Key 2 Hidden P1 Right Blue Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   43 P2 Key 3 Hidden P1 Right Green Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   44 P2 Key 4 Hidden P1 Right Yellow Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   45 P2 Key 5 Hidden P1 Right White Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   46 P2 Turn/Scratch Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   47 P2 FootPedal Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   48 P2 Key 6 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   49 P2 Key 7 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   4A Not Used Not Used Not Used ~ ~ ~ Not Used ~   4B Not Used Not Used Not Used ~ ~ ~ Not Used ~   4C Not Used Not Used Bonus 04 ~ ~ ❌ Not Supported ✅   4D Not Used Not Used Bonus 03 ~ ~ ❌ Not Supported ✅   4E Not Used Not Used Bonus 02 ~ ~ ❌ Not Supported ✅   4F Not Used Not Used Bonus 01 ~ ~ ❌ Not Supported ✅    Sound Effect Channels 01 to 32 on DTX are also supported.\nFor the complete table see Our Wiki (coming shortly as squirrel needs to finish writing them!)\n Reordered Game Mode Select Screen    This alpha with the fact we have begun to introduce new modes and features, we have reordered the game modes based on some player/community feedback, with the \u0026lsquo;lesser\u0026rsquo; or \u0026lsquo;niche\u0026rsquo; modes moving down a bit in the order. Makes it easier to find things you need, and please give us feedback if you feel a mode needs more representing/love!\n Mac OS builds are now signed!    We have finally passed all the requirements to be able to sign the binary, so this means no more xattr stuff anymore! we just act like any other application.\n Mode Status:     New Cross Platform MIDI Driver!    Due to the interest we had been getting from the past two alpha releases in the form of gddm and techno, several players that were not on windows did enquire about the possibility of there being a new MIDI driver available for Mac and Linux users to make use of for their midi fighters, e-drums, etc and we decided as a team to move forward and produce one.\nThe midi driver stands alone, there is no need to have any extra applications \u0026lsquo;translating\u0026rsquo; it to keystrokes, (unless you\u0026rsquo;re doing midi via an iphone or something like that of course), but native midi controllers work a treat. If you have a midi device and want to try this out, you will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=portmidi,SDL\nThis will allow the midi driver to load, and set up your device. We have currently coded it for a single device at a time, but do let us know if you feel there is a need for multiple device support, or if you find a device that doesn\u0026rsquo;t behave!\nI also was able to make a prototype mini FSR pad for midi using a teensy LC and some tiny FSR sensors:\nThis worked a treat, so you can definitely get on to some tinkering if you want to make your own devices to play the game!\nThis driver works on Windows, Linux, RPi, Mac OS (intel) / Mac OS (M1) and Rockchip aarch64 SoCs    We are still working on latency and control, so let us know if you find anything quirky!\n Windows legacy input driver    There has also been work done on a small side part of the game, while we have been waiting for a fix from upstream in regards to the \u0026lsquo;polling/framerate\u0026rsquo; issue that a lot of folks have helping us diagnose for some time. The long and the short of the issue, it meant on some songs, the input would skew towards the update loop rather than honouring it\u0026rsquo;s timestamp, thus producing \u0026lsquo;spikes\u0026rsquo; on the scoring graph at the end of the song, and make a odd looking \u0026lsquo;stair\u0026rsquo; display on the scatter plot of the steps and judgements taken.\nTo resolve this while we\u0026rsquo;re waiting a fix, we have reimplemented the old legacy driver that was on 5.2/5.1 and adapted it for OutFox. This driver can be tempremental, but it seemed to behave with the devices we tested it with. If you tend to find that your input is affected with the message loop issue, you can set up the driver with the following instructions.\nYou will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=legacy,minisdl\n(if you wish to use the new portmidi driver as well you can use InputDrivers=legacy,minisdl,portmidi)\nThis will allow you to run the game with minimal resources, keeping vsync on, and should remove any previous issues of fps/rate/polling problems. When we have the fix from upstream, we\u0026rsquo;ll revisit and modernise this with the newer drivers and processes.\nOn the \u0026lsquo;test input\u0026rsquo; screen, you will see a new Window Handler \u0026lsquo;Aux\u0026rsquo; driver. This is just the driver that manages the window controls, maximises, fullscreens, etc, so no need to worry about it. This will also show you, that you have the correct drivers selected in the inputdrivers setting.\n Rate and Pitch Changes:    Due to an overwhelming set of requests, we have taken time to fix and modernise the rate/haste system which had been broken for a bit since this project began.\nPitch seemed to be a lottery (though we had not seen it work) and all the rate mod used to do was seemingly speed up the song with no other effect or option being honoured.\nSimilarly, we have moved the ratemod to the first screen of the song options - thanks to the stamina players that popped in to request this, and to mattm for saying that most wanted a speed AND pitch option, which we have called \u0026lsquo;both\u0026rsquo; internally to signify this change.\nThe new layout looks like so:\nWe have fixed the way the off/speed/pitch/speed and pitch options work, so they actually work. This took quite a bit of time to fix the internal pipelines for these, but the end effect is definitely fun. Thanks to Squirrel, Jousway and Jose for bringing this one up the pipeline to get it done for this release!\nTo ensure compatibility with legacy themes, the system \u0026lsquo;defaults\u0026rsquo; to how it was in 5.0.12, with a 0.01x increase, and being on the main menu as folks requested. This is a long overdue Quality of Life update for this, so we\u0026rsquo;re really pleased it\u0026rsquo;s done.\n KNOWN ISSUES: Alpha 4.9.9     ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE gddm mode: We do not support the XA codec at this time, it\u0026rsquo;ll play silent. ❕❌ ISSUE beat/popn/gddm some early (pre2013) songs may play some sound samples / keysounds at the wrong speed   Full Changelog Follows:    ALL:    Mode Specific\n ❕✅ Fixed DTX Detection of track/lane sizes overflowing the notefield ❕✅ Fixed BMS/DTX/PMS Keysound iterator edge crash ❕✅ New! DTX Fixed Channel allocation ❕✅ New! DTX REAL mode (10 Lane support) ❕✅ New! DTX Dual Note support for lanes that require it ❕✅ New! DTX DTX 1A/1B/1C note channel support ❕✅ New! DTX Parser Support ❕✅ Fixed gh noteskin position issue ❕✅ Fixed popn roll note type explosion ❕✅ Fixed BMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed PMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed DTX missing difficulties (Thanks InfinitePhantasm!) ❕✅ New! Added main drum types to DTX loader ❕✅ New! para 8 sensor 360 degree arcade style mode ❕✅ New! Added popn 18 lane (effectively popn-doubles) ❕✅ Fixed BMS Loader array ❕✅ Fixed B36 conversion on BMS/PMS/DTX ❕✅ Fixed PMS Loader array ❕✅ Fixed PMS layouts for 2 player ❕✅ Added popn doubles to style metrics ❕✅ New! Added taitai mode ❕✅ Fixed taitai layout and screen gameplay ❕✅ New! Added taitai to game selection screen ❕✅ Fixed dance row restrictions affecting all modes ❕✅ Fixed bug with double image caching on pump and dance ❕✅ Fixed missing beat content not installed ❕✅ Fixed gdgf issues with strumming ❕✅ Fixed crash with 2 player popn not setting locked difficulties ❕✅ Fixed seeded 2 player shuffle for dance/popn/beat ❕✅ Raise maximum player tracks to 20 ❕✅ Fixed \u0026lsquo;roulette\u0026rsquo; of sound volume of game assets ❕✅ Added support to modfiles for 1 column modes ❕✅ Fixed crash on 1 column modes ❕✅ Fixed taitai skins with the rewrite of taitai  Engine\n ❕✅ New! AutoGen Marker layouts in ScreenSelectMusic ❕✅ New! Haste RateMod control ❕✅ New! Linux RAW support ❕✅ New! JoyStick Threads ❕✅ Fixed x11 title bug in SDL preventing updates to upstream ❕✅ Fixed Ordering of GetBestFullComboTapNoteScore ❕✅ Fixed StepCollector lag in evaluation ❕✅ Fixed NoteDisplay errors in evaluation calculations ❕✅ Fixed common noteskin errors ❕✅ Fixed video banners breaking when backing out (Thanks Jubo!) ❕✅ Fixed video initialisation issue causing some videos to fail to load ❕✅ New! Initial Minefields ❕✅ Fixed extra debug lines ❕✅ Fixed Access Violation on GeForce 4, 100 and 200 series cards ❕✅ Fixed Access Violation on Radeon 5000, 6000 and 7000 series cards ❕✅ New! Optimised compilation chain for AMD based processors ❕✅ Fixed mines appearing in holds issue ❕✅ Fixed ModIconRow cycling into an infinite loop causing freezes on some menus ❕✅ Fixed note updates and crash on HowToPlay ❕✅ Fixed crash with some keysounds while in Editor ❕✅ Fixed hold head active and inactive being swapped on some modes ❕✅ Fixed score calculation on screen evaluation ❕✅ Fixed random mine explosions appearing due to a misplaced math calculation ❕✅ Fixed player calculations   ❕✅ Fixed errors in ArrowEffects ❕✅ Fixed RNG engine needlessly being called ❕✅ Fixed RNG stutter ❕✅ Removed RandomGen from the game for a more modern equivalent ❕✅ Fixed global calls and RNG seeds not being used ❕✅ Fixed linux compile and GCC complaints ❕✅ New! Die Rolling / Coin Flip RNG options ❕✅ Fixed duplicate Actor refresh call ❕✅ Fixed spiralz/spiralx overflow in axis calculation ❕✅ New! Added VSync High CPU when not focused pipe ❕✅ New! Added F3 + H for high cpu toggle for streamers ❕✅ Fixed Application knowing whether or not it has focus ❕✅ New! Added faster pow^2 math ❕✅ Forced mipmapping off on things that do not need it ❕✅ New! Added nanosvg support for SVG loading ❕✅ New! Added text support for SVG loading ❕✅ Fixed missing file closure in Rage image loading ❕✅ Fixed parsing of notedata in notedisplay ❕✅ Fixed handle releasing on some textures ❕✅ Fixed bug with notefield math ❕✅ Fixed Soundreader issues with mislabelled songs ❕✅ Fixed Lua Number type casting in NoteField ❕✅ Fixed compiler optimisations causing an AV in note display ❕✅ Fixed surface headers overflow in image loading ❕✅ Fixed bug with GL detection (Thanks Jousway!) ❕✅ Fixed Misaligned notefields with two players ❕✅ Fixed hid issue with some older pads ❕✅ Fixed hold heads being missed when correctly hit ❕✅ Fixed holds shorter than 1/16th being missed ❕✅ Fixed cleanup of elements in screengameplay ❕✅ New! Restored edit mode timing signatures option ❕✅ New! Added modern \u0026lsquo;pseudo\u0026rsquo; RNG to replicate missed \u0026lsquo;expected\u0026rsquo; SM5.x behaviour ❕✅ Fixed bug with missing buttons not being initialised ❕✅ New! Added new Lua hooks to allow consistent modfile RNG generation ❕✅ New! Added new Hardware MIDI handles to allow ultra low latency control ❕✅ Fixed issues with DTX based drumkits only using MIDI channel 9 to send off commands ❕✅ Fixed issues with DJ and Midi fighter style controllers having \u0026lsquo;stuck\u0026rsquo; pad keys ❕✅ New! Added new clap assist sound effect: Drumstick ❕✅ New! Added new metronome sound effect: Pan Lid ❕✅ Fixed bug with metronome and measure sounds ❕✅ New! Added new GL system for initialisation and checking, which is linux safe (Thanks Jous!) ❕✅ New! Added helper message for those with a d3d based renderer entry in their preference.ini ❕✅ Fixed crash with anyone using a 5.0/5.1 d3d entry ❕✅ New! Added effect volume F3 + F / F3 + G option on debug menu ❕✅ Fixed bug that used Windows 98 era code instead of modern equivalents ❕✅ Fixed effect volume turning down the Gameplay music ❕✅ Fixed SDL Init() system ❕✅ Fixed Model animations on P1 when both players are on ❕✅ Fixed Sound reader memory leak issues ❕✅ Fixed SDL input grabbing device handles it shouldn\u0026rsquo;t ❕✅ Fixed adaptable Windows handler so we can detach it from being a massive driver ❕✅ New! Restored Windows resize functions lost due to an SDL bug ❕✅ New! Maximise and Minimise window functions now operate as planned ❕✅ Fixed Lua faults reported in a few noteskins ❕✅ Fixed Bad enumeration generation ❕✅ Adjusted polling system to reduce CPU load ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ Fixed duplicate calls to DrawHoldPart() ❕✅ Fixed some controller events being stuck in the queue ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ New! restore Haste to the game ❕✅ Fixed math overflow with Haste ❕✅ Fixed application of Haste within the engine, to prevent odd uses outside of gameplay ❕✅ Fixed re-sampler and command queue for Haste ❕✅ New! moved Haste to an easier menu option ❕✅ Fixed crash with Haste not obeying sound effect option ❕✅ New! Added \u0026lsquo;SoundEffectBoth\u0026rsquo; (Speed + Pitch) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectPitch\u0026rsquo; (Pitch Shift) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectOff\u0026rsquo; (No Effect) option for rate mods ❕✅ Fixed speed being applied on every option ❕✅ Fixed crash with rate \u0026lt; 1.0 on pitch shift ❕✅ Fixed crash with rate \u0026gt; 1.7 on pitch shift ❕✅ Fixed crash in re-sampler when using Speed and Pitch options ❕✅ New! Move Rate mods to an easier menu option ❕✅ Fixed speed mod being called twice when rate was used ❕✅ Fixed smartsort on player options ❕✅ Fixed outfox-color-holds ❕✅ Restored set-color and set-effect ❕✅ Fixed BAO charging for 2 credits ❕✅ Fixed luastring parsing causing an edge crash on models ❕✅ Fixed race condition in BGLayer\u0026rsquo;s loading and unloading systems ❕✅ Fixed pre 2011 Ogg encoder bugged 44,099hz tracks crashing the game ❕✅ Fixed Sound loader buffer overflow ❕✅ Fixed image loader sometimes creating a transparent image ❕✅ Fixed mod parsing speed ❕✅ Fixed illegal OS keyworded lua call ❕✅ Fixed UTF uppercase conversion ❕✅ Fixed Locale lag on some parsing modules ❕✅ Fix Attack sync ❕✅ New! LoadActorForNoteSkin to set color and effect variables ❕✅ New! Beginning of Shift-JIS conversion support ❕✅ New! Force Nvidia/Intel Drivers to correctly update ❕✅ Fixed mouse calls in Lua ❕✅ New! Preference to turn off the deltaclock timer on the stats in top right ❕✅ Fixed character loading race condition ❕✅ Fixed StepsSelector module ❕✅ Fixed dangling file handles (closes #110 and #36 ) ❕✅ Fixed KeySound iterator to prevent edge crash on linux ❕✅ Fixed ratemod application for legacy themes ❕✅ Fixed pitch and rate being tied in the effect filter ❕✅ Fixed mismatched placements of notefields on some of the different modes  Windows 7+:\n ❕✅ Fixed several issues with SDL2\u0026rsquo;s pipeline that was causing weird slowdowns ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed issue with win32 midi driver ❕✅ Made the renderer drivers 64bit safe in preparation for 64bit build ❕✅🐲 New! Win32 Legacy Driver - part fixes #48 ❕✅🐲 New! MiniSDL Window handler - part fixes #48  Linux:\n ❕✅ Added PipeWire driver stub - work in progress ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Fixed Missing handle in renderer causing some odd edge crashes on KDE ❕✅ New! Cross Platform PortMIDI driver!  MacOS (Intel):\n ❕✅ Added tweaks to the initialisation method for low level windows to prevent the loading window ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  MacOS (Arm M1):\n ❕✅ Fixed issue with an edge case lag spike with M1 Airs with using Bluetooth Sound/Controllers ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Added pipewire driver stub - work in progress ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ New! Cross Platform PortMIDI driver!  Community content    Noteskins     ✅ New! gddmnoteskin: default with real support from Jousway ✅ New! ez2 noteskin: default from Lirodon ✅ New! taiko noteskin: crystal-taitai from Lirodon ✅ New! taiko noteskin: shizuka from Lirodon (graphics) and Jousway ✅ New! taiko noteskin: taitai and taitai3d from Jousway ✅ New! gdgf noteskin guitarDTX by yaladre  Theme     ✅ New! Soundwaves color scheme Golden Dawn by Moru. ✅ All other color schemes previously exclusive to Soundwaves Community Edition have been brought upstream (\u0026ldquo;BISTRO\u0026rdquo;, \u0026ldquo;Invert Standard\u0026rdquo;, \u0026ldquo;Rainbow FUN\u0026rdquo;, \u0026ldquo;Baby Pink\u0026rdquo;, \u0026ldquo;Sunny Day\u0026rdquo;, and \u0026ldquo;The Blood\u0026rdquo;) ✅ New! Soundwaves feature by Ksempac (merged from Soundwaves Community Edition); color scheme system now supports changing difficulty colors (check out Fuego and CincoCero for examples).  Translations     ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  "},{"id":1,"href":"/releases/A4.9.9HF2/","title":"OutFox Alpha 4.9.9HF2 Build","parent":"Release History","content":"Release Date: 6th August 2021    \u0026ldquo;How\u0026rsquo;s that new feature coming along?\u0026quot;    (Incorporates Internal Builds 4.9.9HF2-rc0 to 4.9.9HF2-rc3) (Incorporates Internal Builds 4.9.9HF-rc0 to 4.9.9HF-rc4)\nThis build fixes several of the reported bugs, as we had to pull the previous release due to operating system updates between release dates. Sometimes having a monthly release schedule is awesome, but it does tire us out!\nAnyways\u0026hellip; Lets get back to the update.\nThis mini hotfix (v2) includes a few things we were going to leave to the next release, but as we had to fix bugs in them anyway, it was easier to apply.\nALL:     ❕✅ Fixed SM hash corruption ❕✅ Fixed DWI being loaded due to lazy people not cleaning their simfile folders ❕✅ The system will not load DWI if an ssc or sm is found ❕✅ Fixed odd SM title bug ❕✅ Fixed Crash with older hardware not supporting what it advertises ❕✅ Fixed Crash with course loading that affected some folks with \u0026gt;640 songs ❕✅ Fixed Notesloader issues with Mac and Linux ❕✅ Fixed GCC / Mac compile ❕✅ Fixed Windows 10/11 affinity issues ❕✅ Fixed Occasional spike on Windows 10/11 when using an XInput controller ❕✅ Taiko adjustments for notefield ❕✅ Fixed SM/SSC loading to be more cabinet friendly.   Signed Mac builds update!    The big news is we (now finally!) have passed the prerequisites for GateKeeper on Mac, so this hotfix should behave and work fine, without any issues. Do remember to just drag and drop as the dmg lets you know how to do so, and it will run as other applications. Thanks to Jose and Squirrel for their efforts, and Jose for puzzling through, and Jousway for fixing one of the bugs in gh mode which was causing issuess as well.\n Notes Loading    There were several issues with the notes loaders and how antivirus/software protection apps were seeing OutFox when we were loading simfiles. This alpha hotfix now has addressed this by allowing you all to add more than one simfile in a song folder, cutting down on the folder rabbit hole. As we move to a more multi-game engine, this will also allow you to keep things tidy on your drive, and ensure it is a seamless experience for you all. Of course, please check the audio files are the same for the chart you are going to add to the folder, as you may find you have a nasty sync issue, but we also now support multidifficulty setups, as this is required for pump and taiko specifically.\n Difficulty System Revamp    This hotfix also sees a tweak to the difficulty system used in OutFox. In the past it was tied to the DDR paradigm and then left to rot as one of those \u0026lsquo;StepMania Things\u0026rsquo;. This however really stifled what we could do within the engine, especially with modes with different names/brackets etc. With the release of gddm and taiko we needed more difficulties than the game offered, so this has now been resolved. Themes which are based off of 5.1/5.0.x will still work due to the numbers being the same as before. If there are any issues with your theme, do let us know, but we have tested several with no issues.\n New #VOLUME and #PAN    These features have been missing from our keysound support since 2002, and we are proud to say that we have them in this hotfix! They are completely supported in gddm from the parser, (do reset your cache of course!) and they also work in beat/popn. taiko will need the support as well, so shout out to Jous for putting up with my waaaahh-luigi on getting it added to the game. This build also supports the hidden chips/keysounds for gddm and we\u0026rsquo;ll work on getting the final compatibility added in due course.\n New gh Modernisation    Due to the need to run with a slightly more secure runtime on Mac OS Catalina/Big Sur/Monterey on the Intel based macs there were some functions in our gh mode which gatekeeper did not approve of. The way the notes were cast have been fixed, fever/star power has been sorted to be more gh3 like, and taps and open strums are also tweaked to be better. Please give them a try and let us know! A theme for this mode is in the works, so apologies for the barebone approach we have at the moment. It\u0026rsquo;s also why we are an alpha after all\u0026hellip;\nALL:    Mode Specific\n ❕✅ Fixed SM/SSC Noteloader corruption with some Japanese and Korean Titles/Artists on dance notesloaders ❕✅ Fixed DTX Noteloader memory leak ❕✅ Fixed DTX Parser missing some drums in gddm mode ❕✅ Fixed BMS Keysounds not seeking/reading correctly ❕✅ Fixed PMS Keysounds not buffering correctly ❕✅ Modernise Keysound system to prevent buffer under-runs ❕✅ Fix BMS/PMS missing channels, Hidden notes will come next Alpha ❕✅ Fix beat crash with charts that had more than 866 keysounds ❕✅ Fix popn crash with charts that had more than 1022 keysounds ❕✅ Fix #VOLUME not being applied correctly to beat and gddm keysounds ❕✅ Fix #PAN not being applied to beat and popn keysounds ❕✅ Fix gh loading crash with some older charts. ❕✅ Fixed RageSound preload causing missing chips in gddm and notes in beat ❕✅ Fixed gh crash due to an overzealous lightsman double update ❕✅ Fixed crash in DTX/BMS/PMS due to strings being over optimised on Mac Intel/Linux ❕✅ Fixed gh note types to please the Mac OS gatekeeper gods ❕✅ Fixed gh open strum notes ❕✅ Fixed gh fever to be closer to gh3 ❕✅ New gh HOPO notes system ❕✅ Fixed gh tap notes not showing up sometimes on older CHART files  Engine\n ❕✅ Fixed Screen msg Bug - Closes 17 year old issue ❕✅ Fixed crash in Jukebox with non-dance modes ❕✅ Fixed overflow in tween awareness - Closes 14 year old issue ❕✅ Fixed Actor overflow on tween actions - Closes 14 year old issue ❕✅ Fixed OptionsPrefs issue - Closes #375 ❕✅ Fixed editor scrolling issue ❕✅ Fixed editor buffer overflow when using \u0026gt;496 keysounds ❕✅ Fixed editor input being sent garbage ❕✅ Fixed editor input parser arrays ❕✅ Fixed crash in practice mode ❕✅ Fixed endless loop with some older BMS/PMS charts in practice mode - Thanks EDMSPack ❕✅ Fixed potential buffer overflow exploit in soundreader ❕✅ Fixed keysounds being stopped when they didn\u0026rsquo;t need to be, forcing a reload of the sound ❕✅ Fixed Keysound index system ❕✅ New Added save on exit theme metrics for option screens ❕✅ Fixed freeze on game select screen due to missing module - Thanks Kaede! ❕✅ Modernised the notesloader system in preparation for more loaders ❕✅ Fixed some types of charts being erroroneously skipped during the parse load ❕✅ NEW Multi Sim File Loading from 1 directory ❕✅ NEW Non DDR difficulty system so we can properly support other modes  Linux\n ❕✅ Fixed crash on linux versions that do not support the new Neutral Vendor libraries ❕✅ Fixed crash on Debian/Ubuntu/Fedora/Arch with inifile due to a race condition ❕✅ Fixed edge case crash on Clear/Fedora preventing the game booting on some 4.x / \u0026lt; 5.1 Kernels  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Fixed edge case crash on Twister/Raspbian preventing the game booting on some 4.x Kernels ❕✅ Fixed crash on Raspbian with inifile due to a race condition ❕✅ Fixed crash on RockPi 4B/4C when not using the first HDMI port/Audio  Mac OS\n ❕✅ Fixed input with guitar hero based controllers ❕✅ Rewrote internal gh mode to fix overly harsh input restrictions ❕✅ Fixed internal system to be signed compliant ❕✅ New enhanced build pipeline to ensure signing passes on Mac OS Intel ❕✅ New streamlined and optimised code for Mac M1 now we are properly signed   KNOWN ISSUES: Alpha 4.9.9HF     ❕❌ ISSUE Song Charts will not pan the player correctly when being played ❕❌ ISSUE Playing beat/popnsongs on Endless Mode may have a crash on song loading. Please be aware that course mode for these modes are a bit tempremental at the moment! ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE gddm mode: We do not support the XA codec at this time, it\u0026rsquo;ll play silent. ❕❌ ISSUE beat/popn/gddm some early (pre2013) songs may play some sound samples / keysounds at the wrong speed   Release Date: 31st July 2021    \u0026ldquo;Hey! Why don\u0026rsquo;t you just get up and dance, man?\u0026quot;    (Incorporates Internal Builds 4.9.8.1 to 4.9.8.6BE) (Incorporates Internal Builds 4.9.9-rc0 to 4.9.9-rc8)\nAlpha Statistics       Commits Changed files Additions Deletions     433 2079 185,205 29,552    In Memorium of SHIKI, a long running well known game music musician, who gave us over two decades of music spanning dance, vocaloid and techno, most of which was charted into BMS, SM and others, sadly passed away this month.    This alpha, our loading screen is in memory of one of his more famous StepMania Based Charts, Air.\nAir\nDigitalic Rain\nAngellic Layer\nSETSUNA (feat. Hatsune Miku)\nRest In Peace.    SHIKI ?? - 6th July 2021.     TEXTURE FONT GENERATOR V0.34     ❕✅🐲📝 Added ? \u0026amp; ! to number glyph profile ❕✅🐲📝 Fixed MFC overflow preventing compile ❕✅🐲📝 Fixed PNG causing a crash on legacy codepages ❕✅🐲📝 Fixed compile on visual studio community 2019  This build requires a cache reset if you are on Linux or MacOS, due to the internal changes. Please find your save folder and delete the contents of /cache. This will make your first time run of 4.9.9 slightly longer as it has to rebuild the index, but it is to accommodate the new modes/setup etc. Please remember to restart the game after doing a cache build, so you do not have as many issues with memory management.  New (and some Old!) Modes Update Version 2    Following on from the last release, we have continued to improve and revamp the note system for the new modes, with Jousway taking the time to make available new types and styles available that were never before. This month fixes some omissions we made from the last release, which slipped through the testing teams.\n pump    We have fixed the scoring bug that was in the previous build, and thank you for those who took the time to report the issues. Keep in mind that Soundwaves still uses \u0026lsquo;dance\u0026rsquo; paradigms for scoring, but other themes that use different scoring systems based on \u0026lsquo;pump/piu\u0026rsquo; should work correctly now.\nThe tick-count has been tweaked to work correctly as there was a miscalculation in the offset math inherited from upstream. This now behaves as expected.\nGetting random misses on hold heads has been resolved as well as the holds with small tails (mini/micro holds).\nSupport for co-op charts has been added. 5 player is introduced with up to 10 players support, though the noteskins have not been prepared at this time. The numbers on the noteskins are separately labeled so with a few adjustments and extra assets you will be able to update any noteskin to work with co-op. Co-op charts made on StepF2/StepP1 should work on OutFox, however, better note types are currently being developed by Jousway so that there can be more than 3 real players defined. Stay tuned!\nThose of you who have reported that we still have a \u0026lsquo;superb\u0026rsquo; bug on holds, this will be fixed when we introduce the new piu mode - remember the pump mode is getting Quality of Life updates for now, before we move over to updating things properly in the future.\nMicro/Miniholds also do not trigger misses/cause a weird tick to happen anymore, and there also are no \u0026lsquo;phantom\u0026rsquo; mines in long (5+ measure) holds - this was an oddity which has been fixed now.\nWe\u0026rsquo;re still working on improving SF2/SP1 custom charts parsing. Except for a few charts, you can play the majority of content made for it on OutFox with no problems. As always, if you find any oddities make sure you report them to us!\n popn    There was also a reported issue where some of the channels (lanes) of the PMS 7 button mode were not parsing correctly, or were actually being missed completely, resulting in a chart \u0026lsquo;misplacing\u0026rsquo; green and blue lanes. This was due to Squirrel misreading the spec on how BMS98/PMS was transcribed and set up the function wrong. It is fixed in this release.\nWe also have added 18 lane mode (No PMS/(BME) File support yet though!)\nThank you to all of those that took the time to report this and to kick us into getting outfox into a proper BMS/PMS parser. There are still a few features missing from po-mu mode, but these will be added to the game as per the spec (see the table below for more information.)\npopn mode also had a few tweaks and adjustments this alpha mainly in how keysounds are loaded within the game. This should now mean the mode should be smoother overall.\nThanks to the channels being set right, we also are happy to announce another feature to \u0026lsquo;popn\u0026rsquo; mode: 2 player! This was not available on the original client, but it did always irk us how there was never 2 player options other than 3 button battle. In a future update, there will be a battle mode for \u0026lsquo;popn\u0026rsquo; but for now, enjoy the 2 player fun. We will finally be having a theme for \u0026lsquo;popn\u0026rsquo; in OutFox really soon, so this is finally a move from the \u0026lsquo;dance\u0026rsquo; centric era of the application\u0026rsquo;s past.\nHave some fun with mod files from dance on popn-four\nbeat will be getting some attention this next quarter!     para    We have given this mode a polish (and for those with an arcade cab, with 3 sensors doing nothing!) we added the \u0026lsquo;fabled\u0026rsquo; 360, or 8 sensor mode. This mode was designed for in the arcade for when the player twirls or turns, but was never actioned. The sensors for the back are actually there! This mode adds that, and for those who feel adventurous, we will be publishing some information on how to make your own 360 8 sensor panel controller in due course.\n taitai    Announcing our 15th mode!\nTaiTai is based off of a popular game where you hit a drum in it\u0026rsquo;s face. The game is horizontally based, with the notes travelling from right to left, and you hit the drum when the note gets to the receptor. The orange notes are for the inner part of the drum, and the blue ones are for the outer rim of the drum.\nFor the moment, some of the quirkier parts of this mode are a work in progress, bear with us as we also write new parsers for this mode. We plan to add support for the special note types and other effects in the game, as well as improve timing and other bits and pieces that are still yet to do.\nOnce more, we have no theme for this yet! (We are an alpha after all!) However, we will have a theme available for this soon that will give the mode polish and a playable feel.\nWe still have the scoring and timing system to finish, along with effects on double notes/taps and the \u0026lsquo;roll\u0026rsquo; notes which you hit as much as you can. Feel free to give it a run and let us know what you think!\nThere is a collection of noteskins including Shizuka, Crystal TaiTai and others.\nThe autogen for this mode has been rewritten by Jousway to include a more TaiTai aware selection of notes, so that we do not get odd holds/overlaps in things. Give it a try!\n gddm    This release sees the long awaited updates to our gddm mode!\nThe lane drawing has been fixed, so that notes or \u0026lsquo;chips\u0026rsquo; as they are referred to display correctly, and we have properly sorted out the \u0026lsquo;merged\u0026rsquo; lane support.\nWe have planned to \u0026lsquo;straddle\u0026rsquo; support for the DTXMania NX/Ver. K layouts for the specified channels from the documentation, as these appear to be the most popular branches of this. A detailed channel support list will follow later on.\nAs of this build we have fixed loading .DTX files and these support most of the DRUM based side of the loading, see the table below. This will be improved in time, as we get better knowledge of this system.\nWe also support the \u0026lsquo;combined\u0026rsquo; lane system which adds lane 2 and lane 3\u0026rsquo;s extra notes, and Real mode (again, REAL filenames are yet to be parsed as such, the engine makes a \u0026lsquo;guess\u0026rsquo; on this!)\ngddm still needs a lot of work, and optimisation before we will consider it \u0026lsquo;ready\u0026rsquo;, so do expect the odd quirk or weird behaviour, and let us know what you think/would like to see as we define the mode and it\u0026rsquo;s featureset and support. we will be working on the gdgf parser in the coming months so that the guitar/bass charts will work as well.\nWe do not support XA file decoding at this time, we are looking into options. If you have a dtx file with XA files contained, they will just be played as silence, but won\u0026rsquo;t crash the game.   Current BMS/PMS/DTX Notedata support as of 4.9.9    Key:     ✅ Fully supported and used in Mode ✓ Fully supported and not used in Mode 📝? No Documentation on this channel\u0026rsquo;s support ❌ Not Supported / Not Available ~ Not Used  Channel Support Table       BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     01 Background Music Background Music Background Music ✅ ✅ ✅ Supported ✅   02 Measure Length Measure length Measure Multiplication factor ✅ ✅ ❌ Supported / OutFox Channel 2 lasts a measure on DTX ✅   03 Set Initial BPM Set Initial BPM Set Initial BPM ✅ ✅ ✅ Supported ✅   04 BGA Base BG Base BG Layer 1 ✅ ✅ ✅ Supported - needs enabling ✅   05 eXtended Object eXtended Object eXtended Object ✅ ✅ ✅ Supported 📝?   06 BGA Layer Miss BGA Poor Not Used ✅ ✅ ✓ Supported - needs enabling ~   07 BGA Layer BG Layer BG Layer 2 ✅ ✅ ✅ Supported - needs enabling sits above channel 4 ✅   08 Extended BPM Set BPM Extended BPM ✅ ✅ ✅ Supported - Changes bpm to value ✅   09 Stop Stop Not Used ✅ ✓ ✓ Supported ~   0A BGA Layer 2 BGA Layer 2 Not Used ✅ ✅ ✓ Supported, used for BMS/PMS ~   0B BGA Base Opacity BGA Base Opacity Not Used ❌ ❌ ~ Not Supported ~   0C BGA Layer Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0D BGA Layer 2 Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0E BGA Poor Opacity BGA Poor Opacity Not Used ❌ ❌ ~ Not Supported ~   0F Not Used Not Used Not Used ~ ~ ~ Not Used ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     10 Not Used Not Used Not Used ~ ~ ~ Not Used ~   11 P1 Key 1 P1 Left White HiHatClose ✅ ✅ ✅ Supported ✅   12 P1 Key 2 P1 Left Yellow Snare ✅ ✅ ✅ Supported ✅   13 P1 Key 3 P1 Left Green Bass Drum ✅ ✅ ✅ Supported ✅   14 P1 Key 4 P1 Left Blue High Tom ✅ ✅ ✅ Supported ✅   15 P1 Key 5 P1 Red Low Tom ✅ ✅ ✅ Supported ✅   16 P1 Turn/Scratch Not Used Cymbal ✅ ~ ✅ Supported ✅   17 P1 FootPedal Not Used Floor Tom ❌ ~ ✅ Supported ✅   18 P1 Key 6 Not Used High Hat Open ✅ ~ ✅ Supported ✅   19 P1 Key 7 Not Used Ride Cymbal ✅ ~ ✅ Supported ✅   1A Not Used Not Used Left Cymbal ~ ~ ✅ Supported ✅   1B Not Used Not Used Left Pedal ~ ~ ✅ Supported ✅   1C Not Used Not Used Left Bass Drum ~ ~ ✅ Supported ✅   1D Not Used Not Used Not Used ~ ~ ~ Supported ~   1E Not Used Not Used Not Used ~ ~ ~ Supported ~   1F Not Used Not Used Drums Fill in Sound ~ ~ ✅ Supported ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     20 Not Used Not Used Guitar OPEN ~ ~ ❌ Not Supported yet on DTX ✅   21 P2 Key 1 Not Used Guitar xxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   22 P2 Key 2 P1 Right Blue Guitar xGxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   23 P2 Key 3 P1 Right Green Guitar xGBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   24 P2 Key 4 P1 Right Yellow Guitar Rxxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   25 P2 Key 5 P1 Right White Guitar RxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   26 P2 Turn/Scratch Not Used Guitar RGxxx ✅ ~ ❌ Not Supported yet on DTX ✅   27 P2 FootPedal Not Used Guitar RGBxx ❌ ~ ❌ Not Supported yet on DTX ✅   28 P2 Key 6 Not Used Guitar Wail ✅ ~ ❌ Not Supported yet on DTX ✅   29 P2 Key 7 Not Used Not Supported ✅ ~ ~ Supported ~   2A Not Used Not Used Not Supported ~ ~ ~ Not Used ~   2B Not Used Not Used Not Used ~ ~ ~ Not Used ~   2C Not Used Not Used Guitar Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2D Not Used Not Used Bass Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2E Not Used Not Used Not Used ~ ~ ~ Supported ~   2F Not Used Not Used Guitar Wailing Sound ~ ~ ❌ Not Supported yet on DTX ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     30 Not Used Not Used Not Used ~ ~ ~ Not Used ~   31 P1 Key 1 Hidden P1 Left White Hidden HiHatClose Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   32 P1 Key 2 Hidden P1 Left Yellow Hidden Snare Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   33 P1 Key 3 Hidden P1 Left Green Hidden Bass Drum Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   34 P1 Key 4 Hidden P1 Left Blue Hidden High Tom Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   35 P1 Key 5 Hidden Not Used Low Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   36 P1 Turn/Scratch Hidden Not Used Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   37 P1 FootPedal Hidden Not Used Floor Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   38 P1 Key 6 Hidden Not Used High Hat Open Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   39 P1 Key 7 Hidden Not Used Ride Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   3A Not Used Not Used Left Cymbal Hidden Note ~ ~ ✅ Supported ✅   3B Not Used Not Used Left Pedal Hidden Note ~ ~ ✅ Supported ✅   3C Not Used Not Used Left Bass Drum Hidden Note ~ ~ ✅ Supported ✅   3D Not Used Not Used Not Used ~ ~ ~ Supported ~   3E Not Used Not Used Not Used ~ ~ ~ Supported ~   3F Not Used Not Used Not Used ~ ~ ~ Supported ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     40 Not Used Not Used Not Used ~ ~ ~ Not Used ~   41 P2 Key 1 Hidden Not Used Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   42 P2 Key 2 Hidden P1 Right Blue Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   43 P2 Key 3 Hidden P1 Right Green Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   44 P2 Key 4 Hidden P1 Right Yellow Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   45 P2 Key 5 Hidden P1 Right White Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   46 P2 Turn/Scratch Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   47 P2 FootPedal Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   48 P2 Key 6 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   49 P2 Key 7 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   4A Not Used Not Used Not Used ~ ~ ~ Not Used ~   4B Not Used Not Used Not Used ~ ~ ~ Not Used ~   4C Not Used Not Used Bonus 04 ~ ~ ❌ Not Supported ✅   4D Not Used Not Used Bonus 03 ~ ~ ❌ Not Supported ✅   4E Not Used Not Used Bonus 02 ~ ~ ❌ Not Supported ✅   4F Not Used Not Used Bonus 01 ~ ~ ❌ Not Supported ✅    Sound Effect Channels 01 to 32 on DTX are also supported.\nFor the complete table see Our Wiki (coming shortly as squirrel needs to finish writing them!)\n Reordered Game Mode Select Screen    This alpha with the fact we have begun to introduce new modes and features, we have reordered the game modes based on some player/community feedback, with the \u0026lsquo;lesser\u0026rsquo; or \u0026lsquo;niche\u0026rsquo; modes moving down a bit in the order. Makes it easier to find things you need, and please give us feedback if you feel a mode needs more representing/love!\n Mac OS builds are now signed!    We have finally passed all the requirements to be able to sign the binary, so this means no more xattr stuff anymore! we just act like any other application.\n Mode Status:     New Cross Platform MIDI Driver!    Due to the interest we had been getting from the past two alpha releases in the form of gddm and techno, several players that were not on windows did enquire about the possibility of there being a new MIDI driver available for Mac and Linux users to make use of for their midi fighters, e-drums, etc and we decided as a team to move forward and produce one.\nThe midi driver stands alone, there is no need to have any extra applications \u0026lsquo;translating\u0026rsquo; it to keystrokes, (unless you\u0026rsquo;re doing midi via an iphone or something like that of course), but native midi controllers work a treat. If you have a midi device and want to try this out, you will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=portmidi,SDL\nThis will allow the midi driver to load, and set up your device. We have currently coded it for a single device at a time, but do let us know if you feel there is a need for multiple device support, or if you find a device that doesn\u0026rsquo;t behave!\nI also was able to make a prototype mini FSR pad for midi using a teensy LC and some tiny FSR sensors:\nThis worked a treat, so you can definitely get on to some tinkering if you want to make your own devices to play the game!\nThis driver works on Windows, Linux, RPi, Mac OS (intel) / Mac OS (M1) and Rockchip aarch64 SoCs    We are still working on latency and control, so let us know if you find anything quirky!\n Windows legacy input driver    There has also been work done on a small side part of the game, while we have been waiting for a fix from upstream in regards to the \u0026lsquo;polling/framerate\u0026rsquo; issue that a lot of folks have helping us diagnose for some time. The long and the short of the issue, it meant on some songs, the input would skew towards the update loop rather than honouring it\u0026rsquo;s timestamp, thus producing \u0026lsquo;spikes\u0026rsquo; on the scoring graph at the end of the song, and make a odd looking \u0026lsquo;stair\u0026rsquo; display on the scatter plot of the steps and judgements taken.\nTo resolve this while we\u0026rsquo;re waiting a fix, we have reimplemented the old legacy driver that was on 5.2/5.1 and adapted it for OutFox. This driver can be tempremental, but it seemed to behave with the devices we tested it with. If you tend to find that your input is affected with the message loop issue, you can set up the driver with the following instructions.\nYou will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=legacy,minisdl\n(if you wish to use the new portmidi driver as well you can use InputDrivers=legacy,minisdl,portmidi)\nThis will allow you to run the game with minimal resources, keeping vsync on, and should remove any previous issues of fps/rate/polling problems. When we have the fix from upstream, we\u0026rsquo;ll revisit and modernise this with the newer drivers and processes.\nOn the \u0026lsquo;test input\u0026rsquo; screen, you will see a new Window Handler \u0026lsquo;Aux\u0026rsquo; driver. This is just the driver that manages the window controls, maximises, fullscreens, etc, so no need to worry about it. This will also show you, that you have the correct drivers selected in the inputdrivers setting.\n Rate and Pitch Changes:    Due to an overwhelming set of requests, we have taken time to fix and modernise the rate/haste system which had been broken for a bit since this project began.\nPitch seemed to be a lottery (though we had not seen it work) and all the rate mod used to do was seemingly speed up the song with no other effect or option being honoured.\nSimilarly, we have moved the ratemod to the first screen of the song options - thanks to the stamina players that popped in to request this, and to mattm for saying that most wanted a speed AND pitch option, which we have called \u0026lsquo;both\u0026rsquo; internally to signify this change.\nThe new layout looks like so:\nWe have fixed the way the off/speed/pitch/speed and pitch options work, so they actually work. This took quite a bit of time to fix the internal pipelines for these, but the end effect is definitely fun. Thanks to Squirrel, Jousway and Jose for bringing this one up the pipeline to get it done for this release!\nTo ensure compatibility with legacy themes, the system \u0026lsquo;defaults\u0026rsquo; to how it was in 5.0.12, with a 0.01x increase, and being on the main menu as folks requested. This is a long overdue Quality of Life update for this, so we\u0026rsquo;re really pleased it\u0026rsquo;s done.\n KNOWN ISSUES: Alpha 4.9.9     ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE gddm mode: We do not support the XA codec at this time, it\u0026rsquo;ll play silent. ❕❌ ISSUE beat/popn/gddm some early (pre2013) songs may play some sound samples / keysounds at the wrong speed   Full Changelog Follows:    ALL:    Mode Specific\n ❕✅ Fixed DTX Detection of track/lane sizes overflowing the notefield ❕✅ Fixed BMS/DTX/PMS Keysound iterator edge crash ❕✅ New! DTX Fixed Channel allocation ❕✅ New! DTX REAL mode (10 Lane support) ❕✅ New! DTX Dual Note support for lanes that require it ❕✅ New! DTX DTX 1A/1B/1C note channel support ❕✅ New! DTX Parser Support ❕✅ Fixed gh noteskin position issue ❕✅ Fixed popn roll note type explosion ❕✅ Fixed BMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed PMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed DTX missing difficulties (Thanks InfinitePhantasm!) ❕✅ New! Added main drum types to DTX loader ❕✅ New! para 8 sensor 360 degree arcade style mode ❕✅ New! Added popn 18 lane (effectively popn-doubles) ❕✅ Fixed BMS Loader array ❕✅ Fixed B36 conversion on BMS/PMS/DTX ❕✅ Fixed PMS Loader array ❕✅ Fixed PMS layouts for 2 player ❕✅ Added popn doubles to style metrics ❕✅ New! Added taitai mode ❕✅ Fixed taitai layout and screen gameplay ❕✅ New! Added taitai to game selection screen ❕✅ Fixed dance row restrictions affecting all modes ❕✅ Fixed bug with double image caching on pump and dance ❕✅ Fixed missing beat content not installed ❕✅ Fixed gdgf issues with strumming ❕✅ Fixed crash with 2 player popn not setting locked difficulties ❕✅ Fixed seeded 2 player shuffle for dance/popn/beat ❕✅ Raise maximum player tracks to 20 ❕✅ Fixed \u0026lsquo;roulette\u0026rsquo; of sound volume of game assets ❕✅ Added support to modfiles for 1 column modes ❕✅ Fixed crash on 1 column modes ❕✅ Fixed taitai skins with the rewrite of taitai  Engine\n ❕✅ New! AutoGen Marker layouts in ScreenSelectMusic ❕✅ New! Haste RateMod control ❕✅ New! Linux RAW support ❕✅ New! JoyStick Threads ❕✅ Fixed x11 title bug in SDL preventing updates to upstream ❕✅ Fixed Ordering of GetBestFullComboTapNoteScore ❕✅ Fixed StepCollector lag in evaluation ❕✅ Fixed NoteDisplay errors in evaluation calculations ❕✅ Fixed common noteskin errors ❕✅ Fixed video banners breaking when backing out (Thanks Jubo!) ❕✅ Fixed video initialisation issue causing some videos to fail to load ❕✅ New! Initial Minefields ❕✅ Fixed extra debug lines ❕✅ Fixed Access Violation on GeForce 4, 100 and 200 series cards ❕✅ Fixed Access Violation on Radeon 5000, 6000 and 7000 series cards ❕✅ New! Optimised compilation chain for AMD based processors ❕✅ Fixed mines appearing in holds issue ❕✅ Fixed ModIconRow cycling into an infinite loop causing freezes on some menus ❕✅ Fixed note updates and crash on HowToPlay ❕✅ Fixed crash with some keysounds while in Editor ❕✅ Fixed hold head active and inactive being swapped on some modes ❕✅ Fixed score calculation on screen evaluation ❕✅ Fixed random mine explosions appearing due to a misplaced math calculation ❕✅ Fixed player calculations   ❕✅ Fixed errors in ArrowEffects ❕✅ Fixed RNG engine needlessly being called ❕✅ Fixed RNG stutter ❕✅ Removed RandomGen from the game for a more modern equivalent ❕✅ Fixed global calls and RNG seeds not being used ❕✅ Fixed linux compile and GCC complaints ❕✅ New! Die Rolling / Coin Flip RNG options ❕✅ Fixed duplicate Actor refresh call ❕✅ Fixed spiralz/spiralx overflow in axis calculation ❕✅ New! Added VSync High CPU when not focused pipe ❕✅ New! Added F3 + H for high cpu toggle for streamers ❕✅ Fixed Application knowing whether or not it has focus ❕✅ New! Added faster pow^2 math ❕✅ Forced mipmapping off on things that do not need it ❕✅ New! Added nanosvg support for SVG loading ❕✅ New! Added text support for SVG loading ❕✅ Fixed missing file closure in Rage image loading ❕✅ Fixed parsing of notedata in notedisplay ❕✅ Fixed handle releasing on some textures ❕✅ Fixed bug with notefield math ❕✅ Fixed Soundreader issues with mislabelled songs ❕✅ Fixed Lua Number type casting in NoteField ❕✅ Fixed compiler optimisations causing an AV in note display ❕✅ Fixed surface headers overflow in image loading ❕✅ Fixed bug with GL detection (Thanks Jousway!) ❕✅ Fixed Misaligned notefields with two players ❕✅ Fixed hid issue with some older pads ❕✅ Fixed hold heads being missed when correctly hit ❕✅ Fixed holds shorter than 1/16th being missed ❕✅ Fixed cleanup of elements in screengameplay ❕✅ New! Restored edit mode timing signatures option ❕✅ New! Added modern \u0026lsquo;pseudo\u0026rsquo; RNG to replicate missed \u0026lsquo;expected\u0026rsquo; SM5.x behaviour ❕✅ Fixed bug with missing buttons not being initialised ❕✅ New! Added new Lua hooks to allow consistent modfile RNG generation ❕✅ New! Added new Hardware MIDI handles to allow ultra low latency control ❕✅ Fixed issues with DTX based drumkits only using MIDI channel 9 to send off commands ❕✅ Fixed issues with DJ and Midi fighter style controllers having \u0026lsquo;stuck\u0026rsquo; pad keys ❕✅ New! Added new clap assist sound effect: Drumstick ❕✅ New! Added new metronome sound effect: Pan Lid ❕✅ Fixed bug with metronome and measure sounds ❕✅ New! Added new GL system for initialisation and checking, which is linux safe (Thanks Jous!) ❕✅ New! Added helper message for those with a d3d based renderer entry in their preference.ini ❕✅ Fixed crash with anyone using a 5.0/5.1 d3d entry ❕✅ New! Added effect volume F3 + F / F3 + G option on debug menu ❕✅ Fixed bug that used Windows 98 era code instead of modern equivalents ❕✅ Fixed effect volume turning down the Gameplay music ❕✅ Fixed SDL Init() system ❕✅ Fixed Model animations on P1 when both players are on ❕✅ Fixed Sound reader memory leak issues ❕✅ Fixed SDL input grabbing device handles it shouldn\u0026rsquo;t ❕✅ Fixed adaptable Windows handler so we can detach it from being a massive driver ❕✅ New! Restored Windows resize functions lost due to an SDL bug ❕✅ New! Maximise and Minimise window functions now operate as planned ❕✅ Fixed Lua faults reported in a few noteskins ❕✅ Fixed Bad enumeration generation ❕✅ Adjusted polling system to reduce CPU load ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ Fixed duplicate calls to DrawHoldPart() ❕✅ Fixed some controller events being stuck in the queue ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ New! restore Haste to the game ❕✅ Fixed math overflow with Haste ❕✅ Fixed application of Haste within the engine, to prevent odd uses outside of gameplay ❕✅ Fixed re-sampler and command queue for Haste ❕✅ New! moved Haste to an easier menu option ❕✅ Fixed crash with Haste not obeying sound effect option ❕✅ New! Added \u0026lsquo;SoundEffectBoth\u0026rsquo; (Speed + Pitch) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectPitch\u0026rsquo; (Pitch Shift) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectOff\u0026rsquo; (No Effect) option for rate mods ❕✅ Fixed speed being applied on every option ❕✅ Fixed crash with rate \u0026lt; 1.0 on pitch shift ❕✅ Fixed crash with rate \u0026gt; 1.7 on pitch shift ❕✅ Fixed crash in re-sampler when using Speed and Pitch options ❕✅ New! Move Rate mods to an easier menu option ❕✅ Fixed speed mod being called twice when rate was used ❕✅ Fixed smartsort on player options ❕✅ Fixed outfox-color-holds ❕✅ Restored set-color and set-effect ❕✅ Fixed BAO charging for 2 credits ❕✅ Fixed luastring parsing causing an edge crash on models ❕✅ Fixed race condition in BGLayer\u0026rsquo;s loading and unloading systems ❕✅ Fixed pre 2011 Ogg encoder bugged 44,099hz tracks crashing the game ❕✅ Fixed Sound loader buffer overflow ❕✅ Fixed image loader sometimes creating a transparent image ❕✅ Fixed mod parsing speed ❕✅ Fixed illegal OS keyworded lua call ❕✅ Fixed UTF uppercase conversion ❕✅ Fixed Locale lag on some parsing modules ❕✅ Fix Attack sync ❕✅ New! LoadActorForNoteSkin to set color and effect variables ❕✅ New! Beginning of Shift-JIS conversion support ❕✅ New! Force Nvidia/Intel Drivers to correctly update ❕✅ Fixed mouse calls in Lua ❕✅ New! Preference to turn off the deltaclock timer on the stats in top right ❕✅ Fixed character loading race condition ❕✅ Fixed StepsSelector module ❕✅ Fixed dangling file handles (closes #110 and #36 ) ❕✅ Fixed KeySound iterator to prevent edge crash on linux ❕✅ Fixed ratemod application for legacy themes ❕✅ Fixed pitch and rate being tied in the effect filter ❕✅ Fixed mismatched placements of notefields on some of the different modes  Windows 7+:\n ❕✅ Fixed several issues with SDL2\u0026rsquo;s pipeline that was causing weird slowdowns ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed issue with win32 midi driver ❕✅ Made the renderer drivers 64bit safe in preparation for 64bit build ❕✅🐲 New! Win32 Legacy Driver - part fixes #48 ❕✅🐲 New! MiniSDL Window handler - part fixes #48  Linux:\n ❕✅ Added PipeWire driver stub - work in progress ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Fixed Missing handle in renderer causing some odd edge crashes on KDE ❕✅ New! Cross Platform PortMIDI driver!  MacOS (Intel):\n ❕✅ Added tweaks to the initialisation method for low level windows to prevent the loading window ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  MacOS (Arm M1):\n ❕✅ Fixed issue with an edge case lag spike with M1 Airs with using Bluetooth Sound/Controllers ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Added pipewire driver stub - work in progress ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ New! Cross Platform PortMIDI driver!  Community content    Noteskins     ✅ New! gddmnoteskin: default with real support from Jousway ✅ New! ez2 noteskin: default from Lirodon ✅ New! taiko noteskin: crystal-taitai from Lirodon ✅ New! taiko noteskin: shizuka from Lirodon (graphics) and Jousway ✅ New! taiko noteskin: taitai and taitai3d from Jousway ✅ New! gdgf noteskin guitarDTX by yaladre  Theme     ✅ New! Soundwaves color scheme Golden Dawn by Moru. ✅ All other color schemes previously exclusive to Soundwaves Community Edition have been brought upstream (\u0026ldquo;BISTRO\u0026rdquo;, \u0026ldquo;Invert Standard\u0026rdquo;, \u0026ldquo;Rainbow FUN\u0026rdquo;, \u0026ldquo;Baby Pink\u0026rdquo;, \u0026ldquo;Sunny Day\u0026rdquo;, and \u0026ldquo;The Blood\u0026rdquo;) ✅ New! Soundwaves feature by Ksempac (merged from Soundwaves Community Edition); color scheme system now supports changing difficulty colors (check out Fuego and CincoCero for examples).  Translations     ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  "},{"id":2,"href":"/releases/A4.9.9HF/","title":"OutFox Alpha 4.9.9HF Build","parent":"Release History","content":"Release Date: 4th August 2021    \u0026ldquo;How\u0026rsquo;s that new feature coming along?\u0026quot;    (Incorporates Internal Builds 4.9.9HF-rc0 to 4.9.9HF-rc4)\nThis build fixes several of the reported bugs, as we had to pull the previous release due to operating system updates between release dates. Sometimes having a monthly release schedule is awesome, but it does tire us out!\nAnyways\u0026hellip; Lets get back to the update.\nThis mini hotfix includes a few things we were going to leave to the next release, but as we had to fix bugs in them anyway, it was easier to apply.\n Signed Mac builds update!    The big news is we (now finally!) have passed the prerequisites for GateKeeper on Mac, so this hotfix should behave and work fine, without any issues. Do remember to just drag and drop as the dmg lets you know how to do so, and it will run as other applications. Thanks to Jose and Squirrel for their efforts, and Jose for puzzling through, and Jousway for fixing one of the bugs in gh mode which was causing issuess as well.\n Notes Loading    There were several issues with the notes loaders and how antivirus/software protection apps were seeing OutFox when we were loading simfiles. This alpha hotfix now has addressed this by allowing you all to add more than one simfile in a song folder, cutting down on the folder rabbit hole. As we move to a more multi-game engine, this will also allow you to keep things tidy on your drive, and ensure it is a seamless experience for you all. Of course, please check the audio files are the same for the chart you are going to add to the folder, as you may find you have a nasty sync issue, but we also now support multidifficulty setups, as this is required for pump and taiko specifically.\n Difficulty System Revamp    This hotfix also sees a tweak to the difficulty system used in OutFox. In the past it was tied to the DDR paradigm and then left to rot as one of those \u0026lsquo;StepMania Things\u0026rsquo;. This however really stifled what we could do within the engine, especially with modes with different names/brackets etc. With the release of gddm and taiko we needed more difficulties than the game offered, so this has now been resolved. Themes which are based off of 5.1/5.0.x will still work due to the numbers being the same as before. If there are any issues with your theme, do let us know, but we have tested several with no issues.\n New #VOLUME and #PAN    These features have been missing from our keysound support since 2002, and we are proud to say that we have them in this hotfix! They are completely supported in gddm from the parser, (do reset your cache of course!) and they also work in beat/popn. taiko will need the support as well, so shout out to Jous for putting up with my waaaahh-luigi on getting it added to the game. This build also supports the hidden chips/keysounds for gddm and we\u0026rsquo;ll work on getting the final compatibility added in due course.\n New gh Modernisation    Due to the need to run with a slightly more secure runtime on Mac OS Catalina/Big Sur/Monterey on the Intel based macs there were some functions in our gh mode which gatekeeper did not approve of. The way the notes were cast have been fixed, fever/star power has been sorted to be more gh3 like, and taps and open strums are also tweaked to be better. Please give them a try and let us know! A theme for this mode is in the works, so apologies for the barebone approach we have at the moment. It\u0026rsquo;s also why we are an alpha after all\u0026hellip;\nALL:    Mode Specific\n ❕✅ Fixed SM/SSC Noteloader corruption with some Japanese and Korean Titles/Artists on dance notesloaders ❕✅ Fixed DTX Noteloader memory leak ❕✅ Fixed DTX Parser missing some drums in gddm mode ❕✅ Fixed BMS Keysounds not seeking/reading correctly ❕✅ Fixed PMS Keysounds not buffering correctly ❕✅ Modernise Keysound system to prevent buffer under-runs ❕✅ Fix BMS/PMS missing channels, Hidden notes will come next Alpha ❕✅ Fix beat crash with charts that had more than 866 keysounds ❕✅ Fix popn crash with charts that had more than 1022 keysounds ❕✅ Fix #VOLUME not being applied correctly to beat and gddm keysounds ❕✅ Fix #PAN not being applied to beat and popn keysounds ❕✅ Fix gh loading crash with some older charts. ❕✅ Fixed RageSound preload causing missing chips in gddm and notes in beat ❕✅ Fixed gh crash due to an overzealous lightsman double update ❕✅ Fixed crash in DTX/BMS/PMS due to strings being over optimised on Mac Intel/Linux ❕✅ Fixed gh note types to please the Mac OS gatekeeper gods ❕✅ Fixed gh open strum notes ❕✅ Fixed gh fever to be closer to gh3 ❕✅ New gh HOPO notes system ❕✅ Fixed gh tap notes not showing up sometimes on older CHART files  Engine\n ❕✅ Fixed Screen msg Bug - Closes 17 year old issue ❕✅ Fixed crash in Jukebox with non-dance modes ❕✅ Fixed overflow in tween awareness - Closes 14 year old issue ❕✅ Fixed Actor overflow on tween actions - Closes 14 year old issue ❕✅ Fixed OptionsPrefs issue - Closes #375 ❕✅ Fixed editor scrolling issue ❕✅ Fixed editor buffer overflow when using \u0026gt;496 keysounds ❕✅ Fixed editor input being sent garbage ❕✅ Fixed editor input parser arrays ❕✅ Fixed crash in practice mode ❕✅ Fixed endless loop with some older BMS/PMS charts in practice mode - Thanks EDMSPack ❕✅ Fixed potential buffer overflow exploit in soundreader ❕✅ Fixed keysounds being stopped when they didn\u0026rsquo;t need to be, forcing a reload of the sound ❕✅ Fixed Keysound index system ❕✅ New Added save on exit theme metrics for option screens ❕✅ Fixed freeze on game select screen due to missing module - Thanks Kaede! ❕✅ Modernised the notesloader system in preparation for more loaders ❕✅ Fixed some types of charts being erroroneously skipped during the parse load ❕✅ NEW Multi Sim File Loading from 1 directory ❕✅ NEW Non DDR difficulty system so we can properly support other modes  Linux\n ❕✅ Fixed crash on linux versions that do not support the new Neutral Vendor libraries ❕✅ Fixed crash on Debian/Ubuntu/Fedora/Arch with inifile due to a race condition ❕✅ Fixed edge case crash on Clear/Fedora preventing the game booting on some 4.x / \u0026lt; 5.1 Kernels  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Fixed edge case crash on Twister/Raspbian preventing the game booting on some 4.x Kernels ❕✅ Fixed crash on Raspbian with inifile due to a race condition ❕✅ Fixed crash on RockPi 4B/4C when not using the first HDMI port/Audio  Mac OS\n ❕✅ Fixed input with guitar hero based controllers ❕✅ Rewrote internal gh mode to fix overly harsh input restrictions ❕✅ Fixed internal system to be signed compliant ❕✅ New enhanced build pipeline to ensure signing passes on Mac OS Intel ❕✅ New streamlined and optimised code for Mac M1 now we are properly signed   KNOWN ISSUES: Alpha 4.9.9HF     ❕❌ ISSUE Song Charts will not pan the player correctly when being played ❕❌ ISSUE Playing beat/popnsongs on Endless Mode may have a crash on song loading. Please be aware that course mode for these modes are a bit tempremental at the moment! ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE gddm mode: We do not support the XA codec at this time, it\u0026rsquo;ll play silent. ❕❌ ISSUE beat/popn/gddm some early (pre2013) songs may play some sound samples / keysounds at the wrong speed   Release Date: 31st July 2021    \u0026ldquo;Hey! Why don\u0026rsquo;t you just get up and dance, man?\u0026quot;    (Incorporates Internal Builds 4.9.8.1 to 4.9.8.6BE) (Incorporates Internal Builds 4.9.9-rc0 to 4.9.9-rc8)\nAlpha Statistics       Commits Changed files Additions Deletions     433 2079 185,205 29,552    In Memorium of SHIKI, a long running well known game music musician, who gave us over two decades of music spanning dance, vocaloid and techno, most of which was charted into BMS, SM and others, sadly passed away this month.    This alpha, our loading screen is in memory of one of his more famous StepMania Based Charts, Air.\nAir\nDigitalic Rain\nAngellic Layer\nSETSUNA (feat. Hatsune Miku)\nRest In Peace.    SHIKI ?? - 6th July 2021.     TEXTURE FONT GENERATOR V0.34     ❕✅🐲📝 Added ? \u0026amp; ! to number glyph profile ❕✅🐲📝 Fixed MFC overflow preventing compile ❕✅🐲📝 Fixed PNG causing a crash on legacy codepages ❕✅🐲📝 Fixed compile on visual studio community 2019  This build requires a cache reset if you are on Linux or MacOS, due to the internal changes. Please find your save folder and delete the contents of /cache. This will make your first time run of 4.9.9 slightly longer as it has to rebuild the index, but it is to accommodate the new modes/setup etc. Please remember to restart the game after doing a cache build, so you do not have as many issues with memory management.  New (and some Old!) Modes Update Version 2    Following on from the last release, we have continued to improve and revamp the note system for the new modes, with Jousway taking the time to make available new types and styles available that were never before. This month fixes some omissions we made from the last release, which slipped through the testing teams.\n pump    We have fixed the scoring bug that was in the previous build, and thank you for those who took the time to report the issues. Keep in mind that Soundwaves still uses \u0026lsquo;dance\u0026rsquo; paradigms for scoring, but other themes that use different scoring systems based on \u0026lsquo;pump/piu\u0026rsquo; should work correctly now.\nThe tick-count has been tweaked to work correctly as there was a miscalculation in the offset math inherited from upstream. This now behaves as expected.\nGetting random misses on hold heads has been resolved as well as the holds with small tails (mini/micro holds).\nSupport for co-op charts has been added. 5 player is introduced with up to 10 players support, though the noteskins have not been prepared at this time. The numbers on the noteskins are separately labeled so with a few adjustments and extra assets you will be able to update any noteskin to work with co-op. Co-op charts made on StepF2/StepP1 should work on OutFox, however, better note types are currently being developed by Jousway so that there can be more than 3 real players defined. Stay tuned!\nThose of you who have reported that we still have a \u0026lsquo;superb\u0026rsquo; bug on holds, this will be fixed when we introduce the new piu mode - remember the pump mode is getting Quality of Life updates for now, before we move over to updating things properly in the future.\nMicro/Miniholds also do not trigger misses/cause a weird tick to happen anymore, and there also are no \u0026lsquo;phantom\u0026rsquo; mines in long (5+ measure) holds - this was an oddity which has been fixed now.\nWe\u0026rsquo;re still working on improving SF2/SP1 custom charts parsing. Except for a few charts, you can play the majority of content made for it on OutFox with no problems. As always, if you find any oddities make sure you report them to us!\n popn    There was also a reported issue where some of the channels (lanes) of the PMS 7 button mode were not parsing correctly, or were actually being missed completely, resulting in a chart \u0026lsquo;misplacing\u0026rsquo; green and blue lanes. This was due to Squirrel misreading the spec on how BMS98/PMS was transcribed and set up the function wrong. It is fixed in this release.\nWe also have added 18 lane mode (No PMS/(BME) File support yet though!)\nThank you to all of those that took the time to report this and to kick us into getting outfox into a proper BMS/PMS parser. There are still a few features missing from po-mu mode, but these will be added to the game as per the spec (see the table below for more information.)\npopn mode also had a few tweaks and adjustments this alpha mainly in how keysounds are loaded within the game. This should now mean the mode should be smoother overall.\nThanks to the channels being set right, we also are happy to announce another feature to \u0026lsquo;popn\u0026rsquo; mode: 2 player! This was not available on the original client, but it did always irk us how there was never 2 player options other than 3 button battle. In a future update, there will be a battle mode for \u0026lsquo;popn\u0026rsquo; but for now, enjoy the 2 player fun. We will finally be having a theme for \u0026lsquo;popn\u0026rsquo; in OutFox really soon, so this is finally a move from the \u0026lsquo;dance\u0026rsquo; centric era of the application\u0026rsquo;s past.\nHave some fun with mod files from dance on popn-four\nbeat will be getting some attention this next quarter!     para    We have given this mode a polish (and for those with an arcade cab, with 3 sensors doing nothing!) we added the \u0026lsquo;fabled\u0026rsquo; 360, or 8 sensor mode. This mode was designed for in the arcade for when the player twirls or turns, but was never actioned. The sensors for the back are actually there! This mode adds that, and for those who feel adventurous, we will be publishing some information on how to make your own 360 8 sensor panel controller in due course.\n taitai    Announcing our 15th mode!\nTaiTai is based off of a popular game where you hit a drum in it\u0026rsquo;s face. The game is horizontally based, with the notes travelling from right to left, and you hit the drum when the note gets to the receptor. The orange notes are for the inner part of the drum, and the blue ones are for the outer rim of the drum.\nFor the moment, some of the quirkier parts of this mode are a work in progress, bear with us as we also write new parsers for this mode. We plan to add support for the special note types and other effects in the game, as well as improve timing and other bits and pieces that are still yet to do.\nOnce more, we have no theme for this yet! (We are an alpha after all!) However, we will have a theme available for this soon that will give the mode polish and a playable feel.\nWe still have the scoring and timing system to finish, along with effects on double notes/taps and the \u0026lsquo;roll\u0026rsquo; notes which you hit as much as you can. Feel free to give it a run and let us know what you think!\nThere is a collection of noteskins including Shizuka, Crystal TaiTai and others.\nThe autogen for this mode has been rewritten by Jousway to include a more TaiTai aware selection of notes, so that we do not get odd holds/overlaps in things. Give it a try!\n gddm    This release sees the long awaited updates to our gddm mode!\nThe lane drawing has been fixed, so that notes or \u0026lsquo;chips\u0026rsquo; as they are referred to display correctly, and we have properly sorted out the \u0026lsquo;merged\u0026rsquo; lane support.\nWe have planned to \u0026lsquo;straddle\u0026rsquo; support for the DTXMania NX/Ver. K layouts for the specified channels from the documentation, as these appear to be the most popular branches of this. A detailed channel support list will follow later on.\nAs of this build we have fixed loading .DTX files and these support most of the DRUM based side of the loading, see the table below. This will be improved in time, as we get better knowledge of this system.\nWe also support the \u0026lsquo;combined\u0026rsquo; lane system which adds lane 2 and lane 3\u0026rsquo;s extra notes, and Real mode (again, REAL filenames are yet to be parsed as such, the engine makes a \u0026lsquo;guess\u0026rsquo; on this!)\ngddm still needs a lot of work, and optimisation before we will consider it \u0026lsquo;ready\u0026rsquo;, so do expect the odd quirk or weird behaviour, and let us know what you think/would like to see as we define the mode and it\u0026rsquo;s featureset and support. we will be working on the gdgf parser in the coming months so that the guitar/bass charts will work as well.\nWe do not support XA file decoding at this time, we are looking into options. If you have a dtx file with XA files contained, they will just be played as silence, but won\u0026rsquo;t crash the game.   Current BMS/PMS/DTX Notedata support as of 4.9.9    Key:     ✅ Fully supported and used in Mode ✓ Fully supported and not used in Mode 📝? No Documentation on this channel\u0026rsquo;s support ❌ Not Supported / Not Available ~ Not Used  Channel Support Table       BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     01 Background Music Background Music Background Music ✅ ✅ ✅ Supported ✅   02 Measure Length Measure length Measure Multiplication factor ✅ ✅ ❌ Supported / OutFox Channel 2 lasts a measure on DTX ✅   03 Set Initial BPM Set Initial BPM Set Initial BPM ✅ ✅ ✅ Supported ✅   04 BGA Base BG Base BG Layer 1 ✅ ✅ ✅ Supported - needs enabling ✅   05 eXtended Object eXtended Object eXtended Object ✅ ✅ ✅ Supported 📝?   06 BGA Layer Miss BGA Poor Not Used ✅ ✅ ✓ Supported - needs enabling ~   07 BGA Layer BG Layer BG Layer 2 ✅ ✅ ✅ Supported - needs enabling sits above channel 4 ✅   08 Extended BPM Set BPM Extended BPM ✅ ✅ ✅ Supported - Changes bpm to value ✅   09 Stop Stop Not Used ✅ ✓ ✓ Supported ~   0A BGA Layer 2 BGA Layer 2 Not Used ✅ ✅ ✓ Supported, used for BMS/PMS ~   0B BGA Base Opacity BGA Base Opacity Not Used ❌ ❌ ~ Not Supported ~   0C BGA Layer Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0D BGA Layer 2 Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0E BGA Poor Opacity BGA Poor Opacity Not Used ❌ ❌ ~ Not Supported ~   0F Not Used Not Used Not Used ~ ~ ~ Not Used ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     10 Not Used Not Used Not Used ~ ~ ~ Not Used ~   11 P1 Key 1 P1 Left White HiHatClose ✅ ✅ ✅ Supported ✅   12 P1 Key 2 P1 Left Yellow Snare ✅ ✅ ✅ Supported ✅   13 P1 Key 3 P1 Left Green Bass Drum ✅ ✅ ✅ Supported ✅   14 P1 Key 4 P1 Left Blue High Tom ✅ ✅ ✅ Supported ✅   15 P1 Key 5 P1 Red Low Tom ✅ ✅ ✅ Supported ✅   16 P1 Turn/Scratch Not Used Cymbal ✅ ~ ✅ Supported ✅   17 P1 FootPedal Not Used Floor Tom ❌ ~ ✅ Supported ✅   18 P1 Key 6 Not Used High Hat Open ✅ ~ ✅ Supported ✅   19 P1 Key 7 Not Used Ride Cymbal ✅ ~ ✅ Supported ✅   1A Not Used Not Used Left Cymbal ~ ~ ✅ Supported ✅   1B Not Used Not Used Left Pedal ~ ~ ✅ Supported ✅   1C Not Used Not Used Left Bass Drum ~ ~ ✅ Supported ✅   1D Not Used Not Used Not Used ~ ~ ~ Supported ~   1E Not Used Not Used Not Used ~ ~ ~ Supported ~   1F Not Used Not Used Drums Fill in Sound ~ ~ ✅ Supported ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     20 Not Used Not Used Guitar OPEN ~ ~ ❌ Not Supported yet on DTX ✅   21 P2 Key 1 Not Used Guitar xxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   22 P2 Key 2 P1 Right Blue Guitar xGxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   23 P2 Key 3 P1 Right Green Guitar xGBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   24 P2 Key 4 P1 Right Yellow Guitar Rxxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   25 P2 Key 5 P1 Right White Guitar RxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   26 P2 Turn/Scratch Not Used Guitar RGxxx ✅ ~ ❌ Not Supported yet on DTX ✅   27 P2 FootPedal Not Used Guitar RGBxx ❌ ~ ❌ Not Supported yet on DTX ✅   28 P2 Key 6 Not Used Guitar Wail ✅ ~ ❌ Not Supported yet on DTX ✅   29 P2 Key 7 Not Used Not Supported ✅ ~ ~ Supported ~   2A Not Used Not Used Not Supported ~ ~ ~ Not Used ~   2B Not Used Not Used Not Used ~ ~ ~ Not Used ~   2C Not Used Not Used Guitar Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2D Not Used Not Used Bass Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2E Not Used Not Used Not Used ~ ~ ~ Supported ~   2F Not Used Not Used Guitar Wailing Sound ~ ~ ❌ Not Supported yet on DTX ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     30 Not Used Not Used Not Used ~ ~ ~ Not Used ~   31 P1 Key 1 Hidden P1 Left White Hidden HiHatClose Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   32 P1 Key 2 Hidden P1 Left Yellow Hidden Snare Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   33 P1 Key 3 Hidden P1 Left Green Hidden Bass Drum Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   34 P1 Key 4 Hidden P1 Left Blue Hidden High Tom Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   35 P1 Key 5 Hidden Not Used Low Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   36 P1 Turn/Scratch Hidden Not Used Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   37 P1 FootPedal Hidden Not Used Floor Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   38 P1 Key 6 Hidden Not Used High Hat Open Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   39 P1 Key 7 Hidden Not Used Ride Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   3A Not Used Not Used Left Cymbal Hidden Note ~ ~ ✅ Supported ✅   3B Not Used Not Used Left Pedal Hidden Note ~ ~ ✅ Supported ✅   3C Not Used Not Used Left Bass Drum Hidden Note ~ ~ ✅ Supported ✅   3D Not Used Not Used Not Used ~ ~ ~ Supported ~   3E Not Used Not Used Not Used ~ ~ ~ Supported ~   3F Not Used Not Used Not Used ~ ~ ~ Supported ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     40 Not Used Not Used Not Used ~ ~ ~ Not Used ~   41 P2 Key 1 Hidden Not Used Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   42 P2 Key 2 Hidden P1 Right Blue Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   43 P2 Key 3 Hidden P1 Right Green Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   44 P2 Key 4 Hidden P1 Right Yellow Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   45 P2 Key 5 Hidden P1 Right White Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   46 P2 Turn/Scratch Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   47 P2 FootPedal Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   48 P2 Key 6 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   49 P2 Key 7 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   4A Not Used Not Used Not Used ~ ~ ~ Not Used ~   4B Not Used Not Used Not Used ~ ~ ~ Not Used ~   4C Not Used Not Used Bonus 04 ~ ~ ❌ Not Supported ✅   4D Not Used Not Used Bonus 03 ~ ~ ❌ Not Supported ✅   4E Not Used Not Used Bonus 02 ~ ~ ❌ Not Supported ✅   4F Not Used Not Used Bonus 01 ~ ~ ❌ Not Supported ✅    Sound Effect Channels 01 to 32 on DTX are also supported.\nFor the complete table see Our Wiki (coming shortly as squirrel needs to finish writing them!)\n Reordered Game Mode Select Screen    This alpha with the fact we have begun to introduce new modes and features, we have reordered the game modes based on some player/community feedback, with the \u0026lsquo;lesser\u0026rsquo; or \u0026lsquo;niche\u0026rsquo; modes moving down a bit in the order. Makes it easier to find things you need, and please give us feedback if you feel a mode needs more representing/love!\n Mac OS builds are now signed!    We have finally passed all the requirements to be able to sign the binary, so this means no more xattr stuff anymore! we just act like any other application.\n Mode Status:     New Cross Platform MIDI Driver!    Due to the interest we had been getting from the past two alpha releases in the form of gddm and techno, several players that were not on windows did enquire about the possibility of there being a new MIDI driver available for Mac and Linux users to make use of for their midi fighters, e-drums, etc and we decided as a team to move forward and produce one.\nThe midi driver stands alone, there is no need to have any extra applications \u0026lsquo;translating\u0026rsquo; it to keystrokes, (unless you\u0026rsquo;re doing midi via an iphone or something like that of course), but native midi controllers work a treat. If you have a midi device and want to try this out, you will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=portmidi,SDL\nThis will allow the midi driver to load, and set up your device. We have currently coded it for a single device at a time, but do let us know if you feel there is a need for multiple device support, or if you find a device that doesn\u0026rsquo;t behave!\nI also was able to make a prototype mini FSR pad for midi using a teensy LC and some tiny FSR sensors:\nThis worked a treat, so you can definitely get on to some tinkering if you want to make your own devices to play the game!\nThis driver works on Windows, Linux, RPi, Mac OS (intel) / Mac OS (M1) and Rockchip aarch64 SoCs    We are still working on latency and control, so let us know if you find anything quirky!\n Windows legacy input driver    There has also been work done on a small side part of the game, while we have been waiting for a fix from upstream in regards to the \u0026lsquo;polling/framerate\u0026rsquo; issue that a lot of folks have helping us diagnose for some time. The long and the short of the issue, it meant on some songs, the input would skew towards the update loop rather than honouring it\u0026rsquo;s timestamp, thus producing \u0026lsquo;spikes\u0026rsquo; on the scoring graph at the end of the song, and make a odd looking \u0026lsquo;stair\u0026rsquo; display on the scatter plot of the steps and judgements taken.\nTo resolve this while we\u0026rsquo;re waiting a fix, we have reimplemented the old legacy driver that was on 5.2/5.1 and adapted it for OutFox. This driver can be tempremental, but it seemed to behave with the devices we tested it with. If you tend to find that your input is affected with the message loop issue, you can set up the driver with the following instructions.\nYou will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=legacy,minisdl\n(if you wish to use the new portmidi driver as well you can use InputDrivers=legacy,minisdl,portmidi)\nThis will allow you to run the game with minimal resources, keeping vsync on, and should remove any previous issues of fps/rate/polling problems. When we have the fix from upstream, we\u0026rsquo;ll revisit and modernise this with the newer drivers and processes.\nOn the \u0026lsquo;test input\u0026rsquo; screen, you will see a new Window Handler \u0026lsquo;Aux\u0026rsquo; driver. This is just the driver that manages the window controls, maximises, fullscreens, etc, so no need to worry about it. This will also show you, that you have the correct drivers selected in the inputdrivers setting.\n Rate and Pitch Changes:    Due to an overwhelming set of requests, we have taken time to fix and modernise the rate/haste system which had been broken for a bit since this project began.\nPitch seemed to be a lottery (though we had not seen it work) and all the rate mod used to do was seemingly speed up the song with no other effect or option being honoured.\nSimilarly, we have moved the ratemod to the first screen of the song options - thanks to the stamina players that popped in to request this, and to mattm for saying that most wanted a speed AND pitch option, which we have called \u0026lsquo;both\u0026rsquo; internally to signify this change.\nThe new layout looks like so:\nWe have fixed the way the off/speed/pitch/speed and pitch options work, so they actually work. This took quite a bit of time to fix the internal pipelines for these, but the end effect is definitely fun. Thanks to Squirrel, Jousway and Jose for bringing this one up the pipeline to get it done for this release!\nTo ensure compatibility with legacy themes, the system \u0026lsquo;defaults\u0026rsquo; to how it was in 5.0.12, with a 0.01x increase, and being on the main menu as folks requested. This is a long overdue Quality of Life update for this, so we\u0026rsquo;re really pleased it\u0026rsquo;s done.\n KNOWN ISSUES: Alpha 4.9.9     ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE gddm mode: We do not support the XA codec at this time, it\u0026rsquo;ll play silent. ❕❌ ISSUE beat/popn/gddm some early (pre2013) songs may play some sound samples / keysounds at the wrong speed   Full Changelog Follows:    ALL:    Mode Specific\n ❕✅ Fixed DTX Detection of track/lane sizes overflowing the notefield ❕✅ Fixed BMS/DTX/PMS Keysound iterator edge crash ❕✅ New! DTX Fixed Channel allocation ❕✅ New! DTX REAL mode (10 Lane support) ❕✅ New! DTX Dual Note support for lanes that require it ❕✅ New! DTX DTX 1A/1B/1C note channel support ❕✅ New! DTX Parser Support ❕✅ Fixed gh noteskin position issue ❕✅ Fixed popn roll note type explosion ❕✅ Fixed BMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed PMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed DTX missing difficulties (Thanks InfinitePhantasm!) ❕✅ New! Added main drum types to DTX loader ❕✅ New! para 8 sensor 360 degree arcade style mode ❕✅ New! Added popn 18 lane (effectively popn-doubles) ❕✅ Fixed BMS Loader array ❕✅ Fixed B36 conversion on BMS/PMS/DTX ❕✅ Fixed PMS Loader array ❕✅ Fixed PMS layouts for 2 player ❕✅ Added popn doubles to style metrics ❕✅ New! Added taitai mode ❕✅ Fixed taitai layout and screen gameplay ❕✅ New! Added taitai to game selection screen ❕✅ Fixed dance row restrictions affecting all modes ❕✅ Fixed bug with double image caching on pump and dance ❕✅ Fixed missing beat content not installed ❕✅ Fixed gdgf issues with strumming ❕✅ Fixed crash with 2 player popn not setting locked difficulties ❕✅ Fixed seeded 2 player shuffle for dance/popn/beat ❕✅ Raise maximum player tracks to 20 ❕✅ Fixed \u0026lsquo;roulette\u0026rsquo; of sound volume of game assets ❕✅ Added support to modfiles for 1 column modes ❕✅ Fixed crash on 1 column modes ❕✅ Fixed taitai skins with the rewrite of taitai  Engine\n ❕✅ New! AutoGen Marker layouts in ScreenSelectMusic ❕✅ New! Haste RateMod control ❕✅ New! Linux RAW support ❕✅ New! JoyStick Threads ❕✅ Fixed x11 title bug in SDL preventing updates to upstream ❕✅ Fixed Ordering of GetBestFullComboTapNoteScore ❕✅ Fixed StepCollector lag in evaluation ❕✅ Fixed NoteDisplay errors in evaluation calculations ❕✅ Fixed common noteskin errors ❕✅ Fixed video banners breaking when backing out (Thanks Jubo!) ❕✅ Fixed video initialisation issue causing some videos to fail to load ❕✅ New! Initial Minefields ❕✅ Fixed extra debug lines ❕✅ Fixed Access Violation on GeForce 4, 100 and 200 series cards ❕✅ Fixed Access Violation on Radeon 5000, 6000 and 7000 series cards ❕✅ New! Optimised compilation chain for AMD based processors ❕✅ Fixed mines appearing in holds issue ❕✅ Fixed ModIconRow cycling into an infinite loop causing freezes on some menus ❕✅ Fixed note updates and crash on HowToPlay ❕✅ Fixed crash with some keysounds while in Editor ❕✅ Fixed hold head active and inactive being swapped on some modes ❕✅ Fixed score calculation on screen evaluation ❕✅ Fixed random mine explosions appearing due to a misplaced math calculation ❕✅ Fixed player calculations   ❕✅ Fixed errors in ArrowEffects ❕✅ Fixed RNG engine needlessly being called ❕✅ Fixed RNG stutter ❕✅ Removed RandomGen from the game for a more modern equivalent ❕✅ Fixed global calls and RNG seeds not being used ❕✅ Fixed linux compile and GCC complaints ❕✅ New! Die Rolling / Coin Flip RNG options ❕✅ Fixed duplicate Actor refresh call ❕✅ Fixed spiralz/spiralx overflow in axis calculation ❕✅ New! Added VSync High CPU when not focused pipe ❕✅ New! Added F3 + H for high cpu toggle for streamers ❕✅ Fixed Application knowing whether or not it has focus ❕✅ New! Added faster pow^2 math ❕✅ Forced mipmapping off on things that do not need it ❕✅ New! Added nanosvg support for SVG loading ❕✅ New! Added text support for SVG loading ❕✅ Fixed missing file closure in Rage image loading ❕✅ Fixed parsing of notedata in notedisplay ❕✅ Fixed handle releasing on some textures ❕✅ Fixed bug with notefield math ❕✅ Fixed Soundreader issues with mislabelled songs ❕✅ Fixed Lua Number type casting in NoteField ❕✅ Fixed compiler optimisations causing an AV in note display ❕✅ Fixed surface headers overflow in image loading ❕✅ Fixed bug with GL detection (Thanks Jousway!) ❕✅ Fixed Misaligned notefields with two players ❕✅ Fixed hid issue with some older pads ❕✅ Fixed hold heads being missed when correctly hit ❕✅ Fixed holds shorter than 1/16th being missed ❕✅ Fixed cleanup of elements in screengameplay ❕✅ New! Restored edit mode timing signatures option ❕✅ New! Added modern \u0026lsquo;pseudo\u0026rsquo; RNG to replicate missed \u0026lsquo;expected\u0026rsquo; SM5.x behaviour ❕✅ Fixed bug with missing buttons not being initialised ❕✅ New! Added new Lua hooks to allow consistent modfile RNG generation ❕✅ New! Added new Hardware MIDI handles to allow ultra low latency control ❕✅ Fixed issues with DTX based drumkits only using MIDI channel 9 to send off commands ❕✅ Fixed issues with DJ and Midi fighter style controllers having \u0026lsquo;stuck\u0026rsquo; pad keys ❕✅ New! Added new clap assist sound effect: Drumstick ❕✅ New! Added new metronome sound effect: Pan Lid ❕✅ Fixed bug with metronome and measure sounds ❕✅ New! Added new GL system for initialisation and checking, which is linux safe (Thanks Jous!) ❕✅ New! Added helper message for those with a d3d based renderer entry in their preference.ini ❕✅ Fixed crash with anyone using a 5.0/5.1 d3d entry ❕✅ New! Added effect volume F3 + F / F3 + G option on debug menu ❕✅ Fixed bug that used Windows 98 era code instead of modern equivalents ❕✅ Fixed effect volume turning down the Gameplay music ❕✅ Fixed SDL Init() system ❕✅ Fixed Model animations on P1 when both players are on ❕✅ Fixed Sound reader memory leak issues ❕✅ Fixed SDL input grabbing device handles it shouldn\u0026rsquo;t ❕✅ Fixed adaptable Windows handler so we can detach it from being a massive driver ❕✅ New! Restored Windows resize functions lost due to an SDL bug ❕✅ New! Maximise and Minimise window functions now operate as planned ❕✅ Fixed Lua faults reported in a few noteskins ❕✅ Fixed Bad enumeration generation ❕✅ Adjusted polling system to reduce CPU load ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ Fixed duplicate calls to DrawHoldPart() ❕✅ Fixed some controller events being stuck in the queue ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ New! restore Haste to the game ❕✅ Fixed math overflow with Haste ❕✅ Fixed application of Haste within the engine, to prevent odd uses outside of gameplay ❕✅ Fixed re-sampler and command queue for Haste ❕✅ New! moved Haste to an easier menu option ❕✅ Fixed crash with Haste not obeying sound effect option ❕✅ New! Added \u0026lsquo;SoundEffectBoth\u0026rsquo; (Speed + Pitch) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectPitch\u0026rsquo; (Pitch Shift) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectOff\u0026rsquo; (No Effect) option for rate mods ❕✅ Fixed speed being applied on every option ❕✅ Fixed crash with rate \u0026lt; 1.0 on pitch shift ❕✅ Fixed crash with rate \u0026gt; 1.7 on pitch shift ❕✅ Fixed crash in re-sampler when using Speed and Pitch options ❕✅ New! Move Rate mods to an easier menu option ❕✅ Fixed speed mod being called twice when rate was used ❕✅ Fixed smartsort on player options ❕✅ Fixed outfox-color-holds ❕✅ Restored set-color and set-effect ❕✅ Fixed BAO charging for 2 credits ❕✅ Fixed luastring parsing causing an edge crash on models ❕✅ Fixed race condition in BGLayer\u0026rsquo;s loading and unloading systems ❕✅ Fixed pre 2011 Ogg encoder bugged 44,099hz tracks crashing the game ❕✅ Fixed Sound loader buffer overflow ❕✅ Fixed image loader sometimes creating a transparent image ❕✅ Fixed mod parsing speed ❕✅ Fixed illegal OS keyworded lua call ❕✅ Fixed UTF uppercase conversion ❕✅ Fixed Locale lag on some parsing modules ❕✅ Fix Attack sync ❕✅ New! LoadActorForNoteSkin to set color and effect variables ❕✅ New! Beginning of Shift-JIS conversion support ❕✅ New! Force Nvidia/Intel Drivers to correctly update ❕✅ Fixed mouse calls in Lua ❕✅ New! Preference to turn off the deltaclock timer on the stats in top right ❕✅ Fixed character loading race condition ❕✅ Fixed StepsSelector module ❕✅ Fixed dangling file handles (closes #110 and #36 ) ❕✅ Fixed KeySound iterator to prevent edge crash on linux ❕✅ Fixed ratemod application for legacy themes ❕✅ Fixed pitch and rate being tied in the effect filter ❕✅ Fixed mismatched placements of notefields on some of the different modes  Windows 7+:\n ❕✅ Fixed several issues with SDL2\u0026rsquo;s pipeline that was causing weird slowdowns ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed issue with win32 midi driver ❕✅ Made the renderer drivers 64bit safe in preparation for 64bit build ❕✅🐲 New! Win32 Legacy Driver - part fixes #48 ❕✅🐲 New! MiniSDL Window handler - part fixes #48  Linux:\n ❕✅ Added PipeWire driver stub - work in progress ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Fixed Missing handle in renderer causing some odd edge crashes on KDE ❕✅ New! Cross Platform PortMIDI driver!  MacOS (Intel):\n ❕✅ Added tweaks to the initialisation method for low level windows to prevent the loading window ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  MacOS (Arm M1):\n ❕✅ Fixed issue with an edge case lag spike with M1 Airs with using Bluetooth Sound/Controllers ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Added pipewire driver stub - work in progress ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ New! Cross Platform PortMIDI driver!  Community content    Noteskins     ✅ New! gddmnoteskin: default with real support from Jousway ✅ New! ez2 noteskin: default from Lirodon ✅ New! taiko noteskin: crystal-taitai from Lirodon ✅ New! taiko noteskin: shizuka from Lirodon (graphics) and Jousway ✅ New! taiko noteskin: taitai and taitai3d from Jousway ✅ New! gdgf noteskin guitarDTX by yaladre  Theme     ✅ New! Soundwaves color scheme Golden Dawn by Moru. ✅ All other color schemes previously exclusive to Soundwaves Community Edition have been brought upstream (\u0026ldquo;BISTRO\u0026rdquo;, \u0026ldquo;Invert Standard\u0026rdquo;, \u0026ldquo;Rainbow FUN\u0026rdquo;, \u0026ldquo;Baby Pink\u0026rdquo;, \u0026ldquo;Sunny Day\u0026rdquo;, and \u0026ldquo;The Blood\u0026rdquo;) ✅ New! Soundwaves feature by Ksempac (merged from Soundwaves Community Edition); color scheme system now supports changing difficulty colors (check out Fuego and CincoCero for examples).  Translations     ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  "},{"id":3,"href":"/releases/A4.9.9/","title":"OutFox Alpha 4.9.9 Build","parent":"Release History","content":"Release Date: 31st July 2021    \u0026ldquo;Hey! Why don\u0026rsquo;t you just get up and dance, man?\u0026quot;    (Incorporates Internal Builds 4.9.8.1 to 4.9.8.6BE)\n(Incorporates Internal Builds 4.9.9-rc0 to 4.9.9-rc8)\nAlpha Statistics       Commits Changed files Additions Deletions     433 2079 185,205 29,552    In Memorium of SHIKI, a long running well known game music musician, who gave us over two decades of music spanning dance, vocaloid and techno, most of which was charted into BMS, SM and others, sadly passed away this month.    This alpha, our loading screen is in memory of one of his more famous StepMania Based Charts, Air.\nAir\nDigitalic Rain\nAngellic Layer\nSETSUNA (feat. Hatsune Miku)\nRest In Peace.    SHIKI ?? - 6th July 2021.     TEXTURE FONT GENERATOR V0.34     ❕✅🐲📝 Added ? \u0026amp; ! to number glyph profile ❕✅🐲📝 Fixed MFC overflow preventing compile ❕✅🐲📝 Fixed PNG causing a crash on legacy codepages ❕✅🐲📝 Fixed compile on visual studio community 2019  This build requires a cache reset if you are on Linux or MacOS, due to the internal changes. Please find your save folder and delete the contents of /cache. This will make your first time run of 4.9.9 slightly longer as it has to rebuild the index, but it is to accommodate the new modes/setup etc. Please remember to restart the game after doing a cache build, so you do not have as many issues with memory management.  New (and some Old!) Modes Update Version 2    Following on from the last release, we have continued to improve and revamp the note system for the new modes, with Jousway taking the time to make available new types and styles available that were never before. This month fixes some omissions we made from the last release, which slipped through the testing teams.\n pump    We have fixed the scoring bug that was in the previous build, and thank you for those who took the time to report the issues. Keep in mind that Soundwaves still uses \u0026lsquo;dance\u0026rsquo; paradigms for scoring, but other themes that use different scoring systems based on \u0026lsquo;pump/piu\u0026rsquo; should work correctly now.\nThe tick-count has been tweaked to work correctly as there was a miscalculation in the offset math inherited from upstream. This now behaves as expected.\nGetting random misses on hold heads has been resolved as well as the holds with small tails (mini/micro holds).\nSupport for co-op charts has been added. 5 player is introduced with up to 10 players support, though the noteskins have not been prepared at this time. The numbers on the noteskins are separately labeled so with a few adjustments and extra assets you will be able to update any noteskin to work with co-op. Co-op charts made on StepF2/StepP1 should work on OutFox, however, better note types are currently being developed by Jousway so that there can be more than 3 real players defined. Stay tuned!\nThose of you who have reported that we still have a \u0026lsquo;superb\u0026rsquo; bug on holds, this will be fixed when we introduce the new piu mode - remember the pump mode is getting Quality of Life updates for now, before we move over to updating things properly in the future.\nMicro/Miniholds also do not trigger misses/cause a weird tick to happen anymore, and there also are no \u0026lsquo;phantom\u0026rsquo; mines in long (5+ measure) holds - this was an oddity which has been fixed now.\nWe\u0026rsquo;re still working on improving SF2/SP1 custom charts parsing. Except for a few charts, you can play the majority of content made for it on OutFox with no problems. As always, if you find any oddities make sure you report them to us!\n popn    There was also a reported issue where some of the channels (lanes) of the PMS 7 button mode were not parsing correctly, or were actually being missed completely, resulting in a chart \u0026lsquo;misplacing\u0026rsquo; green and blue lanes. This was due to Squirrel misreading the spec on how BMS98/PMS was transcribed and set up the function wrong. It is fixed in this release.\nWe also have added 18 lane mode (No PMS/(BME) File support yet though!)\nThank you to all of those that took the time to report this and to kick us into getting outfox into a proper BMS/PMS parser. There are still a few features missing from po-mu mode, but these will be added to the game as per the spec (see the table below for more information.)\npopn mode also had a few tweaks and adjustments this alpha mainly in how keysounds are loaded within the game. This should now mean the mode should be smoother overall.\nThanks to the channels being set right, we also are happy to announce another feature to \u0026lsquo;popn\u0026rsquo; mode: 2 player! This was not available on the original client, but it did always irk us how there was never 2 player options other than 3 button battle. In a future update, there will be a battle mode for \u0026lsquo;popn\u0026rsquo; but for now, enjoy the 2 player fun. We will finally be having a theme for \u0026lsquo;popn\u0026rsquo; in OutFox really soon, so this is finally a move from the \u0026lsquo;dance\u0026rsquo; centric era of the application\u0026rsquo;s past.\nHave some fun with mod files from dance on popn-four\nbeat will be getting some attention this next quarter!     para    We have given this mode a polish (and for those with an arcade cab, with 3 sensors doing nothing!) we added the \u0026lsquo;fabled\u0026rsquo; 360, or 8 sensor mode. This mode was designed for in the arcade for when the player twirls or turns, but was never actioned. The sensors for the back are actually there! This mode adds that, and for those who feel adventurous, we will be publishing some information on how to make your own 360 8 sensor panel controller in due course.\n taitai    Announcing our 15th mode!\nTaiTai is based off of a popular game where you hit a drum in it\u0026rsquo;s face. The game is horizontally based, with the notes travelling from right to left, and you hit the drum when the note gets to the receptor. The orange notes are for the inner part of the drum, and the blue ones are for the outer rim of the drum.\nFor the moment, some of the quirkier parts of this mode are a work in progress, bear with us as we also write new parsers for this mode. We plan to add support for the special note types and other effects in the game, as well as improve timing and other bits and pieces that are still yet to do.\nOnce more, we have no theme for this yet! (We are an alpha after all!) However, we will have a theme available for this soon that will give the mode polish and a playable feel.\nWe still have the scoring and timing system to finish, along with effects on double notes/taps and the \u0026lsquo;roll\u0026rsquo; notes which you hit as much as you can. Feel free to give it a run and let us know what you think!\nThere is a collection of noteskins including Shizuka, Crystal TaiTai and others.\nThe autogen for this mode has been rewritten by Jousway to include a more TaiTai aware selection of notes, so that we do not get odd holds/overlaps in things. Give it a try!\n gddm    This release sees the long awaited updates to our gddm mode!\nThe lane drawing has been fixed, so that notes or \u0026lsquo;chips\u0026rsquo; as they are referred to display correctly, and we have properly sorted out the \u0026lsquo;merged\u0026rsquo; lane support.\nWe have planned to \u0026lsquo;straddle\u0026rsquo; support for the DTXMania NX/Ver. K layouts for the specified channels from the documentation, as these appear to be the most popular branches of this. A detailed channel support list will follow later on.\nAs of this build we have fixed loading .DTX files and these support most of the DRUM based side of the loading, see the table below. This will be improved in time, as we get better knowledge of this system.\nWe also support the \u0026lsquo;combined\u0026rsquo; lane system which adds lane 2 and lane 3\u0026rsquo;s extra notes, and Real mode (again, REAL filenames are yet to be parsed as such, the engine makes a \u0026lsquo;guess\u0026rsquo; on this!)\ngddm still needs a lot of work, and optimisation before we will consider it \u0026lsquo;ready\u0026rsquo;, so do expect the odd quirk or weird behaviour, and let us know what you think/would like to see as we define the mode and it\u0026rsquo;s featureset and support. we will be working on the gdgf parser in the coming months so that the guitar/bass charts will work as well.\nWe do not support XA file decoding at this time, we are looking into options. If you have a dtx file with XA files contained, they will just be played as silence, but won\u0026rsquo;t crash the game.  We do support the #PAN and #VOLUME tags, (shoutout to Jous!) we managed to get this in before the release.       Current BMS/PMS/DTX Notedata support as of 4.9.9    Key:     ✅ Fully supported and used in Mode ✓ Fully supported and not used in Mode 📝? No Documentation on this channel\u0026rsquo;s support ❌ Not Supported / Not Available ~ Not Used  Channel Support Table       BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     01 Background Music Background Music Background Music ✅ ✅ ✅ Supported ✅   02 Measure Length Measure length Measure Multiplication factor ✅ ✅ ❌ Supported / OutFox Channel 2 lasts a measure on DTX ✅   03 Set Initial BPM Set Initial BPM Set Initial BPM ✅ ✅ ✅ Supported ✅   04 BGA Base BG Base BG Layer 1 ✅ ✅ ✅ Supported - needs enabling ✅   05 eXtended Object eXtended Object eXtended Object ✅ ✅ ✅ Supported 📝?   06 BGA Layer Miss BGA Poor Not Used ✅ ✅ ✓ Supported - needs enabling ~   07 BGA Layer BG Layer BG Layer 2 ✅ ✅ ✅ Supported - needs enabling sits above channel 4 ✅   08 Extended BPM Set BPM Extended BPM ✅ ✅ ✅ Supported - Changes bpm to value ✅   09 Stop Stop Not Used ✅ ✓ ✓ Supported ~   0A BGA Layer 2 BGA Layer 2 Not Used ✅ ✅ ✓ Supported, used for BMS/PMS ~   0B BGA Base Opacity BGA Base Opacity Not Used ❌ ❌ ~ Not Supported ~   0C BGA Layer Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0D BGA Layer 2 Opacity Not Used Not Used ❌ ~ ~ Not Supported ~   0E BGA Poor Opacity BGA Poor Opacity Not Used ❌ ❌ ~ Not Supported ~   0F Not Used Not Used Not Used ~ ~ ~ Not Used ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     10 Not Used Not Used Not Used ~ ~ ~ Not Used ~   11 P1 Key 1 P1 Left White HiHatClose ✅ ✅ ✅ Supported ✅   12 P1 Key 2 P1 Left Yellow Snare ✅ ✅ ✅ Supported ✅   13 P1 Key 3 P1 Left Green Bass Drum ✅ ✅ ✅ Supported ✅   14 P1 Key 4 P1 Left Blue High Tom ✅ ✅ ✅ Supported ✅   15 P1 Key 5 P1 Red Low Tom ✅ ✅ ✅ Supported ✅   16 P1 Turn/Scratch Not Used Cymbal ✅ ~ ✅ Supported ✅   17 P1 FootPedal Not Used Floor Tom ❌ ~ ✅ Supported ✅   18 P1 Key 6 Not Used High Hat Open ✅ ~ ✅ Supported ✅   19 P1 Key 7 Not Used Ride Cymbal ✅ ~ ✅ Supported ✅   1A Not Used Not Used Left Cymbal ~ ~ ✅ Supported ✅   1B Not Used Not Used Left Pedal ~ ~ ✅ Supported ✅   1C Not Used Not Used Left Bass Drum ~ ~ ✅ Supported ✅   1D Not Used Not Used Not Used ~ ~ ~ Supported ~   1E Not Used Not Used Not Used ~ ~ ~ Supported ~   1F Not Used Not Used Drums Fill in Sound ~ ~ ✅ Supported ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     20 Not Used Not Used Guitar OPEN ~ ~ ❌ Not Supported yet on DTX ✅   21 P2 Key 1 Not Used Guitar xxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   22 P2 Key 2 P1 Right Blue Guitar xGxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   23 P2 Key 3 P1 Right Green Guitar xGBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   24 P2 Key 4 P1 Right Yellow Guitar Rxxxx ✅ ✅ ❌ Not Supported yet on DTX ✅   25 P2 Key 5 P1 Right White Guitar RxBxx ✅ ✅ ❌ Not Supported yet on DTX ✅   26 P2 Turn/Scratch Not Used Guitar RGxxx ✅ ~ ❌ Not Supported yet on DTX ✅   27 P2 FootPedal Not Used Guitar RGBxx ❌ ~ ❌ Not Supported yet on DTX ✅   28 P2 Key 6 Not Used Guitar Wail ✅ ~ ❌ Not Supported yet on DTX ✅   29 P2 Key 7 Not Used Not Supported ✅ ~ ~ Supported ~   2A Not Used Not Used Not Supported ~ ~ ~ Not Used ~   2B Not Used Not Used Not Used ~ ~ ~ Not Used ~   2C Not Used Not Used Guitar Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2D Not Used Not Used Bass Long Note Start/End Point ~ ~ ~ Not Supported ~ AL   2E Not Used Not Used Not Used ~ ~ ~ Supported ~   2F Not Used Not Used Guitar Wailing Sound ~ ~ ❌ Not Supported yet on DTX ✅        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     30 Not Used Not Used Not Used ~ ~ ~ Not Used ~   31 P1 Key 1 Hidden P1 Left White Hidden HiHatClose Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   32 P1 Key 2 Hidden P1 Left Yellow Hidden Snare Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   33 P1 Key 3 Hidden P1 Left Green Hidden Bass Drum Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   34 P1 Key 4 Hidden P1 Left Blue Hidden High Tom Hidden Note ❌ ❌ ✅ BMS/PMS in 4.9.10 \\ Supported ✅   35 P1 Key 5 Hidden Not Used Low Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   36 P1 Turn/Scratch Hidden Not Used Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   37 P1 FootPedal Hidden Not Used Floor Tom Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   38 P1 Key 6 Hidden Not Used High Hat Open Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   39 P1 Key 7 Hidden Not Used Ride Cymbal Hidden Note ❌ ~ ✅ BMS in 4.9.10 \\ Supported ✅   3A Not Used Not Used Left Cymbal Hidden Note ~ ~ ✅ Supported ✅   3B Not Used Not Used Left Pedal Hidden Note ~ ~ ✅ Supported ✅   3C Not Used Not Used Left Bass Drum Hidden Note ~ ~ ✅ Supported ✅   3D Not Used Not Used Not Used ~ ~ ~ Supported ~   3E Not Used Not Used Not Used ~ ~ ~ Supported ~   3F Not Used Not Used Not Used ~ ~ ~ Supported ~        BMS / PMS / DTX Channel BMS Name PMS Name DTX Name OutFox BMS Support OutFox PMS Support OutFox DTX Support OutFox Status Comments NX/Ver. K Support     40 Not Used Not Used Not Used ~ ~ ~ Not Used ~   41 P2 Key 1 Hidden Not Used Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   42 P2 Key 2 Hidden P1 Right Blue Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   43 P2 Key 3 Hidden P1 Right Green Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   44 P2 Key 4 Hidden P1 Right Yellow Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   45 P2 Key 5 Hidden P1 Right White Hidden Not Used ❌ ❌ ~ BMS/PMS in 4.9.10 ~   46 P2 Turn/Scratch Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   47 P2 FootPedal Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   48 P2 Key 6 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   49 P2 Key 7 Hidden Not Used Not Used ❌ ~ ~ BMS/PMS in 4.9.10 ~   4A Not Used Not Used Not Used ~ ~ ~ Not Used ~   4B Not Used Not Used Not Used ~ ~ ~ Not Used ~   4C Not Used Not Used Bonus 04 ~ ~ ❌ Not Supported ✅   4D Not Used Not Used Bonus 03 ~ ~ ❌ Not Supported ✅   4E Not Used Not Used Bonus 02 ~ ~ ❌ Not Supported ✅   4F Not Used Not Used Bonus 01 ~ ~ ❌ Not Supported ✅    Sound Effect Channels 01 to 32 on DTX are also supported.\nFor the complete table see Our Wiki (coming shortly as squirrel needs to finish writing them!)\n Reordered Game Mode Select Screen    This alpha with the fact we have begun to introduce new modes and features, we have reordered the game modes based on some player/community feedback, with the \u0026lsquo;lesser\u0026rsquo; or \u0026lsquo;niche\u0026rsquo; modes moving down a bit in the order. Makes it easier to find things you need, and please give us feedback if you feel a mode needs more representing/love!\n Mac OS builds are now signed!    We have finally passed all the requirements to be able to sign the binary, so this means no more xattr stuff anymore! we just act like any other application.\n Mode Status:     New Cross Platform MIDI Driver!    Due to the interest we had been getting from the past two alpha releases in the form of gddm and techno, several players that were not on windows did enquire about the possibility of there being a new MIDI driver available for Mac and Linux users to make use of for their midi fighters, e-drums, etc and we decided as a team to move forward and produce one.\nThe midi driver stands alone, there is no need to have any extra applications \u0026lsquo;translating\u0026rsquo; it to keystrokes, (unless you\u0026rsquo;re doing midi via an iphone or something like that of course), but native midi controllers work a treat. If you have a midi device and want to try this out, you will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=portmidi,SDL\nThis will allow the midi driver to load, and set up your device. We have currently coded it for a single device at a time, but do let us know if you feel there is a need for multiple device support, or if you find a device that doesn\u0026rsquo;t behave!\nI also was able to make a prototype mini FSR pad for midi using a teensy LC and some tiny FSR sensors:\nThis worked a treat, so you can definitely get on to some tinkering if you want to make your own devices to play the game!\nThis driver works on Windows, Linux, RPi, Mac OS (intel) / Mac OS (M1) and Rockchip aarch64 SoCs    We are still working on latency and control, so let us know if you find anything quirky!\n Windows legacy input driver    There has also been work done on a small side part of the game, while we have been waiting for a fix from upstream in regards to the \u0026lsquo;polling/framerate\u0026rsquo; issue that a lot of folks have helping us diagnose for some time. The long and the short of the issue, it meant on some songs, the input would skew towards the update loop rather than honouring it\u0026rsquo;s timestamp, thus producing \u0026lsquo;spikes\u0026rsquo; on the scoring graph at the end of the song, and make a odd looking \u0026lsquo;stair\u0026rsquo; display on the scatter plot of the steps and judgements taken.\nTo resolve this while we\u0026rsquo;re waiting a fix, we have reimplemented the old legacy driver that was on 5.2/5.1 and adapted it for OutFox. This driver can be tempremental, but it seemed to behave with the devices we tested it with. If you tend to find that your input is affected with the message loop issue, you can set up the driver with the following instructions.\nYou will need to load up your preferences.ini in your save folder, locate the inputdrivers= part, and then make sure it looks like this inputdrivers=legacy,minisdl\n(if you wish to use the new portmidi driver as well you can use InputDrivers=legacy,minisdl,portmidi)\nThis will allow you to run the game with minimal resources, keeping vsync on, and should remove any previous issues of fps/rate/polling problems. When we have the fix from upstream, we\u0026rsquo;ll revisit and modernise this with the newer drivers and processes.\nOn the \u0026lsquo;test input\u0026rsquo; screen, you will see a new Window Handler \u0026lsquo;Aux\u0026rsquo; driver. This is just the driver that manages the window controls, maximises, fullscreens, etc, so no need to worry about it. This will also show you, that you have the correct drivers selected in the inputdrivers setting.\n Rate and Pitch Changes:    Due to an overwhelming set of requests, we have taken time to fix and modernise the rate/haste system which had been broken for a bit since this project began.\nPitch seemed to be a lottery (though we had not seen it work) and all the rate mod used to do was seemingly speed up the song with no other effect or option being honoured.\nSimilarly, we have moved the ratemod to the first screen of the song options - thanks to the stamina players that popped in to request this, and to mattm for saying that most wanted a speed AND pitch option, which we have called \u0026lsquo;both\u0026rsquo; internally to signify this change.\nThe new layout looks like so:\nWe have fixed the way the off/speed/pitch/speed and pitch options work, so they actually work. This took quite a bit of time to fix the internal pipelines for these, but the end effect is definitely fun. Thanks to Squirrel, Jousway and Jose for bringing this one up the pipeline to get it done for this release!\nTo ensure compatibility with legacy themes, the system \u0026lsquo;defaults\u0026rsquo; to how it was in 5.0.12, with a 0.01x increase, and being on the main menu as folks requested. This is a long overdue Quality of Life update for this, so we\u0026rsquo;re really pleased it\u0026rsquo;s done.\n KNOWN ISSUES: Alpha 4.9.9     ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE gddm mode: We do not support the XA codec at this time, it\u0026rsquo;ll play silent. ❕❌ ISSUE beat/popn/gddm some early (pre2013) songs may play some sound samples / keysounds at the wrong speed   Full Changelog Follows:    ALL:    Mode Specific\n ❕✅ Fixed DTX Detection of track/lane sizes overflowing the notefield ❕✅ Fixed BMS/DTX/PMS Keysound iterator edge crash ❕✅ New! DTX Fixed Channel allocation ❕✅ New! DTX REAL mode (10 Lane support) ❕✅ New! DTX Dual Note support for lanes that require it ❕✅ New! DTX DTX 1A/1B/1C note channel support ❕✅ New! DTX Parser Support ❕✅ Fixed gh noteskin position issue ❕✅ Fixed popn roll note type explosion ❕✅ Fixed BMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed PMS missing difficulties (Thanks InfinitePhantasm!) ❕✅ Fixed DTX missing difficulties (Thanks InfinitePhantasm!) ❕✅ New! Added main drum types to DTX loader ❕✅ New! para 8 sensor 360 degree arcade style mode ❕✅ New! Added popn 18 lane (effectively popn-doubles) ❕✅ Fixed BMS Loader array ❕✅ Fixed B36 conversion on BMS/PMS/DTX ❕✅ Fixed PMS Loader array ❕✅ Fixed PMS layouts for 2 player ❕✅ Added popn doubles to style metrics ❕✅ New! Added taitai mode ❕✅ Fixed taitai layout and screen gameplay ❕✅ New! Added taitai to game selection screen ❕✅ Fixed dance row restrictions affecting all modes ❕✅ Fixed bug with double image caching on pump and dance ❕✅ Fixed missing beat content not installed ❕✅ Fixed gdgf issues with strumming ❕✅ Fixed crash with 2 player popn not setting locked difficulties ❕✅ Fixed seeded 2 player shuffle for dance/popn/beat ❕✅ Raise maximum player tracks to 20 ❕✅ Fixed \u0026lsquo;roulette\u0026rsquo; of sound volume of game assets ❕✅ Added support to modfiles for 1 column modes ❕✅ Fixed crash on 1 column modes ❕✅ Fixed taitai skins with the rewrite of taitai  Engine\n ❕✅ New! AutoGen Marker layouts in ScreenSelectMusic ❕✅ New! Haste RateMod control ❕✅ New! Linux RAW support ❕✅ New! JoyStick Threads ❕✅ Fixed x11 title bug in SDL preventing updates to upstream ❕✅ Fixed Ordering of GetBestFullComboTapNoteScore ❕✅ Fixed StepCollector lag in evaluation ❕✅ Fixed NoteDisplay errors in evaluation calculations ❕✅ Fixed common noteskin errors ❕✅ Fixed video banners breaking when backing out (Thanks Jubo!) ❕✅ Fixed video initialisation issue causing some videos to fail to load ❕✅ New! Initial Minefields ❕✅ Fixed extra debug lines ❕✅ Fixed Access Violation on GeForce 4, 100 and 200 series cards ❕✅ Fixed Access Violation on Radeon 5000, 6000 and 7000 series cards ❕✅ New! Optimised compilation chain for AMD based processors ❕✅ Fixed mines appearing in holds issue ❕✅ Fixed ModIconRow cycling into an infinite loop causing freezes on some menus ❕✅ Fixed note updates and crash on HowToPlay ❕✅ Fixed crash with some keysounds while in Editor ❕✅ Fixed hold head active and inactive being swapped on some modes ❕✅ Fixed score calculation on screen evaluation ❕✅ Fixed random mine explosions appearing due to a misplaced math calculation ❕✅ Fixed player calculations   ❕✅ Fixed errors in ArrowEffects ❕✅ Fixed RNG engine needlessly being called ❕✅ Fixed RNG stutter ❕✅ Removed RandomGen from the game for a more modern equivalent ❕✅ Fixed global calls and RNG seeds not being used ❕✅ Fixed linux compile and GCC complaints ❕✅ New! Die Rolling / Coin Flip RNG options ❕✅ Fixed duplicate Actor refresh call ❕✅ Fixed spiralz/spiralx overflow in axis calculation ❕✅ New! Added VSync High CPU when not focused pipe ❕✅ New! Added F3 + H for high cpu toggle for streamers ❕✅ Fixed Application knowing whether or not it has focus ❕✅ New! Added faster pow^2 math ❕✅ Forced mipmapping off on things that do not need it ❕✅ New! Added nanosvg support for SVG loading ❕✅ New! Added text support for SVG loading ❕✅ Fixed missing file closure in Rage image loading ❕✅ Fixed parsing of notedata in notedisplay ❕✅ Fixed handle releasing on some textures ❕✅ Fixed bug with notefield math ❕✅ Fixed Soundreader issues with mislabelled songs ❕✅ Fixed Lua Number type casting in NoteField ❕✅ Fixed compiler optimisations causing an AV in note display ❕✅ Fixed surface headers overflow in image loading ❕✅ Fixed bug with GL detection (Thanks Jousway!) ❕✅ Fixed Misaligned notefields with two players ❕✅ Fixed hid issue with some older pads ❕✅ Fixed hold heads being missed when correctly hit ❕✅ Fixed holds shorter than 1/16th being missed ❕✅ Fixed cleanup of elements in screengameplay ❕✅ New! Restored edit mode timing signatures option ❕✅ New! Added modern \u0026lsquo;pseudo\u0026rsquo; RNG to replicate missed \u0026lsquo;expected\u0026rsquo; SM5.x behaviour ❕✅ Fixed bug with missing buttons not being initialised ❕✅ New! Added new Lua hooks to allow consistent modfile RNG generation ❕✅ New! Added new Hardware MIDI handles to allow ultra low latency control ❕✅ Fixed issues with DTX based drumkits only using MIDI channel 9 to send off commands ❕✅ Fixed issues with DJ and Midi fighter style controllers having \u0026lsquo;stuck\u0026rsquo; pad keys ❕✅ New! Added new clap assist sound effect: Drumstick ❕✅ New! Added new metronome sound effect: Pan Lid ❕✅ Fixed bug with metronome and measure sounds ❕✅ New! Added new GL system for initialisation and checking, which is linux safe (Thanks Jous!) ❕✅ New! Added helper message for those with a d3d based renderer entry in their preference.ini ❕✅ Fixed crash with anyone using a 5.0/5.1 d3d entry ❕✅ New! Added effect volume F3 + F / F3 + G option on debug menu ❕✅ Fixed bug that used Windows 98 era code instead of modern equivalents ❕✅ Fixed effect volume turning down the Gameplay music ❕✅ Fixed SDL Init() system ❕✅ Fixed Model animations on P1 when both players are on ❕✅ Fixed Sound reader memory leak issues ❕✅ Fixed SDL input grabbing device handles it shouldn\u0026rsquo;t ❕✅ Fixed adaptable Windows handler so we can detach it from being a massive driver ❕✅ New! Restored Windows resize functions lost due to an SDL bug ❕✅ New! Maximise and Minimise window functions now operate as planned ❕✅ Fixed Lua faults reported in a few noteskins ❕✅ Fixed Bad enumeration generation ❕✅ Adjusted polling system to reduce CPU load ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ Fixed duplicate calls to DrawHoldPart() ❕✅ Fixed some controller events being stuck in the queue ❕✅ Fixed duplicate calls to GetCentreLines() ❕✅ New! restore Haste to the game ❕✅ Fixed math overflow with Haste ❕✅ Fixed application of Haste within the engine, to prevent odd uses outside of gameplay ❕✅ Fixed re-sampler and command queue for Haste ❕✅ New! moved Haste to an easier menu option ❕✅ Fixed crash with Haste not obeying sound effect option ❕✅ New! Added \u0026lsquo;SoundEffectBoth\u0026rsquo; (Speed + Pitch) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectPitch\u0026rsquo; (Pitch Shift) option for rate mods ❕✅ New! Restored \u0026lsquo;SoundEffectOff\u0026rsquo; (No Effect) option for rate mods ❕✅ Fixed speed being applied on every option ❕✅ Fixed crash with rate \u0026lt; 1.0 on pitch shift ❕✅ Fixed crash with rate \u0026gt; 1.7 on pitch shift ❕✅ Fixed crash in re-sampler when using Speed and Pitch options ❕✅ New! Move Rate mods to an easier menu option ❕✅ Fixed speed mod being called twice when rate was used ❕✅ Fixed smartsort on player options ❕✅ Fixed outfox-color-holds ❕✅ Restored set-color and set-effect ❕✅ Fixed BAO charging for 2 credits ❕✅ Fixed luastring parsing causing an edge crash on models ❕✅ Fixed race condition in BGLayer\u0026rsquo;s loading and unloading systems ❕✅ Fixed pre 2011 Ogg encoder bugged 44,099hz tracks crashing the game ❕✅ Fixed Sound loader buffer overflow ❕✅ Fixed image loader sometimes creating a transparent image ❕✅ Fixed mod parsing speed ❕✅ Fixed illegal OS keyworded lua call ❕✅ Fixed UTF uppercase conversion ❕✅ Fixed Locale lag on some parsing modules ❕✅ Fix Attack sync ❕✅ New! LoadActorForNoteSkin to set color and effect variables ❕✅ New! Beginning of Shift-JIS conversion support ❕✅ New! Force Nvidia/Intel Drivers to correctly update ❕✅ Fixed mouse calls in Lua ❕✅ New! Preference to turn off the deltaclock timer on the stats in top right ❕✅ Fixed character loading race condition ❕✅ Fixed StepsSelector module ❕✅ Fixed dangling file handles (closes #110 and #36 ) ❕✅ Fixed KeySound iterator to prevent edge crash on linux ❕✅ Fixed ratemod application for legacy themes ❕✅ Fixed pitch and rate being tied in the effect filter ❕✅ Fixed mismatched placements of notefields on some of the different modes  Windows 7+:\n ❕✅ Fixed several issues with SDL2\u0026rsquo;s pipeline that was causing weird slowdowns ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed issue with win32 midi driver ❕✅ Made the renderer drivers 64bit safe in preparation for 64bit build ❕✅🐲 New! Win32 Legacy Driver - part fixes #48 ❕✅🐲 New! MiniSDL Window handler - part fixes #48  Linux:\n ❕✅ Added PipeWire driver stub - work in progress ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Fixed Missing handle in renderer causing some odd edge crashes on KDE ❕✅ New! Cross Platform PortMIDI driver!  MacOS (Intel):\n ❕✅ Added tweaks to the initialisation method for low level windows to prevent the loading window ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  MacOS (Arm M1):\n ❕✅ Fixed issue with an edge case lag spike with M1 Airs with using Bluetooth Sound/Controllers ❕✅ New! Cross Platform PortMIDI driver! ❕✅ Fixed SDL input system on Monterey (MacOS 12) ❕✅ New! Signed Binary  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Added pipewire driver stub - work in progress ❕✅ Disable Wayland support until SDL fixes a few issues ❕✅ Added TurnOffWMCompositor preference for those on KWIN/MATE/Cinnamon etc ❕✅ New! Cross Platform PortMIDI driver!  Community content    Noteskins     ✅ New! gddmnoteskin: default with real support from Jousway ✅ New! ez2 noteskin: default from Lirodon ✅ New! taiko noteskin: crystal-taitai from Lirodon ✅ New! taiko noteskin: shizuka from Lirodon (graphics) and Jousway ✅ New! taiko noteskin: taitai and taitai3d from Jousway ✅ New! gdgf noteskin guitarDTX by yaladre  Theme     ✅ New! Soundwaves color scheme Golden Dawn by Moru. ✅ All other color schemes previously exclusive to Soundwaves Community Edition have been brought upstream (\u0026ldquo;BISTRO\u0026rdquo;, \u0026ldquo;Invert Standard\u0026rdquo;, \u0026ldquo;Rainbow FUN\u0026rdquo;, \u0026ldquo;Baby Pink\u0026rdquo;, \u0026ldquo;Sunny Day\u0026rdquo;, and \u0026ldquo;The Blood\u0026rdquo;) ✅ New! Soundwaves feature by Ksempac (merged from Soundwaves Community Edition); color scheme system now supports changing difficulty colors (check out Fuego and CincoCero for examples).  Translations     ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  "},{"id":4,"href":"/releases/A4.9.8/","title":"OutFox Alpha 4.9.8 Build","parent":"Release History","content":"Release Date: 25th April 2021    \u0026ldquo;An Alpha is never late, it arrives precisely when it means to!\u0026rdquo;    (Incorporates Internal Builds 4.9.7.1, 4.9.7.2 and 4.9.7.3)\n(Alpha Statistics - 562 commits, 1,255 changed files with 33,866 additions and 6,663 deletions)\nThis build requires a cache reset if you are on Linux or MacOSX, due to the internal changes. Please find your save folder and delete the contents of /cache. This will make your first time run of 4.9.8 slightly longer as it has to rebuild the index, but it is to accomodate the new modes/setup etc.     This alpha has tweaked the way the delta clock works, take care to read the information below!    If you find that your histogram is slightly skewed one side or the other, like the example below, please take a moment to go into options -\u0026gt; audio offsync and recalibrate your offset. Since 4.9.7GG we have slightly adjusted the renderer pipeline to optimise how we deal with frames within the Kernel Timer of the OS. This is to prepare for new sound/render drivers coming in the near future, but as we\u0026rsquo;ve found with a lot in this game, baby steps to fix little blockers before we do major updates. We also have removed more of the Rage Engine in favour of modern mathematics algorithms, and this has needed a slight tweak to the order on how we draw things.\nThis example above shows the mismatched offset from 4.9.7GG\nUsing the sound offset menu to sync your system, you can get a much tighter response, and this will enable you to chase those fantastics!\nPlease do the sound calibration in dance mode! This may not be available in your custom theme, so do it before you swap over!     PLEASE NOTE F2 TO RELOAD SCRIPTS HAS MOVED BACK TO THE F2 KEY!!! (for now as it will be a modders debug menu in the future)     New (and some Old!) Modes Update.    This (slightly delayed) month\u0026rsquo;s update beings some inner reworkings to the gameplay and modes available to play. We are listing them here for your awareness so you can help test them with us, but they will be officially announced in a future release, so please be aware these new modes ARE NOT COMPLETE, and DO NOT REFLECT the final finished versions for their type, due to the fact most of them have no dedicated theme or style setup as they\u0026rsquo;ve not been touched in 7-15 years. We are going to stop the trend of \u0026lsquo;adding new stuff then doing nothing with it\u0026rsquo; that was so common in the project we are formed from, so that is not going to continue with OutFox. All modes support all the modding systems that dance does, so for those of you that wish to explore, have at it! Most of these modes are sadly neglected and have been without support or a maintainer for upwards of a decade, so be a touch sympathetic to them if you decide to take the time to explore, they will be given the love they deserve.\nFirstly, lets talk about the new modes. These are still a work in progress, but are functional for you to experience.\nIf you wish to autogen charts, you can go to Options -\u0026gt; System Settings -\u0026gt; Project OutFox Settings -\u0026gt; Autogen Steps to ON. Restart your game, and the autogen will make some charts for you to play the new modes. For a better experience, go to the \u0026lsquo;modifiers\u0026rsquo; menu on player options (when you have selected a song, double tap start) and select super shuffle as it will rebalance the notes across the new modes, instead of favouring the left hand side. We will be fixing the auto-generator in a future release, but this works well for now for you to at least have a play.\nThe new keybindings for the modes will be updated shortly on our wiki.\ngddm    This is a 9 panel (and 10 panel) drum mode based off of the DTX drum kits and inspired by DrumMania, that supports Midi drums and original controllers. Midi support is only on Windows at this time, but we will have a working driver for all platforms by the end of the summer. Gameplay is played on drums, (or keyboard!) and follows the drum use in a chart.\nThe theming for this mode is incomplete, as is common with a lot of the project at the moment, but again there is enough there to play and experiment with! The editor can be used to create charts, as the new DTX loader for this mode is being built and will be made available in the future. If you have comments or thoughts about this mode, let us know.\n gdgf    This mode is based off of the 3 fret/lane guitar mode inspired from Guitarfreaks, however, we have chosen to expand it to include the 5 lane (and a new exclusive 6 lane mode!) for OutFox\u0026rsquo;s inspired mode.\ngdgf uses much tighter timing than the other guitar mode, so take a moment and test yourself if you\u0026rsquo;re feeling brave! This mode will use the new DTX loader when it\u0026rsquo;s complete, but you can also use Autogen or the editor to have a play with some charts in the meantime. Again, we have yet to build a theme for this mode, so please bear with us while we create new stuff for these modes.\n gh    This is a 5 lane (and 6 lane coming soon!) mode based off of a collection of popular games that used a guitar styled controller to press frets and strum along to bass and guitar parts of a song. We have added a new .CHART and .MIDI loader, and new note types and internal changes so this mode works without being squished around the old 4K dance engine side.\nThere will be new theme and broken down menu options for this mode in due course, when we introduce a new experience for those who wish to try it.\nWe support Jam Mode where one player can be one play type, and the other can backup or be rhythm. This has the benefit of adding variety into the play, and allows you both to play different parts of the song at the same time. You can do this on several of the styles. One thing to note! You should go into the player options when selecting a song and ensure that you set the modifications to Constant BPM, and set the speed mod to around C450 to emulate the speed from clone hero or similar. At the bottom of this menu, if you go to effects and scroll down towards the bottom, you will also see a new selection of modifiers available exclusively in gh mode: The evaluation and results screens will be reworked in the next version, so ignore the fact it\u0026rsquo;s counting calories and pretending to be dance mode!\n popn    This mode has been around for a very long time, but has not really had any support or been looked at since before 2010. It was side-lined into the BMS loader, which actually broke a lot of the needed changes PMS actually uses, and as a result most PMS files with 7 or 9 lanes, would be added to the game as beat 10 lane or 14 lane charts. It was known there were issues with this mode, but we were not aware it was broken as bad as it was.\nSquirrel would like to thank the anonymous japanese player we\u0026rsquo;ll name \u0026ldquo;竹 (Take)\u0026rdquo; girl, for reporting this bug, who wanted to play Nitro\u0026rsquo;s PMS chart of the song on OutFox, but experienced the issue above, and there were also issues with how the keysounds were being loaded for this song in popn mode and she took the time to give a very detailed report in DM on discord, but deleted her account before we could see her username. I thank you a lot for the report, and if you ever read this, please come and say hi in our discord!\nSquirrel took the time to investigate it and it was decided to code a new modernised PMS loader to the game, which now correctly loads PMS songs as they should be. This also removes the oddity and edge crashes when anyone wished to play popn mode on OutFox. This song, \u0026lsquo;竹\u0026rsquo; (Bamboo) charted by Nitro was used as a testbed to debug and ensure it properly works correctly in the game, so we took time to fix it so it would be recognised as a 9 Button PMS file. I\u0026rsquo;d like to thank Nitro for charting this as we would never have had the report which meant we could fix 13 year old bugs on our PMS and BMS loaders, and to 竹 girl for taking the time to bring it to our attention so we could fix this properly and have a restored mode. You can find them at https://twitter.com/NitroX72 - Thanks again Nitro!\nWe also have added 2 new noteskins from our community member Daniel, which really add to the style of the game. We have cat, cat-retro, bun, and bun retro!\n(The theme will be complete for the summer)\nWe have taken some older PMS files from the talented folks at Colorful Channel that also did not parse and work correctly, and these now do show up and play as expected once again.\nAs per the BMS/PMS specification, we also have added for the first time, new #BGA channel 06 (POOR), 07 (BG2) and 0A (LAYER 2) support, and will code these effectively when the theme for this mode is complete. We also support the missing LN# (Long Notes) that have never been in this game before, as well as the #ITEM channels.\nWe will continue to adapt and add the missing functionality from PMS moving forward, now it has it\u0026rsquo;s own loader. This loader now also supports 3 lane (in preparation for battle support), 4 lane for hello pop\u0026rsquo;n (ハロー！ポップンミュージック) and 5/7 lanes for pop\u0026rsquo;n portable (ポップンミュージックポータブル). These have been coded and added to the game, with the 3 lane awaiting new PMS code and subtype item code to be added before it will work. There is also a rumoured 18 lane mode, which I\u0026rsquo;m trying to research. If you know any sources/samples/charts, let Squirrel know!\n beat    Just adding this here to show the \u0026lsquo;miss\u0026rsquo; or #BGA06 POOR layer in action. As is typical, we have no theme\u0026hellip;\nThis needs coding and the proper layout supported, as moving forward we also want to add and support the missing BMS specification as well as add new support via BMSON in the future. It is just part of our pledge to support new and interesting modes moving forwards that we hope folks will enjoy!\n techno    We have added the missing 9panel/18panel support from this mode, as requested by a few folks. There was enough demand to add the extra panel. You can create charts for this on the editor, as we do not believe there are any sims for this yet!\n18 panel example gameplay is here: This mode requires good mobility and that you don\u0026rsquo;t use too much polish as slippery pads can lead to falls!\nA Techno 18 panel in the wild, with a cat token collector!\n Changes to Default Theme Pause Menu    This one is important. Due to the need to change the system for the new BGA/Layer system for the BMS/PMS/DTX etc mode support, we have had to adjust the methodology in how the pause menu is drawn by the theme. On the default theme, the hold escape to give up option has been swapped to give an instant display of the menu. Older/OutFox supported themes that are specifically for dance will experience no change here, as we have kept backwards compatibility for them. We will look at re-adding this \u0026lsquo;hold\u0026rsquo; option in the future perhaps if it can be sorted within the new modes.\n ** New Feature **\nHold/Roll Tail Type - Lift    This function will add a tail note to all holds and lifts, making it so that you have to lift your foot/finger/etc from the end of a hold. This adds a little bit of a challenge for files, and can help with training for foot positions for players that wish to progress to higher chart difficulties. The benefits of removing the foot at the correct time can enable better preparedness for upcoming streams or any technical that the chart may have, which could be lost because of inaccurate foot removal from holds or rolls.\nOn rolls, they have the same behaviour as before, however, the last lift will be done on the \u0026lsquo;beat\u0026rsquo; of that roll. Once more, this trains for better foot stance and movement when a roll ends especially for stamina play. The player will be recorded a normal note \u0026lsquo;miss\u0026rsquo; if the tail lift is not performed at the correct moment.\nThese modifiers are available in all game modes, however, not all noteskins will have the support for them, and some themers will need to add these to their player options menus if they wish to add the availability to their theme.\n KNOWN ISSUES: Alpha 4.9.8     ❕❌ ISSUE gh mode: Some charts have no real \u0026lsquo;standard\u0026rsquo; and will cause a crash when loaded into the game ❕❌ ISSUE gdgf mode: The input mode doesn\u0026rsquo;t correctly register strums ❕❌ ISSUE techno/popn/gdgf/gddm/gh/para mode: Trying to use the sync audio screen will crash the game - Use dance to sync your game for now ❕❌ ISSUE Nvidia 460 series drivers: Some issues have been reported and we are investigating ❕❌ ISSUE beat/popn some early (pre2013) songs may play some sound samples / keysounds at the wrong speed  ALL:     ❕✅ Fixed video banners ❕✅ Fixed missing str2int support ❕✅ Added new sanity check for notes in the StepCollector ❕✅ Added multiBaO support stub for future use ❕✅📝Fixed F6+F3+3 restart on screen gameplay crash #23 (Thanks @pcboygames!) ❕✅📝Fixed Video Rates not being in time to beat #220 (Thanks @SilentTempest83!) ❕✅ Fixed DrawMode C style error with some legacy modfiles using -1 ❕✅ Fixed initial scoring tables to ensure fallback scoring was consistent ❕✅🐲 Added Random Unsigned capabilities ❕✅🐲 Added DDR style random generator for BG Anim ❕✅🐲📝 Fix Python2/3/ExtIO/Satellite from sitting in a never ending loop (Thanks Dalcor!) ❕✅🐲📝 Fix Crash on Python2 boards on windows 7 (Thanks Dalcor!) ❕✅🐲 New working touchscreen code ❕✅🐲 Multi-touch finger support ❕✅🐲📝 Fix Menu buttons remapping on restart #278 (Thanks @Areldyb!) ❕✅ New Higher Res icons for the default theme ❕✅🐲 Add new Reflex and SMX HIDAPI driver stubs ❕✅🐲 Add new Reflex Player 2 and SMX Player 2 HIDAPI driver stubs ❕✅ Optimise VideoModeParams ❕✅🐲📝 Fix Math in Tween Sub systems #271 ❕✅🐲📝 Remove Heap and Memory Stack issues with Tween System #272 ❕✅🐲📝 Add Remaining 4 point Tween animation functions #273 ❕✅📝Fixed Game Crash when song preview ends #305 ❕✅📝Removed final batch of cmd in fallback #298 ❕✅📝Removed Pause Menu from the game due to QA #269 ❕✅📝Make Profile information load upon loading #297 ❕✅ Add support for multi-layered press check on mouse input for Lua ❕✅ Fixed \u0026lsquo;sticky\u0026rsquo; mouse keys on some screens not honouring bIsPressed = false ❕✅ Added proper Mouse / Touch co-ordinate system to the game ❕✅ Added 1080/720/480p screen co-ordinate support for non-default / legacy / 5.x themes ❕✅ Added new streamlined pause menu which is not hidden when mods or gimmicks are used ❕✅ Fixed missing pause menu on BMS/PMS ❕✅ Fixed index overflow with some background movies ❕✅ Fixed duplicate start sound playing on edit menu ❕✅🐲 Restored smooth tween back to the game ❕✅ Removed smooth tween from Lua ❕✅ Adjusted behaviour on orient to be more accurate on placement when close to notes ❕✅ Renamed guitar to gdgf to ensure clarity ❕✅📝Corrected \u0026lsquo;moteskin\u0026rsquo; typo (Thanks Moneko!) ❕✅ Fixed Para noteskin ❕✅🐲 Added new upscale filter options for FFMPEG ❕✅🐲 Added new DTX loader skeleton ❕✅🐲 Added new BMS-DTX space support ❕✅🐲 Added new #BGA 06/07/0A support for PMS/BMS files ❕✅🐲 Added new BMP loader stub ❕✅🐲 Added new TJA loader skeleton ❕✅🐲 Added new CHART loader stub inspired by Mikex5 ❕✅🐲 Reworked and rewrote CHART loader to function effectively with OutFox ❕✅🐲 Added new MIDI loader stub inspired by Mikex5 ❕✅🐲 Reworked and rewrote MIDI loader to function effectively with OutFox ❕✅🐲 Fixed initial parsing modes with chart and midi not producing playable charts ❕✅🐲 Added gh Guitar 5/Bass 5 mode to the game ❕✅🐲 Added new note groups: hopo, open, strum ❕✅🐲 Added gh fever system ❕✅🐲 Added gh multiplier system ❕✅🐲 Added gh anchor system ❕✅🐲 Added ability to play as main and backing in gh mode ❕✅🐲 Added new gh noteskins ❕✅🐲 Fixed and rewrote midi parser to support expected note types ❕✅🐲 Fixed and rewrote chart parser to support expected note types ❕✅ Fixed bug with some songs generating NULL after being loaded with the midi loader ❕✅ Added 5 and 6 lane modes to gh mode ❕✅ Added 6 lane mode to gdgf mode ❕✅ Added anchor support to gh mode ❕✅ Fixed holds in gh / gdgf / beat / popn / para fading to black when hit ❕✅🐲 Fixed #LN holds being drawn erratically on beat/popn modes when using older parser ❕✅🐲 Fixed unable to hit \u0026gt;4 pop-kuns at the same time bug in popn ❕✅🐲 Fixed unable to hit row of 9 in a row pop-kuns at end of \u0026lsquo;take\u0026rsquo; in popn ❕✅🐲 Fixed unable to hold more than 2 pop-kuns at the same time bug in popn ❕✅🐲 Added new popn PMS loader rewritten for OutFox ❕✅🐲 Added new popn loader modes and styles missing from the game ❕✅🐲 Fixed Vorbis overflow with some PMS files when loading a mix of .wav and .ogg keysounds ❕✅🐲 Fixed crash on restarting song from pause menu when loading a mix of .wav and .ogg keysounds ❕✅🐲 Added new colour key effect, mainly in preparation for new BGM support ❕✅ Fixed overflow in notefield on techno 16 and 18 styles ❕✅ Fixed merge error in Game manager that lost gddm on some options ❕✅ Added new Vorbis check statements for new formats ❕✅🐲 Fixed missing GL1.1 hook that mis-fired and allowed ancient hardware to crash ❕✅ Added 9/18/20 lane support for missing modes ❕✅ Remove RageVector4 from the game ❕✅ Remove RageVector3 from the game ❕✅ Remove RageMatrix from the game ❕✅ Remove RageColor from the game ❕✅📝Add additional actor support for noteskins (Thanks chairodactyl!) ❕✅ Fix renderer context handover ❕✅ Fix diffuse errors on theme elements ❕✅ Added Techno support for Broadhead ❕✅ Fix duplicated function calls in BMS/PMS parser ❕✅ Modernised Fallback code (Thanks Moru!) ❕✅ Removed broken song selection for gh ❕✅ Fixed Pause Menu System drawing errors when BGM/Modfiles could hide it by accident ❕✅ Fixed Pause Menu counting collection ❕✅ Fixed NextSong unpausing ❕✅ Fixed ScreenMessage handles being corrupted ❕✅ Fixed Crash on HandleMessage ❕✅ Fixed Crash on GetTopScreen() when pause was hidden ❕✅ Fixed White fade in quads on the new fallback updates ❕✅ Added new support for 240/280hz Monitors by adding a new delta clocks call. (You may need to readjust your offsets!) ❕✅ Set fallback to skip caution menu on non dance modes ❕✅ Change the \u0026lsquo;effects\u0026rsquo; menu to Modifiers, as it should be ❕✅ Don\u0026rsquo;t show dance specific stats outside of dance modes ❕✅ Fix spinning requirement on modern-2d ❕✅ Modernise the Lua Mouse Broadcasting methods to be system wide supported ❕✅ Fix libusb causing crashes on linux and mac ❕✅ Remove life punishment from gh mode ❕✅ Modernise note types ❕✅ Fix AV crash when loading more than 254 wav files on a PMS, caused by a pointless ASSERT\u0026hellip; ❕✅ Fix AV crash when loading more than 254 ogg files on BMS/DTX, caused by a pointless ASSERT\u0026hellip;  ** New Feature **\n ❕✅ Added New VideoUpScaleFilter Preference  This is for people who took the time to request this availability in the video renderer. The default value is 0, which will do no filtering. If you have an older system, take the time to experiment and see how it affects your performance, as this will add a little load onto your system.\nThe accepted numbered values are: 0 - none \u0026lt;- Recommended for Rpi/Low end machines 1 - fast bilinear 2 - bilinear 3 - bicubic 4 - X Sharpens + Contrast 5 - Point 6 - Area 7 - Bicublin \u0026lt;- Recommended 8 - Gaussian 9 - Sinc 10 - Lanczos 11 - Spline\nTake your time and experiment with the aesthetic you want for your videos, and your performance of course.\nWindows 7+:\n ❕✅ Fixed several issues with SDL2\u0026rsquo;s pipeline that was causing weird slowdowns ❕✅ Fixed SDL2 issue where sound would crackle and pop on MK9 cabs ❕✅ Fixed Issue where XInput controllers wouldn\u0026rsquo;t be seen when in arcade pad mode ❕✅ Fixed issue with HIDAPI handles freezing on older Intel OHCI boards ❕✅ Changed 2 options to fix a crash with older Intel GPU chips ❕✅🐲 Fix buffer overflow on Reflex Pad Driver ❕✅🐲 Fix edge crash on 3000+ combo flashes on Reflex Pad Driver ❕✅ Add RTIO driver stub  ** New Feature **\n ❕✅ Added New UsingArcadePads Preference  This is for people who have Python Boards, You can set this to enable the driver to work natively without any freezes. As per the work on \u0026lsquo;starworlds\u0026rsquo; you need to set your preference.ini InputDrivers=Python23IO,SDL. This will set up your board driver, and allow you to use keyboard/XInput/Bluetooth controllers to control the game while you\u0026rsquo;re on your pad. You will need to set UseOldJoystickMapping=0 so the game will initialise the XInput controller driver alongside your Python board.\nThis preference only currently supports the Python23IO driver, but will be expanded to Reflex and other drivers in the future. PLEASE NOTE: You need to add the SDL on your InputDrivers or you will have no keyboard input!!\nWindows XP Service Pack 3 (32bit):\n ❕❌ ISSUE Identified the issue that is preventing builds running on this OS, fix is in testing for next alpha ❕❌ ISSUE Identified an issue with compilation that is currently being investigated with FFMPEG  Linux:\n ❕✅ Added tweaks to the initialisation method for low level windows to prevent X sometimes hanging ❕✅ Added new WayLand stub, full support hopefully next alpha ❕✅ Added LightsDriver Linux Stac, (Thanks Din!) ❕✅ Fixed Edge Crash with ScreenMessage on Ubuntu 18.04/19.x ❕✅ Fixed Rare Game Freeze with ScreenMessage on Mint 16+ ❕✅ Fixed Edge Crash when plugging in Red Octane dance pads on Ubuntu 16.04+ ❕✅ Fix Linux compile for actors  MacOSX (Intel):\n ❕✅ Added tweaks to the initialisation method for low level windows to prevent the loading window from never closing on Sierra/High Sierra  MacOSX (Arm M1):\n ❕✅ Fixed issue with an edge case lag spike with M1 Airs with using Bluetooth Sound/Controllers ❕✅🐲 Fixed issue where playing some songs could crash the M1 Air  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Fixed compilation issue on Raspberry Pi 3 that prevented the game from running for folks with 1.0/1.1 revision boards ❕✅ Fixed bug with Raspberry Pi 3 and Orange Pi that didn\u0026rsquo;t expose 64bit support properly ❕✅ Fixed AARCH64 hooks causing a memory segfault  New community content:    Colors\n ❕✅ New colour scheme Y2K from jack5github ❕✅ New colour scheme DragonFire from Lirodon  Music\n ❕✅ Added new menu music courtesy of https://sanxion7.com/album/rush (Go see them @ https://twitter.com/SaxxonFox )  NoteSkins\n ❕✅ New popn noteskin: cat from Daniel Rotwind ❕✅ New popn noteskin: cat-retro from Daniel Rotwind ❕✅ New popn noteskin: bun from Daniel Rotwind ❕✅ New popn noteskin: bun-retro from Daniel Rotwind ❕✅ New popn noteskin: default from Lirodon ❕✅ New gh noteskin: default from Jousway ❕✅ New gh noteskin: shotrhythm from Jousway ❕✅ New gh noteskin: modern-2d from Lirodon ❕✅ New gdgf noteskin: default from Jousway ❕✅ New gddm noteskin: default from Jousway ❕✅ New techno noteskin: default from Lirodon ❕✅ New global noteskin: broadhead-columns from Lirodon ❕✅ New global noteskin: webbed from Lirodon  Translations\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":5,"href":"/releases/A4.9.7GG/","title":"OutFox Alpha 4.9.7GG Build","parent":"Release History","content":"Release Date: 23rd February 2021    \u0026ldquo;Good Game, Well Played\u0026hellip;\u0026rdquo;    SDL is SUS\nPlease take a moment to understand that there is a lot in this Alpha Release, so please take a moment to read over the changes!    LINUX USERS! IF YOU HAVE A BLACK SCREEN ON LOADING DUE TO NOUVEAU/ATI DRIVERS, GO INTO YOUR PREFERENCE.INI AND SET HIGHRES_TEXTURES TO AUTO!!!!    HighResolutionTextures=ForceOn needs to be HighResolutionTextures=Auto However, some machines may need it to be HighResolutionTextures=ForceOff You may also need to set your MaxTextureResolution=2048 to MaxTextureResolution=1024 as well.\nGG HotFix patch    Thanks to several upstream issues, we\u0026rsquo;ve taken the decision to move the underlying version of the SDL engine back to how it was on 4.9.6, and we\u0026rsquo;ll monitor and troubleshoot the issues some of you guys faced in 4.9.7. We apologise for those on Linux for the issues, and we have now forked our own SDL branch to doublecheck for issues in the future.\n4.9.7GG Specific Fixes\n ❕✅📝 Fixed Crash when entering Extended/Course Mode [Dance] when entering options #29 (Thanks Jubo!) ❕✅📝 Fixed System Lockup on certain nouveau drivers when launching the game #209 (Thanks Din!) ❕✅📝 Fixed Segfault on game launch with older ATI cards on linux #208 (Thanks Din!) ❕✅📝 Fixed Crash on Twister OS on the RPi #216 (Thanks snil4!) ❕✅📝 Fixed Smoothlines Issue #164 (thanks natano!) ❕✅📝 Fixed Crash after load screen on RPi 4 64bit #211 (Thanks eudes!) ❕✅📝 Fixed Crash on Calibrate Audio Sync on pump #210 (Thanks Shrmp0, Kaede573!) ❕✅ Fixed Performance Drop due to renderer present context ❕✅ Removed nvidia driver debug code causing some issues ❕✅ Tweaked GLEW to not cause a race condition ❕✅ Fixed bug where window was presenting a GL version not supported by the system ❕✅ Fixed one of my oopsies by leaving in a forced Nvidia GL debug option ❕✅ Force High Res Textures to auto since we\u0026rsquo;re now as size 2048 ❕✅ Force High Res Textures to auto to fix crash on mesa on ARM32 based boards ❕✅ Fixed Crash on Pinebook/RockPi4 due to bad opengl initialisation ❕✅ Downgraded SDL back to OutFox 2.0.13modded ❕✅ Fixed font size and life bar on pump mode ❕✅ Fixed icon sizing on the application itself ❕✅ Add missing visuals for pump mode ❕✅ Fix GLAD being wrongly selected on some systems, causing a crash ❕✅ Added 41 new tween system for further use in the future ❕✅📝 Moved profile size to 20MB #215 (Thanks Kellykato!) ❕✅ Updated docker build system to support new changes  OutFox 5.3.0-alpha.4.9.7 Build - 20th February 2021 \u0026ldquo;We\u0026rsquo;re Only Human After All\u0026rdquo;    Windows 10 is getting a pain to code for, da-don!    Nvidia 460+ Driver Issues + Windows HotFix!    There has been a flurry of bug reports due to the new GeForce Experience based drivers moving into 460. There are some quite fundamental changes in this driver that have affected our LowLevelWindow system, and the way we draw. The latter will be fixed over the coming months, so we can be proactive and fix the issue before it becomes a game breaking situation. There is no way to \u0026lsquo;force\u0026rsquo; a bit per pixel or bpp in this version, as it\u0026rsquo;s being moved into a different function, that we will re-expose in the next alpha. This has no affect on gameplay or mode changes in the game, however it means if you\u0026rsquo;re on a system we consider historic (\u0026lt;1999) or vintage (2000 - 2007), you may need to force the settings in the preference.ini to set your \u0026lsquo;texture color depth\u0026rsquo; to 16. as always if you have any questions or need help, do not hesitate to reach out to us in our discord server https://discord.gg/hSHPAU37t8\nWe are still working on restoring some settings changed in the operating system in the 20H2, which can limit frame rate, force your GPU to change delta clock accuracy and even affect the kernel poll/tick rate. These issues will be resolved in a future update as we find out more from Windows Dev support/MSDN.\nNvidia Specific Fixes\n ❕✅ Fixed Crash with Generating Avatars for profiles due to texture format ❕✅ Fixed Crash with Changing VSync via F3 + 7 (Thanks Shockdude) ❕✅ Fixed Race Condition Crash with debugoverlay (Thanks Shockdude) ❕✅ Fixed Crash with Setting Refresh Rate (Thanks Moneko, Moru) ❕✅ Fixed Crash with Paraph AMV Heavy Modfiles causing a Texture overflow (Thanks Moru, Paraph) ❕✅ Fixed Crash with Paraph AMV Heavy Modfiles causing a Context Splice problem (Thanks Moru, Paraph) ❕✅ Fixed Crash with Paraph AMV Heavy Modfiles not clearing correctly on song close (Thanks Moru, Paraph) ❕✅ Fixed Crash caused in method to intialise the OpenGL and GLAD render pipes ❕✅ Forced OpenGL \u0026lt;4.1 as the new driver is unstable on anything newer at this time ❕✅ Fixed Crash with Theme changes from default ❕✅ Add Object Flags to prevent crash with some of the more exotic mod files  StepMania Random Number Generation    Since the beginning of this project, we have had a few bug reports about the \u0026lsquo;random\u0026rsquo; number generator in the game not being\u0026hellip; well, random at all. We have been spending some of the time in the downtime over the holiday to actually look into this and we discovered that the system was indeed not performing remotely as designed, and has been broken since late 2004. The main bug report was #22 and #59 by @PCBoyGames and well, we discovered that on further investigation, those bugs were caused to a misinterpretation of the way that the random generator was designed and how it should be used in getting/acquiring a random number.\nSuperShuffle/Blender and Soft_Shuffle    This was further crushed in it\u0026rsquo;s delivery with shuffle and super shuffle, and anything really that relied on these broken systems. To resolve them we have removed the 1999 era code and modernised it to current modern standards. This has the benefit of completely fixing SuperShuffle (Blender on old versions) and now the distribution is as expected, not to the left.\nThis has the side effect of making the randomness different for each player so bear this in mind if you\u0026rsquo;re going to play! We will add a Mirror function for this so Player 1 = Player 2 in the future.\nPORTAL on the Music Wheel    Those of you that use the default theme, we have returned a feature that was oddly missing on 5.3, and that was the Portal slot next to Roulette and Random.\nWhat is Portal? Portal will pick at random from an open folder/group and if you move on it and away from it it will select a different song. If you close your folder so none are open, then portal will pick at random from your whole collection for that mode.\nExtended Mode    Most Played should now spawn songs, I sadly have a low level of played songs due to this being a development build, but you can get the general gist of how this system works.\nFolder Courses now spawn a collection as expected, and should be different ONI Mode    With the new random modes now working as expected, this has been a welcome quality of life for ONI mode: Artist songs are now shuffled as expected!\nEndless Mode    This mode has never been given any love so far from the dev team, so much so even the layout hasn\u0026rsquo;t been finalised! We will look at fixing this and making this mode consistent in the future, so forgive the \u0026lsquo;default\u0026rsquo; looking layout.\nRandom Attacks    There were issues with how this methodology was supposed to actually work, as it likely has been broken for so long. Well in this release, we have unique per player random attacks for that extra challenge! The text file RandomAttacks.txt in your /Data file can be filled with fiendish ideas that can help or hinder a player, so do take a moment to be naughty (or nice!) and populate that file with some cool effects!\nWith the removal of the legacy code and the new updates, we can happily say that we have squashed 37 upstream bugs that have been around since the SM 3.0 era.\nRandom Number Generator Specifc Fixes\n ❕✅ Fixed Edge Case Crash with random background movies when only one movie was present ❕✅ Fixed Random Movies only selecting 0, 1, or 2, movies in a folder ❕✅ Fixed Random Backgrounds only selecting 0, 1, or 2 backgrounds in a folder ❕✅ Fixed Random Movies showing the same movie on song start ❕✅ Fixed Random Backgrounds showing the same movie on song start ❕✅ Fixed Course Generation on Extended Mode ❕✅ Fixed Course Generation on Oni Mode ❕✅ Fixed Course Generation on Endless Mode ❕✅ Fixed Course Generation on Survival Mode ❕✅ Fixed Shuffle Mode on the Music Wheel for Roulette ❕✅ Fixed Random Stage Seed generation ❕✅ Fixed GameState Seed generation ❕✅ Fixed Seed generation in NoteDataUtil, Allowing for better AutoGen ❕✅ Fixed Kickbox Autogen ❕✅ Fixed Song Shuffle being pushed to duplicates in SongManager ❕✅ Add new RandomInt function to allow for course generation without crashing ❕✅ Add new RandomFloat function for equivalent support for older content using it ❕✅ Fixed Math.Random being linked to a function that didn\u0026rsquo;t work as designed ❕✅ Fixed Random Attacks only selecting a maximum of 5 different during a song ❕✅ Fixed Random Attacks not actually being Random ❕✅ Fixed Random Attacks edge crash on Raspberry pi/M1 due to bad math function ❕✅ Fixed Random Attacks not completely loading the text file and making attacks available to the players ❕✅ Fixed Jukebox Mode not using the full available mode song selection ❕✅ Fixed Jukebox Mode not using the correct random mode for mod selection during playback ❕✅ Fixed Portal Mode not accessing folder based songs ❕✅ Fixed Portal Mode not selecting the available mode song list ❕✅ Fixed Edge Crash on Portal Mode with 2 Players selected ❕✅ Fixed Jitter Generation on BitMapText ❕✅ Fixed Distortion Generation on BitMapText ❕✅ Fixed Array Overflow where returned index was out of bounds ❕✅ Fixed now defunct RandomGen calls in course generation as they are no longer required ❕✅ Fixed bit underflow when Song Index is NULL  PLEASE NOTE F2 TO RELOAD SCRIPTS HAS MOVED TO THE INSERT KEY!!!    Sorry, we got tired of mishitting it to use F3, and F2 will become a new mod debug menu in a future update, so watch this space.\nTweens    We have also added new tween types for actors (30!) that were missing from the game, as they have been popularly requested to be available over the 4 we have in game at the moment. I promised Mr.ThatKid that we\u0026rsquo;d add them, so now they are available for all from Squirrel\u0026rsquo;s dragons branch. New documentation will be available in the Spring for these!\nTween Updates and Fixes\n ❕✅🐲 Optimised Tween calls ❕✅🐲 Added Tween fix for legacy tweentypes/selections ❕✅🐲 Added Tweens for EaseInSine/EaseOutSine/EaseInOutSine ❕✅🐲 Added Tweens for EaseInQuad/EaseOutquad/EaseInOutQuad ❕✅🐲 Added Tweens for EaseInCubic/EaseOutCubic/EaseInOutCubic ❕✅🐲 Added Tweens for EaseInQuart/EaseOutQuart/EaseInOutQuart ❕✅🐲 Added Tweens for EaseInQuint/EaseOutQuint/EaseInOutQuint ❕✅🐲 Added Tweens for EaseInExpo/EaseOutExpo/EaseInOutExpo ❕✅🐲 Added Tweens for EaseInBack/EaseOutBack/EaseInOutBack ❕✅🐲 Added Tweens for EaseInCircle/EaseOutCircle/EaseInOutCircle ❕✅🐲 Added Tweens for EaseInElastic/EaseOutElastic/EaseInOutElastic ❕✅🐲 Added Tweens for EaseInBounce/EaseOutBounce/EaseInOutBounce ❕✅🐲 Fixed bug on Sine Curve Drawing on 460+ Nvidia Driver ❕✅🐲 Fixed time based crashes in Actors ❕✅🐲 Fixed SetEffectPeriod crashing with some negative BPM effects ❕✅🐲 Fixed bug with compiler overoptimisation killing the tween curves ❕✅ Added new Actor functions for the eases (Thanks Mr.ThatKid!)  And finally back to normal business!    ALL:     ❕✅🐲 Added new colorkey effect ❕✅ Restored backwards compatible draw modes to support older content ❕✅ Fix Sine function floating point overflow ❕✅ Add new HIDAPI compliant library support for all platforms ❕✅ Fix Orient in reverse ❕✅ Stop game halting on mistapped ` Key while holding tab ❕✅ Add new PolyLineStrip DrawMode ❕✅ Make DefaultFailTypes Translatable ❕✅ Fix Player Unjoin ❕✅ Fix String to Int in reference to #168 (Thanks Natano!) ❕✅ Remove dependency on LibGLU (full removal in next release) ❕✅ Speed up Texgen functions (Thanks Arctic!) ❕✅ Update SDL2 and add OutFox patches ❕✅ Fix rotationy on holds with splines ❕✅ Optimise NoteColorActor/NoteColorSprite to not memory leak ❕✅ Fix MinTNSToHideNotes ordering ❕✅ Fix Field Flip check calling GameState too often ❕✅ Move Field Flip check to a less demanding section of playeroptions ❕✅ Fix int overflow on RageSoundPosMap causing stuttering ❕✅ Add New forward and back debug options for the camera in ScreenDebugOverlay F3 + S and F3 + D Upside down mirrored mode is available if you zoom out far enough! Reset with F3 + E ❕✅ Fix JoyStick and Controller instanceID being reset on hotplugging ❕✅ Fix JOY Index resetting on removal ❕✅ Set Console Command to use Tilde ~ instead of Pause ❕✅ Fix Finger Events on Touch Screens ❕✅ Fix Finger Movement and ensure mouse co-ordinates are taken into consideration if both move at the same time ❕✅ Add LuaScoring - Now fixes a lot of issues with timing systems, and allows for custom ones! ❕✅ Autosave Profiles when the game closes, as sometimes SetUserQuit() is interrupted when the window is closed ❕✅ Readd Portal function to the Music Wheel, welcome back! ❕✅ Fix the AvarageBPM typo - If your mode used AvarageBPM fix this! ❕✅ Cull the ancient PRNG code ❕✅ Fix the edges of the number font used for combo in Soundwaves. ❕✅ Add FAPlus timing mode (similar to existing ECFA, except Fantastic and Fantastic+ are scored the same with no percentage above 100%, and the lower Fantastic window is coloured white in the judgement font) ❕✅ Advanced timing modes are now scored out of 100%. ❕✅ Fix non-module based themes crashing on new SmartTiming entries, when they had their own LuaTiming entries ❕✅ Fix Start sound being played twice on controller menu ❕✅ Add pro-judgements to pump noteskins ❕✅ Fix invalid judgechoice on initialisation ❕✅ Change Arrows to our new Blue Brand Choice  Windows 7+:\n ❕✅ Fix MSVC warnings due to new windows updates ❕✅ Fix edge case crash with sound waveout driver ❕✅ Fix edge case system lockup caused by waveout driver ❕✅ Fix Modfile performance due to locale check tanking FPS ❕✅ Fix UTF-8 Calls slowing down mod performance  Windows XP Service Pack 3 (32bit):\n ❕✅ Fix edge case crash with sound waveout driver ❕✅ Fix edge case system lockup caused by waveout driver ❕✅ Fix edge case bluescreen on some Cmedia Audio sound cards / AC97 codec based cards ❕✅ Fix Modfile performance due to locale check tanking FPS ❕✅ Fix UTF-8 Calls slowing down mod performance  Linux:\n ❕✅ Fix deltaclock to monotonic to reduce pulseaudio lag ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix XInput RAW ❕✅ Add Wayland Preliminary Support - Needs more work yet however!  MacOSX (Intel):\n ❕✅ Fix SDL compilation ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix Xcode warnings  MacOSX (Arm M1):\n ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix Xcode warnings  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Fix deltaclock to monotonic to reduce pulseaudio lag ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix XInput RAW  New community content:    Colors\n ❕✅ Two new colour schemes from Moneko ❕✅ Some changes to the shadowtip 3D versions from R.O.B.-bot  Translations\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":6,"href":"/releases/A4.9.7/","title":"OutFox Alpha 4.9.7 Build","parent":"Release History","content":"Release Date: 20th February 2021    \u0026ldquo;We\u0026rsquo;re Only Human After All\u0026rdquo;    Windows 10 is getting a pain to code for, da-don!    Nvidia 460+ Driver Issues + Windows HotFix!    There has been a flurry of bug reports due to the new GeForce Experience based drivers moving into 460. There are some quite fundamental changes in this driver that have affected our LowLevelWindow system, and the way we draw. The latter will be fixed over the coming months, so we can be proactive and fix the issue before it becomes a game breaking situation. There is no way to \u0026lsquo;force\u0026rsquo; a bit per pixel or bpp in this version, as it\u0026rsquo;s being moved into a different function, that we will re-expose in the next alpha. This has no affect on gameplay or mode changes in the game, however it means if you\u0026rsquo;re on a system we consider historic (\u0026lt;1999) or vintage (2000 - 2007), you may need to force the settings in the preference.ini to set your \u0026lsquo;texture color depth\u0026rsquo; to 16. as always if you have any questions or need help, do not hesitate to reach out to us in our discord server https://discord.gg/hSHPAU37t8\nWe are still working on restoring some settings changed in the operating system in the 20H2, which can limit frame rate, force your GPU to change delta clock accuracy and even affect the kernel poll/tick rate. These issues will be resolved in a future update as we find out more from Windows Dev support/MSDN.\nNvidia Specific Fixes\n ❕✅ Fixed Crash with Generating Avatars for profiles due to texture format ❕✅ Fixed Crash with Changing VSync via F3 + 7 (Thanks Shockdude) ❕✅ Fixed Race Condition Crash with debugoverlay (Thanks Shockdude) ❕✅ Fixed Crash with Setting Refresh Rate (Thanks Moneko, Moru) ❕✅ Fixed Crash with Paraph AMV Heavy Modfiles causing a Texture overflow (Thanks Moru, Paraph) ❕✅ Fixed Crash with Paraph AMV Heavy Modfiles causing a Context Splice problem (Thanks Moru, Paraph) ❕✅ Fixed Crash with Paraph AMV Heavy Modfiles not clearing correctly on song close (Thanks Moru, Paraph) ❕✅ Fixed Crash caused in method to intialise the OpenGL and GLAD render pipes ❕✅ Forced OpenGL \u0026lt;4.1 as the new driver is unstable on anything newer at this time ❕✅ Fixed Crash with Theme changes from default ❕✅ Add Object Flags to prevent crash with some of the more exotic mod files  StepMania Random Number Generation    Since the beginning of this project, we have had a few bug reports about the \u0026lsquo;random\u0026rsquo; number generator in the game not being\u0026hellip; well, random at all. We have been spending some of the time in the downtime over the holiday to actually look into this and we discovered that the system was indeed not performing remotely as designed, and has been broken since late 2004. The main bug report was #22 and #59 by @PCBoyGames and well, we discovered that on further investigation, those bugs were caused to a misinterpretation of the way that the random generator was designed and how it should be used in getting/acquiring a random number.\nSuperShuffle/Blender and Soft_Shuffle    This was further crushed in it\u0026rsquo;s delivery with shuffle and super shuffle, and anything really that relied on these broken systems. To resolve them we have removed the 1999 era code and modernised it to current modern standards. This has the benefit of completely fixing SuperShuffle (Blender on old versions) and now the distribution is as expected, not to the left.\nThis has the side effect of making the randomness different for each player so bear this in mind if you\u0026rsquo;re going to play! We will add a Mirror function for this so Player 1 = Player 2 in the future.\nPORTAL on the Music Wheel    Those of you that use the default theme, we have returned a feature that was oddly missing on 5.3, and that was the Portal slot next to Roulette and Random.\nWhat is Portal? Portal will pick at random from an open folder/group and if you move on it and away from it it will select a different song. If you close your folder so none are open, then portal will pick at random from your whole collection for that mode.\nExtended Mode    Most Played should now spawn songs, I sadly have a low level of played songs due to this being a development build, but you can get the general gist of how this system works.\nFolder Courses now spawn a collection as expected, and should be different ONI Mode    With the new random modes now working as expected, this has been a welcome quality of life for ONI mode: Artist songs are now shuffled as expected!\nEndless Mode    This mode has never been given any love so far from the dev team, so much so even the layout hasn\u0026rsquo;t been finalised! We will look at fixing this and making this mode consistent in the future, so forgive the \u0026lsquo;default\u0026rsquo; looking layout.\nRandom Attacks    There were issues with how this methodology was supposed to actually work, as it likely has been broken for so long. Well in this release, we have unique per player random attacks for that extra challenge! The text file RandomAttacks.txt in your /Data file can be filled with fiendish ideas that can help or hinder a player, so do take a moment to be naughty (or nice!) and populate that file with some cool effects!\nWith the removal of the legacy code and the new updates, we can happily say that we have squashed 37 upstream bugs that have been around since the SM 3.0 era.\nRandom Number Generator Specifc Fixes\n ❕✅ Fixed Edge Case Crash with random background movies when only one movie was present ❕✅ Fixed Random Movies only selecting 0, 1, or 2, movies in a folder ❕✅ Fixed Random Backgrounds only selecting 0, 1, or 2 backgrounds in a folder ❕✅ Fixed Random Movies showing the same movie on song start ❕✅ Fixed Random Backgrounds showing the same movie on song start ❕✅ Fixed Course Generation on Extended Mode ❕✅ Fixed Course Generation on Oni Mode ❕✅ Fixed Course Generation on Endless Mode ❕✅ Fixed Course Generation on Survival Mode ❕✅ Fixed Shuffle Mode on the Music Wheel for Roulette ❕✅ Fixed Random Stage Seed generation ❕✅ Fixed GameState Seed generation ❕✅ Fixed Seed generation in NoteDataUtil, Allowing for better AutoGen ❕✅ Fixed Kickbox Autogen ❕✅ Fixed Song Shuffle being pushed to duplicates in SongManager ❕✅ Add new RandomInt function to allow for course generation without crashing ❕✅ Add new RandomFloat function for equivalent support for older content using it ❕✅ Fixed Math.Random being linked to a function that didn\u0026rsquo;t work as designed ❕✅ Fixed Random Attacks only selecting a maximum of 5 different during a song ❕✅ Fixed Random Attacks not actually being Random ❕✅ Fixed Random Attacks edge crash on Raspberry pi/M1 due to bad math function ❕✅ Fixed Random Attacks not completely loading the text file and making attacks available to the players ❕✅ Fixed Jukebox Mode not using the full available mode song selection ❕✅ Fixed Jukebox Mode not using the correct random mode for mod selection during playback ❕✅ Fixed Portal Mode not accessing folder based songs ❕✅ Fixed Portal Mode not selecting the available mode song list ❕✅ Fixed Edge Crash on Portal Mode with 2 Players selected ❕✅ Fixed Jitter Generation on BitMapText ❕✅ Fixed Distortion Generation on BitMapText ❕✅ Fixed Array Overflow where returned index was out of bounds ❕✅ Fixed now defunct RandomGen calls in course generation as they are no longer required ❕✅ Fixed bit underflow when Song Index is NULL  PLEASE NOTE F2 TO RELOAD SCRIPTS HAS MOVED TO THE INSERT KEY!!!    Sorry, we got tired of mishitting it to use F3, and F2 will become a new mod debug menu in a future update, so watch this space.\nTweens    We have also added new tween types for actors (30!) that were missing from the game, as they have been popularly requested to be available over the 4 we have in game at the moment. I promised Mr.ThatKid that we\u0026rsquo;d add them, so now they are available for all from Squirrel\u0026rsquo;s dragons branch. New documentation will be available in the Spring for these!\nTween Updates and Fixes\n ❕✅🐲 Optimised Tween calls ❕✅🐲 Added Tween fix for legacy tweentypes/selections ❕✅🐲 Added Tweens for EaseInSine/EaseOutSine/EaseInOutSine ❕✅🐲 Added Tweens for EaseInQuad/EaseOutquad/EaseInOutQuad ❕✅🐲 Added Tweens for EaseInCubic/EaseOutCubic/EaseInOutCubic ❕✅🐲 Added Tweens for EaseInQuart/EaseOutQuart/EaseInOutQuart ❕✅🐲 Added Tweens for EaseInQuint/EaseOutQuint/EaseInOutQuint ❕✅🐲 Added Tweens for EaseInExpo/EaseOutExpo/EaseInOutExpo ❕✅🐲 Added Tweens for EaseInBack/EaseOutBack/EaseInOutBack ❕✅🐲 Added Tweens for EaseInCircle/EaseOutCircle/EaseInOutCircle ❕✅🐲 Added Tweens for EaseInElastic/EaseOutElastic/EaseInOutElastic ❕✅🐲 Added Tweens for EaseInBounce/EaseOutBounce/EaseInOutBounce ❕✅🐲 Fixed bug on Sine Curve Drawing on 460+ Nvidia Driver ❕✅🐲 Fixed time based crashes in Actors ❕✅🐲 Fixed SetEffectPeriod crashing with some negative BPM effects ❕✅🐲 Fixed bug with compiler overoptimisation killing the tween curves ❕✅ Added new Actor functions for the eases (Thanks Mr.ThatKid!)  And finally back to normal business!    ALL:     ❕✅🐲 Added new colorkey effect ❕✅ Restored backwards compatible draw modes to support older content ❕✅ Fix Sine function floating point overflow ❕✅ Add new HIDAPI compliant library support for all platforms ❕✅ Fix Orient in reverse ❕✅ Stop game halting on mistapped ` Key while holding tab ❕✅ Add new PolyLineStrip DrawMode ❕✅ Make DefaultFailTypes Translatable ❕✅ Fix Player Unjoin ❕✅ Fix String to Int in reference to #168 (Thanks Natano!) ❕✅ Remove dependency on LibGLU (full removal in next release) ❕✅ Speed up Texgen functions (Thanks Arctic!) ❕✅ Update SDL2 and add OutFox patches ❕✅ Fix rotationy on holds with splines ❕✅ Optimise NoteColorActor/NoteColorSprite to not memory leak ❕✅ Fix MinTNSToHideNotes ordering ❕✅ Fix Field Flip check calling GameState too often ❕✅ Move Field Flip check to a less demanding section of playeroptions ❕✅ Fix int overflow on RageSoundPosMap causing stuttering ❕✅ Add New forward and back debug options for the camera in ScreenDebugOverlay F3 + S and F3 + D Upside down mirrored mode is available if you zoom out far enough! Reset with F3 + E ❕✅ Fix JoyStick and Controller instanceID being reset on hotplugging ❕✅ Fix JOY Index resetting on removal ❕✅ Set Console Command to use Tilde ~ instead of Pause ❕✅ Fix Finger Events on Touch Screens ❕✅ Fix Finger Movement and ensure mouse co-ordinates are taken into consideration if both move at the same time ❕✅ Add LuaScoring - Now fixes a lot of issues with timing systems, and allows for custom ones! ❕✅ Autosave Profiles when the game closes, as sometimes SetUserQuit() is interrupted when the window is closed ❕✅ Readd Portal function to the Music Wheel, welcome back! ❕✅ Fix the AvarageBPM typo - If your mode used AvarageBPM fix this! ❕✅ Cull the ancient PRNG code ❕✅ Fix the edges of the number font used for combo in Soundwaves. ❕✅ Add FAPlus timing mode (similar to existing ECFA, except Fantastic and Fantastic+ are scored the same with no percentage above 100%, and the lower Fantastic window is coloured white in the judgement font) ❕✅ Advanced timing modes are now scored out of 100%. ❕✅ Fix non-module based themes crashing on new SmartTiming entries, when they had their own LuaTiming entries ❕✅ Fix Start sound being played twice on controller menu ❕✅ Add pro-judgements to pump noteskins ❕✅ Fix invalid judgechoice on initialisation ❕✅ Change Arrows to our new Blue Brand Choice  Windows 7+:\n ❕✅ Fix MSVC warnings due to new windows updates ❕✅ Fix edge case crash with sound waveout driver ❕✅ Fix edge case system lockup caused by waveout driver ❕✅ Fix Modfile performance due to locale check tanking FPS ❕✅ Fix UTF-8 Calls slowing down mod performance  Windows XP Service Pack 3 (32bit):\n ❕✅ Fix edge case crash with sound waveout driver ❕✅ Fix edge case system lockup caused by waveout driver ❕✅ Fix edge case bluescreen on some Cmedia Audio sound cards / AC97 codec based cards ❕✅ Fix Modfile performance due to locale check tanking FPS ❕✅ Fix UTF-8 Calls slowing down mod performance  Linux:\n ❕✅ Fix deltaclock to monotonic to reduce pulseaudio lag ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix XInput RAW ❕✅ Add Wayland Preliminary Support - Needs more work yet however!  MacOSX (Intel):\n ❕✅ Fix SDL compilation ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix Xcode warnings  MacOSX (Arm M1):\n ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix Xcode warnings  ARM32/ARM64: (Raspberry Pi etc)\n ❕✅ Fix deltaclock to monotonic to reduce pulseaudio lag ❕✅ Fix XInput trying to overwrite HIDAPI modes on some controllers ❕✅ Fix XInput RAW  New community content:    Colors\n ❕✅ Two new colour schemes from Moneko ❕✅ Some changes to the shadowtip 3D versions from R.O.B.-bot  Translations\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":7,"href":"/releases/A4.9.6/","title":"OutFox Alpha 4.9.6 Build","parent":"Release History","content":"Release Date: 16th December 2020    \u0026ldquo;Single-Frame Don-Chan is not amused\u0026rdquo;    (Taiko no Tatsujin - © 2001 Namco/Bandai Namco Studios)\nThe hot-fix patch that delayed Alpha 5, da-don!    We have fixed the crash on startup on windows 8/10, da-don!    If you have downloaded the windows build and have a crash, please redownload the new build!\n ❕✅ Fixed Crash with generating profiles due to weird windows error (Thanks Ultra for reporting!) ❕✅ Fixed Buggy crash due to Intel driver ❕✅ Removed OpenGL 4.3 availability on Win 8/10 due to update breaking Intel Drivers on Pre 8th Gen Chips  Announcing Apple M1 controller support!    We have worked through several days and nights of trying to get this to work, and we can happily announce that we are one of the first native apps to have full HIDAPI and XInput support on Apple Silicon!\nThis means you can play with pad/controller, and use some of your jank pre-2010 madness! We are super proud of this achievement and you can now move to the M1 macs without worry of your pads not working.\nTo support this new input methods available to Mac M1, we have a fully native build. No more Rosetta!\nWE HAVE SET THE GAME TO USE HIDAPI BY DEFAULT, DUE TO THE LACK OF SUPPORT FOR XINPUT PADS AT THIS TIME. THIS IS AN SDL2 AND APPLE ISSUE, AND IS NOT FIXED IN 11.1.\nWe have full support for pads in HIDAPI, and XInput pads do work when mapped, however, just to keep it simple, use HIDAPI 👍\nOn the Keymap screen, we added new secondary and tertiary inputs, unintentionally mirroring the @taronuke nitg project. Inspired I think. When we were discussing the feature request, two of the developers were unaware that the input menu for NiTG had 5 input rows. However, I will credit our sister project, I don\u0026rsquo;t want folks to think we take inspired options without reporting the origins, we work together to benefit all of our community.\nYou can now map multiple controllers and keys for players, as by request of several community players.\nALL:     ❕✅ Fix adjusted FFMPEG libraries to allow for more supported formats ❕✅ New Game Select Screen ❕✅ New Lua game selector ❕✅ Allow user to select game on first run ❕✅ Fix Pump fakes not being referenced ❕✅ Fix theme changing method now Lua is an option ❕✅ Update Lua to 5.3.6 ❕✅ Restore SM OutFox lexicon for backwards compatibility with cmd() based content ❕✅ Restore SM OutFox %d patch for backwards compatibility (Thanks ArcticFqx!) ❕✅ Fix Lua intregral floats to match current behaviour (Thanks Mr.ThatKid!) ❕✅ Fix noteskin switching after first play ❕✅ Update SDL2 ❕✅ Restore OutFox patches to SDL2 for International and Language support ❕✅ Tighten up animation/screen change timings to be quicker ❕✅ Fix drawing of characters with masking backgrounds ❕✅ Added \u0026lsquo;legacy\u0026rsquo; draw mode to match 5.1/5.0 themer expectation (Slower, but use sparingly!) ❕✅ Added Smoothlines Matrix Options for Backwards Compatibility ❕✅ Added new LineStripM to allow for newer options moving forward, so older content is not broken accidentally ❕✅ Added Allow Player to have controllable vanish point \u0026amp; FOV ❕✅ Added function for controlling the vanish point\u0026rsquo;s X \u0026amp; Y separately ❕✅ Added Allow NotePath to use the secondary DrawMode ❕✅ Fixed Array overflow on P3IO, marquee lights should work as designed now ❕✅ Created a separate FOV+VanishPoint for Player ❕✅ Fixed potential crash in FOV in DrawFunctions ❕✅ Changed \u0026lsquo;cement mixer\u0026rsquo; to \u0026lsquo;super shuffle\u0026rsquo; in mods (blender in SL) ❕✅ Add new Lua patch for random to work as before in older themes/content ❕✅ Fix errant reference and allow math.random(seed) to operate as designed ❕✅ New Feature: New NoteDataUtil random generator to fix shuffle mods ❕✅ Patch other \u0026ldquo;Random\u0026rdquo; generation to work for now - more work is required ❕✅ Reimplement color variable for noteskins ❕✅ Allow LoadActorForNoteSkin to properly use the new color variable ❕✅ Implement NoteSkin draw order metric ❕✅ Make PeakNPS a 2 decimal value ❕✅ Stop Smoothlines option setting selection restarting the game ❕✅ Change option text for input method in the Experimental Menu to HIDAPI/XInput ❕✅ Added missing font fallbacks  Windows 7+:\n ❕✅ Fixed LibUSB libraries causing game crash ❕✅ Built new LibUSB dlls to ensure compatibility  Windows XP (32bit):\n ❕✅ Fixed LibUSB libraries causing game crash  Linux:\n ❕✅ Fixed lib linking with new FFMPEG version  MacOSX (Intel):\n ❕✅ Fixed Compile with new SDL version ❕✅ Fixed LibUSB not picking up plugged in xbox controllers  MacOSX (M1):\n ❕✅ Remove Redundant Darwin (\u0026lt;10.9) calls preventing compile on M1 ❕✅ Allow the arm64 arch to be exposed so XCode can actually see our M1 even in Rosetta Brew mode ❕✅ Allow the OS Functions to be taken into consideration on the compile so we can see USB ❕✅ Fix warnings with XCode in the input handler, and updated the plist to ensure we are current ❕✅ Added new libs for LibUSB ❕✅ Added new libs for FFMPEG ❕✅ Fixed SDL2 compile options so dynamic input works! ❕✅ Fixed PlayStation 1/2/3/4/5 controllers not detecting their buttons on HIDAPI mode ❕✅ Fixed Controllers from Pre-2005 not being detected in HIDAPI mode ❕✅ New Database will need to be added to in the future when SDL is updated for mac.  ARM/ARM64: (Raspberry Pi etc)\n ❕✅ Added new libs for LibUSB  New community content:    Noteskins\n ❕✅ Added new popn noteskin ❕✅ Added outfox-note based noteskin with 192nd support and coloured holds  Translations\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":8,"href":"/releases/A4.9.5/","title":"OutFox Alpha 4.9.5 Build","parent":"Release History","content":"Release Date: 30th November 2020    \u0026ldquo;Step into tha game!\u0026rdquo;    (Yakitate!! Japan - © 2004 Sunrise/TV Tokyo)\nThe Alpha of many changes\u0026hellip;    Introducing Both At Once!    What is Both At Once? Both at once is a popular feature option used in @taronuke\u0026rsquo;s project Not in the Groove. It allows player one to input to player two, while playing mod files. As many of the mod files ported from NitG require two joined players, and before this alpha, the method to enable autoplay for the alternate player was a bit sketchy on SM5, we have taken the time to add this feature to OutFox.\nHow do we use it? Ever accidentally turned on \u0026lsquo;Monkey Input\u0026rsquo; and wondered why the game doesn\u0026rsquo;t work anymore? Well, we removed Monkey Input from the F3 Debug Menu, and in it\u0026rsquo;s place, we have added the BAO option!\nYou need to be in a game menu, and have added 2 players to activate it, (So after you have selected a mode, or on the music wheel) - or you simply will not be able to activate it. This is to protect you having settings or menus operate as both players at once, which could be a pain!\nWhen you are in a game mode, you can add two players and then turn the option on: Press and Hold F3, then press 5\nYou will then be in BAO mode, and can play mod files! (You can find a collection of ported and original files from our community)\n(Screen Select Music - Setting both at once mode on)\nYou can also select menu options and settings in BAO mode for the song, but do bear in mind many mod files set their own speed mods and noteskins:\nYou can then play the game as one player, but it will fill in for two!\nThings to note!\n If you are player 2, then player 1 will be your \u0026lsquo;ghost\u0026rsquo; and vice versa If there is a mini-game in the mod file, which checks for individual player input, we will not override this with BAO! (This is to mirror NitG Behaviour, and is as designed) The player you are not playing on will be disqualified, and it\u0026rsquo;s score won\u0026rsquo;t be saved, even if it is displayed in the evaluation screen You can turn off and on BAO during a song, using F3 + 5 BAO will be reset when leaving the Select Music Screen, or if the System Switch is pressed  On evaluation, you will note player 1 matches player 2:\nWe also have some different pages on the evaluation page - if you press left or right you will change \u0026lsquo;page\u0026rsquo; to reveal more details.\nThe scatter graph in this alpha is drawn a lot more efficiently, which should prevent the slowdown when looking at many presses.\nThe \u0026lsquo;histogram\u0026rsquo; is another highly requested feature for outfox, adapted from the features from https://github.com/Simply-Love/Simply-Love-SM5, we draw it differently in OutFox, as we have the different timing windows.\nNew Actor Multi Vertex Draw options!    This alpha also introduces a few new options for controlling your draw commands when creating an actormultivertex(). There were some issues we found in the methodology used in the older code which sometimes allowed the game to fall back to CPU based rendering/calculation for drawing some objects and lines, causing stuttering and arrow lag in screen gameplay, and would cause odd slowdowns in the evaluation screen (as noted by many of our stamina players, when playing marathon mode!)\nWe added two new draw options, and optimised some of the older modes to be less heavy on the game while drawing effects or UI objects.\nNote the VPF (Vertices per Frame) Count. Higher counts mean higher loads on the system: (Before with drawmode_quadstrip) The draw mode has been changed to just use points, dropping the value considerably. (After with the new drawmode_points) Another thing that can be decided in the Lua command is the state of the points, which allow for square or circle points: Square: Circle: New lua commands: self:SetDrawState{Mode=\u0026quot;DrawMode_Points\u0026quot;}:SetVertices(verts)\nNew Draw Modes, we have DrawMode_Points and DrawMode_Lines!\nself:SetPointState(boolean) (so false or true - Alias the Points. if the size is too big, or it is not supported on the GPU\u0026rsquo;s driver, it will be drawn as a square, but won\u0026rsquo;t crash.)\nexample: circle: self:SetPointState(true) square: self:SetPointState(false)\nresizable points: self:SetPointSize(float) - Size in PIXELS of the point to draw. This will often round to a whole number on older systems, but most cards will use subpixel sampling to keep these as designed. For better performance, use a whole number, so 6.0.\nExample: self:SetPointSize(10.5)\nThese are called in your actormultivertex like so:\nlocal amv = Def.ActorMultiVertex { OnCommand=function(self) self:SetDrawState{Mode=\u0026#34;DrawMode_Points\u0026#34;}:SetVertices(verts) self:SetPointSize(10.5) self:SetPointState(1) end } Example drawn with thin DrawMode_Lines: Oh, we built a Windows XP build for those with cabinets.\nTEXTURE FONT GENERATOR V0.33 https://github.com/TeamRizu/Texture-Font-Generator-2020-Squirrel     ❕✅🐲📝 Added Hebrew (Thanks Snil4 for the request) ❕✅🐲📝 Set the \u0026lsquo;example\u0026rsquo; glyph to be 0000058 so it is usually displayed by obscure fonts.  ALL:     ❕✅ Fixed Discord RPC compiling on newer GCC versions ❕✅📝 Readd the minimaid option to the build scripts ❕✅ Fixed miscasts of ActorUtil causing some actors in mods to be drawn with corruption ❕✅ Fixed the Analogue Input Screen so players can exit/enter as designed ❕✅ Fixed DetailStatsEdit Screen (Thanks MDR/Moneko!) ❕✅ Add New Opus SoundReader ❕✅ Add New FLAC SoundReader ❕✅ Add New Wave SoundReader, removed legacy WAV pipe ❕✅ Update MP3 SoundReader pipe ❕✅ Update Ogg SoundReader pipe ❕✅ Update Vorbis and Ogg Libraries ❕✅ Fix CMake building for the sound components ❕✅ Force SoundWriteAhead to 4096 to alleviate some skipping on older systems ❕✅ Force SoundPreferredSampleRate to 44.1khz to fix skipping on older systems ❕✅ Fix Resolution display checking ❕✅ Fix Display Sorting ❕✅ Fix Texture debug log spam, we only need to do this internally, and saves our time going through crash logs ❕✅📝 Add missing Aspect Ratios - Closes TeamRizu/OutFox#179 and Simply-Love/Simply-Love-SM5#214 ❕✅📝 Fix coloured glow missing from ActorFrames - Closes TeamRizu/OutFox#155 ❕✅📝 Fix ScreenGamePlay player resize math calculations - Closes TeamRizu/OutFox#63 (Thanks @JapanYoshi) ❕✅📝 Fix location of field when player zoom is larger than one - Closes TeamRizu/OutFox#63 (Thanks @JapanYoshi) ❕✅ Implement SetBaseLocation ❕✅ Fix Metronome Clap/sound type being quiet and not correct ❕✅📝 Fix Endless mode not working - Closes TeamRizu/OutFox#159 ❕✅📝 Added option to \u0026ldquo;inputfocus\u0026rdquo; preference to \u0026lsquo;not minimise screen on focus loss\u0026rsquo; - (Thanks Digital Dancer!) ❕✅ Added Median page to Screen Evaluation (Page 4) to display the input histogram ❕✅ Fixed Miss offsets being included on calculations in the Median page ❕✅📝 Added 2 decimal places to FPS stats as requested by the community ❕✅ Added Delta Clock second counter, if the log shows \u0026gt;1.00 then DeltaTime() has skipped ❕✅ Fixed misrepresented fonts on Median page ❕✅📝 Added Hebrew Font Maps - (Thanks @snil4 for the request!) ❕✅ Fix font alignment to support Hebrew ❕✅📝 Implemented P3IO Driver - (Thanks @chrispable for the initial work https://github.com/chrispable/stepmania/tree/starworlds) ❕✅📝 Implemented P2IO Driver - (Thanks @chrispable for the initial work https://github.com/chrispable/stepmania/tree/starworlds) ❕✅📝 Implemented PacDrive Linux Driver - (Thanks @lqbombjack for the initial work PR at stepmania/stepmania#1479) ❕✅📝 Implemented ITGIO Linux Driver - (Thanks @DinsFire64 for the commit stepmania/stepmania#1994) ❕✅📝 Added the SM Mainline PacDrive fixes (Thanks @DinsFire64 and @KevinTurner / stepmania/stepmania#2056 and stepmania/stepmania#1819) ❕✅📝 Fixed Win32 Parallel on Dance - (Thanks @ArcticFqx!) ❕✅📝 Set Textures to be 2048 and Hi-Res by default - Closes TeamRizu/OutFox#166 (Thanks @natano!) ❕✅📝 Set Smoothlines behaviour to mimic 5.1 by default - Closes TeamRizu/OutFox#164 (Thanks @natano!) ❕✅📝 Set Pad Input behaviour to mimic 5.1 by default - Simply-Love/Simply-Love-SM5#214 (Requested by @natano!) ❕✅ Fix fonts not falling back onto provided extended UTF-8 glyphs. ❕✅📝 Fix bad bitmap textures causing a dialogue message which cannot be cleared - Closes TeamRizu/OutFox#157 (Thanks @NekoIncardine!) ❕✅ Fixed Bad Math calls on the Display Draw pipe for Actors ❕✅ Fixed an issue where a few edge case systems could cause a crash due to a malformed check in the GLAD Renderer ❕✅ Resized the fonts on stats overlay ❕✅ Fixed several type warnings on stats overlay ❕✅ Added both at once on basic input types (inspired from @TaroNuke\u0026rsquo;s NitG Project) ❕✅ Fixed both at once being set and causing menu lock options ❕✅ Fixed both at once messing up the system switch menu ❕✅ Fixed option in screen select music that sometimes caused the game to crash on some mod files ❕✅ Forced 2 players joined to enable both at once ❕✅ Forced non playing player on both at once to be disqualified ❕✅ Modernise and optimise the screen options menu system ❕✅ Optimise the menu up/down process for both at once ❕✅ Match difficulties on screen select music for both at once ❕✅ Fixed issues with both at once being on for screens which really do not work well for this feature ❕✅ Make the BMS loader smarter at finding a preview to play ❕✅ Renamed the old SM5 beat default noteskin to defaultsm5 ❕✅ Fixed the issue where INVALID_PLAYER_OPTION would produce a dialog, it now warns in the log file ❕✅ Fixed bug in the loading window where course counters could produce a value above 100% ❕✅ Added new CI options to build nightly packages for testers moving into 2021 ❕✅ Fixed issue with music sometimes not playing after ScreenGamePlay ❕✅ Add a background switching system to SoundWaves ❕✅ Change combo milestone animation to match current design paradigms ❕✅ Fixed outdated \u0026lsquo;hexagon\u0026rsquo; banners ❕✅ Fixed issue where returning from pause could trigger transitions to be run ❕✅ Fixed metronome being the same sound as clap ❕✅ Fixed a rare Access Violation being triggered due to an operating system adjustment of the sound buffer ❕✅ Fixed an issue with the USB IO Driver sometimes hanging the game ❕✅ Added the defaults that modes that should be upside down (down scrolling) ARE upside down ❕✅ Fixed a bug which caused a crash in the mp3 driver - (Thanks mattbisme!) ❕✅ Added new ActorMultiVertex options to allow for wider draw methods ❕✅ Optimised the drawing methods from AMV calls ❕✅ Fixed smooth lines causing lag on some mod files ❕✅ Added AMV points to the lua command ❕✅ Added AMV pointsize to lua ❕✅ Added AMV lines to the lua command ❕✅ Added the lua option to set points to circle or square ❕✅📝 Fixed FFMPEG Memory leaks due to a bug in the way the Surface was allocating textures - Closes TeamRizu/OutFox#85 (Thanks @EngineMachiner!) ❕✅📝 Fixed FFMPEG Memory leak causing the game to crash with GL_OUT_OF_MEMORY - Closes TeamRizu/OutFox#153 (Thanks @igormclven!) ❕✅ Added new debug information for GL\u0026rsquo;s line and point width as it is dependent on graphics hardware (if people have a tiny line) ❕✅ Modernised the scatter graph to use the new points system ❕✅ Fixed IsUsingWidescreen() ❕✅ Added IsUsingPortrait() ❕✅ Fixed DrawTap creation to be more streamlined ❕✅ Separate loading of notes per Routine and Regular ❕✅ Fixed single frame movies/images that use FFMPEG to work as designed ❕✅ Fixed FFMPEG not being freed correctly when being used with legacy DivX/XViD/AVI/MPEG files from prior to 2008 ❕✅ Fixed regression in sound readers defaulting to the beginning of the song on the music wheel (Thanks Moneko/Moru) ❕✅ Fixed FFMPEG thread sometimes speeding up on movie looping ❕✅ Fixed FFMPEG resize/scale from causing skips on older hardware ❕✅ Fixed method where the game forgets that background is an effect ❕✅ Fixed FFMPEG sprite allocation from being leaked ❕✅ Fixed Context generation leaking memory ❕✅ Fixed float overflow in RageSoundPosMap ❕✅📝 Fixed regression that prevented the background from showing when a file was missing - Closes TeamRizu/OutFox#172 (Thanks @SheepyChris!) ❕✅ Fixed library version mismatch with some of the newer compiled libs ❕✅ Fixed centering of player in demonstration screen. ❕✅ Fixed issue with compilation of AV1 support ❕✅ Fixed crash issue in ScreenSelectLanguage ❕✅ Fixed issue with player scaling code being set incorrectly ❕✅ Added GetTexture for FFMPEG to fall back to image instead of a null movie overlay on screen gameplay ❕✅ Added a proper pause mode to movies, so the DeltaTime() no longer slips while the game is paused. ❕✅ New Feature: Ability to change SOUNDMAN volume in lua ❕✅ New Feature: Added fade option to SOUNDMAN  Windows 7+:\n ❕✅ Fixed NSIS branding and missing items ❕✅ Added the beginnings of 64bit windows support ❕✅ Segregated calls and API objects for 64bit windows support ❕✅ Removed the deprecated files inside the win32 arch util folder ❕✅ Fix Midi input mapping missing extended button types ❕✅ GetArch() now returns windows version  Windows XP (32bit):\n ❕✅ Yea, we went here ❕✅ Fixed FFMPEG generation so the formats supported match Win 7 ❕✅ Fixed Memory leak causing the game to crash with GL_OUT_OF_MEMORY ❕✅ Fixed uninitialised locale crashing the game and preventing startup ❕✅ GetArch() now returns Windows XP  Linux:\n ❕✅ Fix compile for file operations ❕✅ Fix build scripts to correctly label the bundled libraries - Closes TeamRizu/OutFox#165 (Thanks natano!) ❕✅ Fixed libusb0 being built against the wrong version of libraries  MacOSX (Intel):\n ❕✅ Fixed libusb0 libs ❕✅ Fixed FFMPEG sometimes not initialising for supported ❕✅ Fixed FFMPEG Memory leak causing the game to freeze  MacOSX (M1):\n ❕✅ Fixed FFMPEG support for arm64 ❕✅ Fixed Opus Support ❕✅ Fixed LibUSB support ❕✅ NATIVE BUILD - NO NEED FOR ROSETTA!  ARM/ARM64: (Raspberry Pi etc)\n ❕✅ Fixed uninitialised locale crashing the game and preventing startup  New community content:    Noteskins\n ❕✅ New 3D versions of Outfox, Broadhead, and Shadowtip noteskins by R.O.B.-Bot ❕✅ Added new BMS noteskin ❕✅ Added new 3DDX note types to crystal  Colours\n ✅ Alien Alien by Moneko  Translations\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from Moneko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French) ✅ Translations updated from Snil4 (Hebrew)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":9,"href":"/releases/A4.9.1/","title":"OutFox Alpha 4.9.1 Build","parent":"Release History","content":"Release Date: 31st October 2020    \u0026ldquo;Spooky Scary Bugs\u0026rdquo;    Turn smoothlines off to get a better play experience if your lines are being drawn thickly!    TEXTURE FONT GENERATOR V0.32     ❕✅🐲📝 Added Armenian #136 (Thanks @AngledLuffa!) ❕✅🐲📝 Added IPA Extended ❕✅🐲📝 Added Spacer Modifiers #126 (Thanks @EngineMachiner!) ❕✅🐲📝 Fixed Japanese overwriting other characters #123 (Thanks @JapanYoshi!) ❕✅🐲 Changed a few methods of Cyrillic to be better supported in the future  ALL:     ❕✅🐲 Fixed Font Interpretations, removed [main] ❕✅ Added new internal \u0026lsquo;ToUpper()\u0026rsquo; on default themes ✅ Returned branding to use Stepmania once again ❕✅ Regenerated fonts for Soundwaves ❕✅📝 Added Allow InputBackgroundEvents for controllers preference (Thanks digitaldancer on Stamina Nation!) ❕✅ Fixed ImageCache memory bloating ❕✅📝 Added display version on evaluation screen (Thanks Jummy!) ❕✅📝 Fixed recursive scaling of TimingWindows #138 (Thanks pucgenie, neowzeo, maractus) ❕✅ Fixed new methods on Ragesurface/Ragedisplay ❕✅ Fixed FFMPEG crashing ❕✅ Moved xyz alias into fallback so it can be more useful ❕✅📝added tween tweaks (true) from upstream PR https://github.com/stepmania/stepmania/pull/2062 (Thanks @FMS_Cat) ❕✅📝added music wheel code from upstream PR #27 https://github.com/stepmania/stepmania/pull/2002 (Thanks @RhythmLunatic) ❕✅ Fixed musicwheel quirks ❕✅ Fixed AMod issue where having a second player would override Player 1 timing (Thanks @JapanYoshi!) ❕✅ Allow random movies to play when video not available ❕✅ Fixed cursong being used instead of cursteps to get displaybpms ❕✅ Fixed banners playing too fast #129  Windows:\n ❕✅ add minimaid back to mainline. ❕✅📝added new serial lights driver upstream PR https://github.com/stepmania/stepmania/pull/2041 (Thanks @skogaby!) ❕✅ Add MIDI input support that works ❕✅ Add new wider MIDI input spectrum ❕✅ Add Rotary MIDI input support ❕✅ Add Crossfader MIDI input support ❕✅ Add Acceleration/Deceleration MIDI support (Disc spinning) ❕✅ Add MIDI Extra Support ❕✅ Add MIDI lua messages ❕✅ Add MIDI analogue lua support  Linux:\n ❕✅ add minimaid back to mainline. ❕✅ add JACK back to mainline. ❕✅ fix discord building on newer GCC (\u0026gt;8.4)  MacOSX:\n ❕✅🐲 Nonion Rings.  Community Content:    Graphics\n ✅ New sharper grade graphics by MDR ✅ New Narumi avatars #115 ✅ New noteskins to address #111 #112  Colours\n ✅ Dark Mode by infinitephantasm ✅ Chaos by moruzerinho6 ✅ Ice by PCBoyGames ✅ Wave by AppleArcade120  Translations\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":10,"href":"/releases/A4.9.0HF/","title":"OutFox Alpha 4.9.0/HF Build","parent":"Release History","content":"Release Date: 7th October 2020    \u0026ldquo;The new Glyph System pleases Imhotep\u0026rdquo;    (The Mummy - © 1999 Universal Pictures)\nTurn smoothlines off to get a better play experience if your lines are being drawn thickly!    Alpha 4.8.6 September 30th 2020 \u0026ldquo;The options just do nothing\u0026hellip;\u0026rdquo;    This build did not pass Quality Assurance, and was not released outside of the internal Alpha Testing teams. Apologies for the Delay on this release. The changelog for 4.8.6 and 4.9.0 are together in this update.\nWe have sorted out the issues with the misunderstanding of the StepMania project name and this will return to the project for the next alpha, with a re-brand. It was all done amicably, and it had to be acted upon due to it being reported, so no problems there.\nFonts and Language:    This month sees a pretty big revamp to the font system used in OutFox. Due to the numerous issues we have had reported to us since our project began, (missing symbols, missing characters, missing language support, missing Korean and Japanese support, etc), We have rewritten the font maps.\nWhat this means for you? - Well, the fonts will be sharper as they are newer now, and you can generate the correct fonts for theming and such for OutFox in the future. We have a new repository for the Texture Font Generator which is a side project from @Scraticus and @Hanubeki to bring more charmaps to the game. These can be regenerated to support 5.0/5.1 and even 3.9/ITG era with a bit of work. If you do generate new fonts, please check out the guide that will be up on the MoonDance site shortly. We also have revamped the fonts that are used by mod files to be sharper and to add backwards support for the new fonts. (Beware of [main] duplication causing squares to be displayed by the game!). There is a new release of the Texture Font Generator, which includes new euro support, and legacy mapping generation for prior versions of StepMania.\nTEXTURE FONT GENERATOR V0.2 / OutFox Alpha 4.9.0 -     ❕✅🐲📝 Fixed Missing Korean Basic Characters #109 (Thanks AngledLuffa!) ❕✅🐲 Fixed Missing Symbol Characters from Kanji ❕✅🐲 Fixed Missing Characters from Korean Hangul ❕✅🐲 Fixed Missing Characters from Kanji JIS ❕✅🐲 Fixed Missing Characters from Kanji Hojo ❕✅🐲 Fixed Missing Characters from Kanji GBK for Traditional Chinese ❕✅🐲 Fixed Missing Characters from Cyrillic and Extended Latin ❕✅🐲 Regenerated outline fonts for the theme and mods ❕✅🐲 Added Characters from Legacy maps - (ASCII/CP1252/ISO8859) ❕✅🐲 Fixed Build system on windows 10, but the MFC system needs a bit of hacking - compiled binaries are available to grab  We have also have had to add a new set of Lua Commands for this alpha. (See #121) We have been aware of this for some time, but delayed the alpha a touch so they were ready.    For backwards compatibility string.upper() and string.lower() have not been touched.\nThe new lua commands in this build are ToUpper() and ToLower().\nTo display upper case text - done on the troublesome polish characters: Text=ToUpper(Screen.String(\u0026quot;Start To Join\u0026quot;)) produces:\nWe even can do a proper UTF friendly lower case as well: Text=ToLower(Screen.String(\u0026quot;Start To Join\u0026quot;)) USING ALT+ENTER TO SWITCH IN AND OUT OF FULLSCREEN:    We have added the option to all operating systems to be able to access this function, but be warned: the SDL window does not scale modes which your Monitor does not support in fullscreen. It will draw a border around the window if the mode is not a suitable mode. You can find these modes in the log.txt, as SDL is kind enough to display everything supported there.\nWe have allowed the other OS\u0026rsquo;s this function for familiarity and the fact we didn\u0026rsquo;t think it\u0026rsquo;d work on mac/linux, but it did.\nALL:\n ❕✅ Set locale for the game to use en_US.UTF-8 for now - This will be extended soon ❕✅ Fix Missing font paths in the default theme ❕✅ Remove Lua macro which did nothing to the font display ❕✅📝 Fixed Bug with BeginnerHelper hiding/unhiding backgrounds causing unwanted behaviour. #104 \u0026amp; #105 (Thanks @SilentTempest83 !) ❕✅📝 Fixed crash with resizing window on some older windows versions (7/8) #102 (Thanks @Emilovesdoubles) ❕✅📝 Fixed Lirocode in Hold / Roll anchors #106 (Thanks @JapanYoshi!) ❕✅📝 Fixed Lirocode in Note colours and 24th\u0026rsquo;s being wrong. #111 \u0026amp; #112 (Thanks @AngledLuffa!) ❕✅📝 Fixed missing Narumi Mascot avatar images not being available as usable avatars in game #115 (Thanks @Joehuu!) ❕✅📝 Added Precision Dance Pad config entry to our GameControllerDB #117 (Thanks @AngledLuffa!) ❕✅ Fixed Timing windows for ITG/ITG Advanced and ECFA ❕✅ Fixed Alt+Enter leaving weird screen blackness on 75% of the space ❕✅ Fixed lua timing tables and optimised the loading method ❕✅📝 Fixed bug with toasties loading on the Machine Sync causing an AV (Thanks @JapanYoshi!) ❕✅📝 Fixed bug with left over commands being available to the Machine Sync system causing edge crashes (Thanks @JapanYoshi!) ❕✅📝 Fixed issue with missing UTF string conversion on the loading window (Thanks @Hanubeki / @JapanYoshi!) ❕✅📝 Added correct font (Code2000) support in loading window (Thanks @Hanubeki / @JapanYoshi!) ❕✅ Added preview to progress bar on screenselectmusic ❕✅ Fixed audio preview on song select #65 (Thanks @SHRMP0!) ❕✅ Fixed font presentation for soundwaves and default/fallback ❕✅ Fixed missing/incorrect font redirection files ❕✅ Fixed missing constructors on ActorFrameTexture ❕✅🐲 Beginning of making SM Locale Aware ❕✅🐲 Fix overflow on font index now we are using proper UTF-8 ❕✅🐲 Fix archaic practice on wide strings in font manager ❕✅🐲 Fix arithmetic overflow in rageutil preventing correct bytecode allocation ❕✅ Fix table indexing for high score entries overwriting previous results being shown ❕✅ Rename the 5.3 default noteskin to reinstate the 5.0 default for backwards compatibility support ❕✅ Make minimenu rows place on native position  Windows:\n ❕✅🐲📝 Removed potential crash on invalid DPI scaling detection - part of #88 (Thanks AngledLuffa!) ❕✅🐲 Fixed Alt+Enter not being able to leave full-screen causing the need for a restart ❕✅ Fixed uninstaller missing shortcuts due to windows 1903 update  Linux:\n ❕✅🐲 Fixed Alt+Enter not being able to leave full-screen  MacOSX:\n ❕✅🐲 NEW FEATURE: Added Alt-Enter full-screen switch ❕✅🐲 Fixed missing locale selection for \u0026ldquo;LC_ALL\u0026rdquo; causing a crash  ARM/ARM64: (Raspberry Pi etc)\n ❕✅🐲 NEW FEATURE: Added Alt-Enter full-screen switch ❕✅🐲 Fixed EGL initialisation on RPi 3B/4 trying to call the wrong driver ❕✅🐲 Fixed missing locale selection for \u0026ldquo;LC_ALL\u0026rdquo; causing a crash  Community Content:    Colours\n ✅ Dark Mode by infinitephantasm ✅ Chaos by moruzerinho6 ✅ Ice by PCBoyGames ✅ Wave by AppleArcade120  Translations\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":11,"href":"/releases/A4.8.5/","title":"OutFox Alpha 4.8.5 Build","parent":"Release History","content":"Release Date: 19th September 2020    \u0026ldquo;A Change is Afoot!\u0026rdquo;    Please note if your Download did not include HF in the title, download the en.ini and put it in your installation folder at the following path    windows: (X:\\Outfoxfolder\\Appearance\\Themes_fallback\\Languages) macosx: (Outfoxfolder\\Appearance\\Themes_fallback\\Languages)\nOr just download the HF version now we have repackaged.    Turn smoothlines off to get a better play experience if your lines are being drawn thickly!    Alpha 4.8.3 September 08th 2020 \u0026ldquo;Throw us a bone (index)\u0026rdquo;    This build did not pass Quality Assurance, and was not released outside of the internal Alpha Testing teams. Apologies for the Delay on this release. The changelog for 4.8.3 and 4.8.5 are together in this monthly update.\nThere has also been a need to temporarily remove the \u0026lsquo;StepMania\u0026rsquo; name from the project due to a complaint received and we have been requested to rebrand the project to Project OutFox until we sort out the paperwork.\nALL:\n  ❕✅🐲📝 Fixed Bug with Loading Window seemingly \u0026lsquo;freezing\u0026rsquo; when indexing files #87 (Thanks Moru/AngledLuffa!)\n  ❕✅🐲 Fixed Crash on changing theme\n  ❕✅🐲 Fixed SoundManager crash on para/beat mode swap\n  ❕✅🐲 Fixed Crash on changing game mode (Thanks Omicron!)\n  ❕✅🐲📝 Fixed Edge Case Lua Overflow Crash (Thanks JapanYoshi!)\n  ❕✅🐲 Fixed Memory leak in Loading Window, when user has 15000 or more simfiles (Thanks Jubo!)\n  ❕✅ Added Column specific modifiers handling nil to activate on all columns\n  ❕✅ Fixed the Bone Index being de-referenced and causing an Access Violation. #94 (Thanks EngineMachiner!)\n  ❕✅ Fixed Random Movies failing to obtain a proper seed\n  ❕✅ Fixed undefined behaviour causing some delays on initial playback\n  ❕✅ Fixed math overflow in ffmpeg renderer\n  ❕✅ Fixed memory leak in ffmpeg playback\n  ❕✅ Fixed lockup/freeze when 1 movie is selected for random movies\n  ❕✅🐲 Fixed issues with math overflow in Actor Framework\n  ❕✅ Added a better implementation of HoldTriggerNotes\n  ❕✅📝 Fixed Crash when taking screenshot in fullscreen mode. #99 (Thanks JapanYoshi!)\n  ❕✅📝 Fixed Crash with \u0026lsquo;Too many open files\u0026rsquo; #92 (Thanks Level99OCR/Maractus/Jubo!)\n  ❕✅ Remove the last references to older dependencies in CMake to prevent bad compilation problems\n  ❕✅ Turn off the Haptic Vibrations on supported controllers on startup\n  ❕✅ Fix the random engine to ensure we actually get a proper random seed\n  ❕✅ Optimise several variable systems for C++ 17\n  ❕✅ Fixed RageUtil causing some micro-stutters and widen code-page support\n  ❕✅ Fixed Player vanish point not being set correctly\n  ❕✅ Fixed RageDisplay casts rounding incorrectly\n  ❕✅ Fixed Luna Definitions for the singletons\n  ❕✅ Fixed the screen message system bug which is 16 years old\n  ❕✅ Fixed missing SDL Video include and reference use\n  ❕✅ Fixed AMod Exploit causing an overflow in Beat Detection (Thanks JapanYoshi!)\n  ❕✅📝Fixed Negative Approach rates through modstrings crashing the game #61 (Thanks PCBoyGames!)\n  ❕✅📝Fixed missing difficulty types from other unsupported game (MungyoDance) being missed in OutFox #76 (Thanks PCBoyGames!)\n  ❕✅📝Fixed skipping in MP3 playback causing crashing in Windows and Linux #75 (Thanks LightningSkunk!)\n  ❕✅ Add Judgement scaling into SmartTiming\n  ❕✅ Fixed incorrect function type in RageModelGeometry\n  ❕✅ Fixed ftruncf and Quantize not setting the right return type\n  ❕✅ Fixed issue where some noteskins were breaking due to a fallback error (Thanks Moru!)\n  ❕✅ Fixed explosion on Lambda noteskin (Thanks Moru!)\n  ❕✅ Fixed incorrect bone initialisation causing crashes on ARM and Linux\n  ❕✅ Fixed incorrect bone declaration type causing crashes on ARM and Linux\n  ❕✅ Fixed FFMPEG buffers not clearing from memory correctly\n  ❕✅ Fixed bug in the 5.0 beginnerhelper\n  ❕✅ Fixed bug with AMod not being initialised correctly in some cases (This caused a crash sometimes in Simply Love)\n  ❕✅ Adjusted a few duplicated menu options\n  ❕✅ Fix Edge case bug with beginnerhelper causing black screens\n  ❕✅ Fixed Metrics so grade weights are correctly measured against dance points\n  ❕✅📝 NEW FEATURE: Set Thickness of ArrowPath (Experimental Settings)\n  ❕✅📝 NEW FEATURE: Enable GLBlend/Points for ArrowPath (Experimental Settings)\n  ❕✅📝 NEW FEATURE: OptionRow change of choice Externally #96\n  ❕✅📝 NEW FEATURE: ContinueHold for para mode, allows for a hold to never fail if it is picked up again by the player\n  ❕✅📝 NEW FEATURE: ShowMouseCursor - ALL OPERATING SYSTEMS SUPPORTED! Hides the mouse cursor in play. Works in fullscreen, borderless and windowed modes (Experimental Settings)\n  Windows:\n ❕✅ NEW FEATURE: Better Memory detection ❕✅ Fixed Win32 calls causing odd lag on some sound cards ❕✅ Fixed NSIS Installer missing newer items  Linux:\n ❕✅ NEW FEATURE: Add EGL Preference for Linux Users. Disabled by default to prevent the missing \u0026lsquo;libopengl.so.2\u0026rsquo; errors. Set if you have a distro that supports it, as it is faster.  MacOSX:\n ❕✅ Fixed Input issue in Xinput #79 (Thanks omgitsraven!)  ARM/ARM64: (Raspberry Pi etc)\n ❕✅ NEW FEATURE: Add EGL Preference for Linux Users. Disabled by default to prevent the missing \u0026lsquo;libopengl.so.2\u0026rsquo; errors. Set it to true for ARM!  Community Content:\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German) ✅ Translations updated from Ksempac (French)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":12,"href":"/releases/A4.8.2/","title":"OutFox Alpha 4.8.2 Build","parent":"Release History","content":"Release Date: 19th August 2020    \u0026ldquo;Release the (Git)Kraken!\u0026rdquo;    Hotfix MK2 Build!    These bugs were fixed about 3 weeks ago, however due to a bad branch merge, GitKraken did not recognise the commits were actually missing, and they were added into the main code branch which got to release. The only way to even recognise this bug is if you had \u0026gt;100,000 songs and over 18,000 MP3 files.\n ❕✅🐲 Fixed Bug with locking up on loading songs (Thanks Kaede!) ❕✅🐲 Fixed Crash with too many handles hitting ulimits on linux (Thanks Kaede!) ❕✅🐲 Fixed Bug with MP3 driver creating two handles per file (Thanks Kaede!) ❕✅🐲 Fixed Crash on Windows due to I/O error (Thanks Kaede!) ❕✅🐲 Fixed Crash with MP3 driver not seeking or reporting position (Thanks Keade!) ❕✅🐲 Fixed Bug with missing error checking on Mp3 Driver (Thanks Jose_Varela and Kaede!) ❕✅🐲 Fixed Crash with NTFS journal errors on NTFS-3G Driver hitting ulimits on Linux (Thanks Kaede!) ❕✅🐲 Fixed Edge Crash with invalid characters in RageUtil (Thanks Jubo!) ❕✅🐲 Fixed Overflow in log buffer due to missing Unicode references ❕✅🐲 Fixed Odd behaviour with sound layering. Issue #62 (Thanks Mr.ThatKid) ❕✅🐲 Fixed Missing/Corrupted fonts on loading Window (Thanks Moneko, Hanubeki) ❕✅🐲📝 Fixed Bug with missing dylib on MacOSX 10.16.5 Issue #67 (Thanks PianoGal/Sebychu/garfieldnate) ❕✅🐲📝 Fixed Crash with loading window on MacOSX 10.16.5 Issue #67 (Thanks PianoGal/Sebychu/garfieldnate) ❕✅🐲 Removed unused libraries due to new MacOSX 10.16.5 update ❕✅🐲📝 Fixed missing glyphs on some simfiles being displayed (Thanks PCBoyGames/Jubo) ❕✅🐲📝 Fixed missing controller mapping Issue #70 (Thanks Kaede!) ❕✅🐲📝 Fixed Crash in the custom controller screen [Issue #72] (https://github.com/TeamRizu/OutFox/issues/72) (Thanks ScottBrenner/Kaede) ❕✅🐲📝 Fixed L-Tek pads not presenting their start and select buttons ❕✅🐲 Fixed Issue in Input MacOSX failing on XInput Mode Issue #45 (Thanks cmhoneycutt343! ) ❕✅🐲 Fixed bug with old Xbox 360 Guitar Controllers being unable to be mapped in HIDAPI Mode (Thanks Confuzled) ❕✅🐲 Fixed deprecated WIN32 Macro preventing Linux/MacOS compiling  4.8.1 Build!     ❕✅🐲 Fixed Bug with Locking up on loading songs (RageFile Error) (Thanks Maractus) ❕✅🐲 Fixed Crash with too many handles being created for users with \u0026gt;6700 songs ❕✅🐲 Fixed Bug with Update loop lagging on loading window  New Input Update (Version 4)!     ❕✅🐲 New Selectable Input system via Preference.ini and Experimental Settings in the theme ❕✅🐲 Added new \u0026ldquo;legacy\u0026rdquo;(HIDAPI) Input to fix regressions in Windows and Ubuntu updates ❕✅🐲 Fixed bug with Modern XInput method causing slowdowns ❕✅🐲 Fixed bug with ParaPara Controller not being detected ❕✅🐲 Fixed bug with Bemani Controllers not being detected ❕✅🐲 Fixed bug with Hori PS2 Controllers not being detected ❕✅🐲 Fixed bug with PS2 Adapted Controllers not being detected ❕✅🐲 Added new Init() functions for controllers ❕✅🐲 Added new ReAssign functions for controllers ❕✅🐲 Fixed error in update loop that added controllers twice to the system ❕✅🐲 Fixed error with mapping buttons back to front on legacy ❕✅🐲 Fixed edge case crashes when adding names to controllers plugged in ❕✅🐲 Fixed error in option row not setting the preference value. ❕✅🐲 Added new UseOldJoystickMapping preference to choose your input system ❕✅🐲 Fixed some older controllers causing a stuck button ❕✅🐲 Fixed controller index being sketchy on USB Host/Hub reset (USB 1.1/1.0) ❕✅🐲 Fixed button assignment reaching a cap and causing an edge crash ❕✅🐲 Fixed availability of Rotary and L - R button assignments on \u0026lsquo;legacy\u0026rsquo; input ❕✅🐲 Fixed analogue inputs on some controllers staying at max range ❕✅🐲 Fixed some older controllers (Pre-2009) from polling at 250ms ❕✅🐲 Fixed some mechanical keyboards polling at 10hz/100hz in Windows 8.1/10 ❕✅ Fix some analogue inputs being seen as \u0026lsquo;depressed\u0026rsquo; when they were not (Thanks JapanYoshi) ❕✅ Fix left analogue sticks not being detected on some controllers (Thanks JapanYoshi) ❕✅ Fix some D-Pad presses (on XInput) not being detected on some controllers (Thanks JapanYoshi)  This edition features another rewrite of the Input System for OutFox. Due to windows updates, (and Ubuntu updates) that have directly affected several of our users, we have taken the time to bring forward our plans to fix this sooner rather that later.\nWhat this means to you, our players. You now have a choice of using the XInput which will be enabled by default, (and has been the norm since alpha 4.5) which gives the familiar buttons on the XBox controller. We have added a new controller option row in the \u0026lsquo;Experimental Settings\u0026rsquo; which will allow easy change, you will need to reboot your game to reinitialise the input system, but we will make this a non-game reset option in a future update. There is also a preference you can edit which is called UseOldJoystickMapping setting this to 0 sets the XInput mode, and setting this to 1 enables the legacy (HIDAPI) mode for your controller or pad.\nYou will likely need to check your offset for this update, if you are swapping modes, as some controllers behave slightly different in legacy/XInput. This is true especially of custom Arduino pads, so take time to remember to test this.\nIf you use older controllers, please ensure they are plugged in BEFORE you start the game. Because we do not depend on DirectX anymore, we need to initialise the system on game start. We are looking into this, but once the system is live, controllers can be added and removed as normal. We really do not want to go back to DInput7 or DInput8 as Microsoft is really punishing use of these system and will remove them outright eventually.\nKeyboard players can use either method, this update fixed a couple of awry driver update issues on steelseries/Corsair keyboards to fix their polling issue, so you can play as normal.\nIf you have an SMX 4k/5k/pump pad, you can use either mode, but some players have mentioned that legacy \u0026lsquo;feels tighter\u0026rsquo; than XInput for this pad. Give it a try and let us know your thoughts.\nThis new mode allows for more than 4 controllers (which XInput is limited to by design), and does not require a mapping for the gamecontrollerdb.txt file which XInput pads require. This new mode allows the older Joystick path to run, which is based on HIDAPI, thus giving us a greater level of controller support than ever before. If your controller does not show up in OutFox, or has become troublesome since the operating system updates, this is the mode for you. If you have any issues with the new system (bear in mind, you WILL need to go to Key mapping and map all the buttons for your controller to their actions. YOU DO NOT NEED TO USE CONTROLLER MAPPING WITH THIS MODE!\nThe legacy mode returns to a slightly more familiar system from 5.1/5.0 so those of you with particularly troublesome controllers will no longer have issues. The ParaParaParadise Controller prefers to be on legacy. So if you use OutFox for Para/ParaStar/EKS-D remember to set this in your game, and restart. The PPP Controller needs to be plugged in BEFORE you start the game, due to how windows operates now. This is true for Ubuntu also. Mac OSX now also properly supports this controller.\nOn the subject of ParaPara Paradise, this month has seen a lot of work and collaboration to finally fix some of the glaring issues for this mode. We will continue to do this for all our modes, so look out for updates!\nParaPara Paradise mode has been given a swathe of fixes:     ❕✅ Fixed Noteskin loading on PPP mode ❕✅ Fixed missing theme elements on PPP mode ❕✅ Added new timing windows for PPP mode, which match the PS2/2nd Mix games ❕✅ Added new judgement names for PPP mode to match PS2/2nd Mix ❕✅ Added new Tick hit support - This allows for a hit if the sensor is triggered, as per the original games ❕✅ Added new Hold Tick Hit support - Fixes a long overdue bug in holds on PPP mode. ❕✅ Added new column style \u0026lsquo;active\u0026rsquo; when a sensor is triggered, to closer match the original games ❕✅ Added 2 player support for PPP mode ❕✅ Fixed PPP controller buttons not being recognised in game ❕✅ Added new default noteskin for PPP mode ❕✅ Added new Jara noteskin for PPP mode ❕✅ Fixed evaluation screen elements causing an edge case crash ❕✅ Fixed how the game records play details to be more accurate to the original play experience. ❕✅ Fixed Rate mode being set to a weird value ❕✅ Fixed Speed Mod. For accurate arcade experience, use A or C mod, between 100-300, we feel the sweet spot is 100-150 ❕✅ Fixed missing gameplay elements  We hope you all enjoy the new revamped Para Mode, and remember it\u0026rsquo;s also playable on MacOS fully for the first time! If you have any feedback or questions please do not hesitate to contact us on the discord!\nNew Loading Window     ❕✅🐲 New loading song error checking - The log will tell you about bad songs ❕✅🐲 New loading window system ❕✅🐲 Support UTF-8 on new loading window ❕✅🐲 New themeable loading window ❕✅🐲 Custom Font loading support ❕✅🐲 New font rendering  This version sees the launch of a new loading window, which has plagued the game since 2007. We plan to use this new window for more features in the future, and it will become fully themeable for those of you that wish to modify it. It is cross platform so replaces the legacy Linux Loader, and the horribly bugged MacOSX loader. The other good thing about this mode is when you load songs, it will check your audio files for availability. What this means, if the file is corrupted or damaged, or just unable to be loaded by the game, you will get a notice in your log file. For ease of viewing, you can scan the games songs with the new version, then check out info.txt in your /logs folder. if you have any damaged songs or corrupt mp3s etc, they will be logged here. An example from my own simfile collection:\nWARNING: Sound file /AdditionalSongs/parapara/Big O/Big O.ogg couldn't be opened: . Please check it is not corrupted and redownload the file.\nWe hope you find this a welcome addition, as it will prevent some sudden crashing or silence being played in the song wheel. This feature will be worked on in the future, so if you have any ideas please throw them our way! Sometimes the window will look like it\u0026rsquo;s \u0026lsquo;locked up\u0026rsquo; on Windows - this is just the SSC cache being generated! Give it a moment and it\u0026rsquo;ll sort itself out, it only does it once.\nWe have plans to allow the online patcher and for configurations to be changed/set up for the future, so I\u0026rsquo;m hoping it is stable for you all and works as designed.\nNew MP3 Driver:     ❕✅ Removed libMAD and it\u0026rsquo;s dependencies ❕✅ Added new dr_mp3 MP3 Driver (clean for closed source phase) ❕✅ Added new libmpeg123 MP3 Driver (not in repo but available for open source phase) ❕✅🐲 Fixed internal Threads overflow ❕✅🐲 Fixed internal buffer sizes ❕✅🐲 Set modern system settings to allow transition  This has been in the background for some time. LibMAD has been a bit of a thorn in our side for some years, and as it is also GPL, it does not really fit with our closed source phase, so we have spent the past 3 months working on a resolution. We have two drivers, Libmpeg123, and dr_mp3. Libmpeg123 will be added when we are open source, and currently is on a closed branch not for distribution. dr_mp3 is the new library we have chosen to fully support as it finally adds VBR support, it\u0026rsquo;s lightweight, and also finally stops one of the broken_pipe problems on the Raspberry Pi 2/3 boards. It also has meant we have taken the time to identify more problems with the sound delivery in the game, so we will be fixing these in the future. For now we have tweaked the pipe to be consistent across drivers, so this also has given us a better experience across the different modes. We also will be looking at a new asynchronous loading mode for Keysounds, primarily for beat/popn so the load times will be reduced and this will deliver a better player experience.\nIf you experience any issues with the new sound driver, do let us know, but it has had some serious testing so we\u0026rsquo;re hoping it is stable and sane for you guys!\nThe other fixes for this month include:\nALL:\n ❕✅🐲 Fix texture buffer inconsistencies in RageTextureManager ❕✅🐲 Fixed resolution of some broken actorframe calls ❕✅ Fixed several pointer dereferences in actor handling ❕✅ Fixed a few missing casts in the GL pipe ❕✅ Fixed missing oem102 key for foreign keyboards ❕✅ Fixed bad issues with variables in RageSurface ❕✅ Revert C++ opts until the new compile method is finished ❕✅ Fixed absf math issues when calculating locations ❕✅ Fix compiler unoptimised functions causing slowdown on tweens ❕✅ Prevent overlapped centering when - 1p occurs (Thanks Neko²) ❕✅ Fix sizing on - 6/8 panel modes ❕✅ Fix size of notefield via AR over ScreenWidth ❕✅ Allow HoldJudgements to receive Player variables ❕✅ Change round method on stats display ❕✅ Support for toggling audio preview modes for ScreenSelectMusic ❕✅🐲 Changed the use of ragefile within sound engine ❕✅🐲 Removed GL 4.6 and 3.3 due to windows 10 update bugs killing the intel driver ❕✅📝 Fixed Esc not leaving test input screen Issue #41 (Thanks Moru!) ❕✅📝 Allowed early dismissal of input keybind warning Issue 40 ❕✅📝 Fixed non-random Seed generation for game/stage Issue 38 (Thanks JustinLove) ❕✅📝 Fixed Game Crash in Extended/Course Mode Issue 29 (Thanks Jubo) ❕✅📝 Fixed FPS Slowdown on some GPUs Issue 25 (Thanks LightningSkunk) ❕✅📝 Fixed Notefield Overlaps on Center 1 player Issue 24 (Thanks SilentTempest83/Neko²) ❕✅📝 Fixed Random noteskins failing to activate Issue 21 (Thanks bibusdax) ❕✅📝 Make ScreenTextEntry handle caps lock once more Issue #13(Thanks Moru!)  Windows:\n ❕✅ Fixed dll Access Violation issues with older videos ❕✅ Fixed edge case overflow on ttf loading ❕✅ Fixed missing return path on input ❕✅🐲 Removed Loading Window win32 and its baggage ❕✅🐲 Removed deprecated WINAPI callbacks  Linux:\n ❕✅ Fixed missing EGL calls ❕✅🐲 Re-add MacOSX 10.16 optimised code as it offers better stability ❕✅🐲 Begun Wayland compatibility code ❕✅🐲 Removed Loading Window linux and its baggage ❕✅🐲 Removed deprecated GTK dependencies ❕✅🐲 Removed deprecated X11/XRandR dependencies ❕✅📝 Added upstream fix to use GLVND SM Issue 1860 (Thanks mwkroening)  MacOSX:\n ❕✅ Fix discord linking for status updates ❕✅🐲 Removed Loading Window and its baggage ❕✅🐲 Removed Darwin era dependencies ❕✅ Fix CMake folder inclusion  ARM/ARM64: (Raspberry Pi etc)\n ❕✅ Fix char overflow ❕✅ Fix legacy 32bit FFMPEG builds ❕✅ Adjust Sound buffer sizes to ease CPU load  Community Content:\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":13,"href":"/releases/A4.8.1/","title":"OutFox Alpha 4.8.1 Build","parent":"Release History","content":"Release Date: 14th August 2020    \u0026ldquo;RageFile Against the Loading Window\u0026rdquo;    Hotfix Build!     ❕✅🐲 Fixed bug with Locking up on loading songs (RageFile Error) (Thanks Maractus) ❕✅🐲 Fixed Crash with too many handles being created for users with \u0026gt;6700 songs ❕✅🐲 Fixed bug with Update loop lagging on loading window  New Input Update (Version 4)!     ❕✅🐲 New Selectable Input system via Preference.ini and Experimental Settings in the theme ❕✅🐲 Added new \u0026ldquo;legacy\u0026rdquo;(HIDAPI) Input to fix regressions in Windows and Ubuntu updates ❕✅🐲 Fixed bug with Modern XInput method causing slowdowns ❕✅🐲 Fixed bug with ParaPara Controller not being detected ❕✅🐲 Fixed bug with Bemani Controllers not being detected ❕✅🐲 Fixed bug with Hori PS2 Controllers not being detected ❕✅🐲 Fixed bug with PS2 Adapted Controllers not being detected ❕✅🐲 Added new Init() functions for controllers ❕✅🐲 Added new ReAssign functions for controllers ❕✅🐲 Fixed error in update loop that added controllers twice to the system ❕✅🐲 Fixed error with mapping buttons back to front on legacy ❕✅🐲 Fixed edge case crashes when adding names to controllers plugged in ❕✅🐲 Fixed error in option row not setting the preference value. ❕✅🐲 Added new UseOldJoystickMapping preference to choose your input system ❕✅🐲 Fixed some older controllers causing a stuck button ❕✅🐲 Fixed controller index being sketchy on USB Host/Hub reset (USB 1.1/1.0) ❕✅🐲 Fixed button assignment reaching a cap and causing an edge crash ❕✅🐲 Fixed availability of Rotary and L - R button assignments on \u0026lsquo;legacy\u0026rsquo; input ❕✅🐲 Fixed analogue inputs on some controllers staying at max range ❕✅🐲 Fixed some older controllers (Pre-2009) from polling at 250ms ❕✅🐲 Fixed some mechanical keyboards polling at 10hz/100hz in Windows 8.1/10 ❕✅ Fix some analogue inputs being seen as \u0026lsquo;depressed\u0026rsquo; when they were not (Thanks JapanYoshi) ❕✅ Fix left analogue sticks not being detected on some controllers (Thanks JapanYoshi) ❕✅ Fix some D-Pad presses (on XInput) not being detected on some controllers (Thanks JapanYoshi)  This edition features another rewrite of the Input System for OutFox. Due to windows updates, (and Ubuntu updates) that have directly affected several of our users, we have taken the time to bring forward our plans to fix this sooner rather that later.\nWhat this means to you, our players. You now have a choice of using the XInput which will be enabled by default, (and has been the norm since alpha 4.5) which gives the familiar buttons on the XBox controller. We have added a new controller option row in the \u0026lsquo;Experimental Settings\u0026rsquo; which will allow easy change, you will need to reboot your game to reinitialise the input system, but we will make this a non-game reset option in a future update. There is also a preference you can edit which is called UseOldJoystickMapping setting this to 0 sets the XInput mode, and setting this to 1 enables the legacy (HIDAPI) mode for your controller or pad.\nYou will likely need to check your offset for this update, if you are swapping modes, as some controllers behave slightly different in legacy/XInput. This is true especially of custom Arduino pads, so take time to remember to test this.\nIf you use older controllers, please ensure they are plugged in BEFORE you start the game. Because we do not depend on DirectX anymore, we need to initialise the system on game start. We are looking into this, but once the system is live, controllers can be added and removed as normal. We really do not want to go back to DInput7 or DInput8 as Microsoft is really punishing use of these system and will remove them outright eventually.\nKeyboard players can use either method, this update fixed a couple of awry driver update issues on steelseries/Corsair keyboards to fix their polling issue, so you can play as normal.\nIf you have an SMX 4k/5k/pump pad, you can use either mode, but some players have mentioned that legacy \u0026lsquo;feels tighter\u0026rsquo; than XInput for this pad. Give it a try and let us know your thoughts.\nThis new mode allows for more than 4 controllers (which XInput is limited to by design), and does not require a mapping for the gamecontrollerdb.txt file which XInput pads require. This new mode allows the older Joystick path to run, which is based on HIDAPI, thus giving us a greater level of controller support than ever before. If your controller does not show up in OutFox, or has become troublesome since the operating system updates, this is the mode for you. If you have any issues with the new system (bear in mind, you WILL need to go to Key mapping and map all the buttons for your controller to their actions. YOU DO NOT NEED TO USE CONTROLLER MAPPING WITH THIS MODE!\nThe legacy mode returns to a slightly more familiar system from 5.1/5.0 so those of you with particularly troublesome controllers will no longer have issues. The ParaParaParadise Controller prefers to be on legacy. So if you use OutFox for Para/ParaStar/EKS-D remember to set this in your game, and restart. The PPP Controller needs to be plugged in BEFORE you start the game, due to how windows operates now. This is true for Ubuntu also. Mac OSX now also properly supports this controller.\nOn the subject of ParaPara Paradise, this month has seen a lot of work and collaboration to finally fix some of the glaring issues for this mode. We will continue to do this for all our modes, so look out for updates!\nParaPara Paradise mode has been given a swathe of fixes:     ❕✅ Fixed Noteskin loading on PPP mode ❕✅ Fixed missing theme elements on PPP mode ❕✅ Added new timing windows for PPP mode, which match the PS2/2nd Mix games ❕✅ Added new judgement names for PPP mode to match PS2/2nd Mix ❕✅ Added new Tick hit support - This allows for a hit if the sensor is triggered, as per the original games ❕✅ Added new Hold Tick Hit support - Fixes a long overdue bug in holds on PPP mode. ❕✅ Added new column style \u0026lsquo;active\u0026rsquo; when a sensor is triggered, to closer match the original games ❕✅ Added 2 player support for PPP mode ❕✅ Fixed PPP controller buttons not being recognised in game ❕✅ Added new default noteskin for PPP mode ❕✅ Added new Jara noteskin for PPP mode ❕✅ Fixed evaluation screen elements causing an edge case crash ❕✅ Fixed how the game records play details to be more accurate to the original play experience. ❕✅ Fixed Rate mode being set to a weird value ❕✅ Fixed Speed Mod. For accurate arcade experience, use A or C mod, between 100-300, we feel the sweet spot is 100-150 ❕✅ Fixed missing gameplay elements  We hope you all enjoy the new revamped Para Mode, and remember it\u0026rsquo;s also playable on MacOS fully for the first time! If you have any feedback or questions please do not hesitate to contact us on the discord!\nNew Loading Window     ❕✅🐲 New loading song error checking - The log will tell you about bad songs ❕✅🐲 New loading window system ❕✅🐲 Support UTF-8 on new loading window ❕✅🐲 New themeable loading window ❕✅🐲 Custom Font loading support ❕✅🐲 New font rendering  This version sees the launch of a new loading window, which has plagued the game since 2007. We plan to use this new window for more features in the future, and it will become fully themeable for those of you that wish to modify it. It is cross platform so replaces the legacy Linux Loader, and the horribly bugged MacOSX loader. The other good thing about this mode is when you load songs, it will check your audio files for availability. What this means, if the file is corrupted or damaged, or just unable to be loaded by the game, you will get a notice in your log file. For ease of viewing, you can scan the games songs with the new version, then check out info.txt in your /logs folder. if you have any damaged songs or corrupt mp3s etc, they will be logged here. An example from my own simfile collection:\nWARNING: Sound file /AdditionalSongs/parapara/Big O/Big O.ogg couldn't be opened: . Please check it is not corrupted and redownload the file.\nWe hope you find this a welcome addition, as it will prevent some sudden crashing or silence being played in the song wheel. This feature will be worked on in the future, so if you have any ideas please throw them our way! Sometimes the window will look like it\u0026rsquo;s \u0026lsquo;locked up\u0026rsquo; on Windows - this is just the SSC cache being generated! Give it a moment and it\u0026rsquo;ll sort itself out, it only does it once.\nWe have plans to allow the online patcher and for configurations to be changed/set up for the future, so I\u0026rsquo;m hoping it is stable for you all and works as designed.\nNew MP3 Driver:     ❕✅ Removed libMAD and it\u0026rsquo;s dependencies ❕✅ Added new dr_mp3 MP3 Driver (clean for closed source phase) ❕✅ Added new libmpeg123 MP3 Driver (not in repo but available for open source phase) ❕✅🐲 Fixed internal Threads overflow ❕✅🐲 Fixed internal buffer sizes ❕✅🐲 Set modern system settings to allow transition  This has been in the background for some time. LibMAD has been a bit of a thorn in our side for some years, and as it is also GPL, it does not really fit with our closed source phase, so we have spent the past 3 months working on a resolution. We have two drivers, Libmpeg123, and dr_mp3. Libmpeg123 will be added when we are open source, and currently is on a closed branch not for distribution. dr_mp3 is the new library we have chosen to fully support as it finally adds VBR support, it\u0026rsquo;s lightweight, and also finally stops one of the broken_pipe problems on the Raspberry Pi 2/3 boards. It also has meant we have taken the time to identify more problems with the sound delivery in the game, so we will be fixing these in the future. For now we have tweaked the pipe to be consistent across drivers, so this also has given us a better experience across the different modes. We also will be looking at a new asynchronous loading mode for Keysounds, primarily for beat/popn so the load times will be reduced and this will deliver a better player experience.\nIf you experience any issues with the new sound driver, do let us know, but it has had some serious testing so we\u0026rsquo;re hoping it is stable and sane for you guys!\nThe other fixes for this month include:\nALL:\n ❕✅🐲 Fix texture buffer inconsistencies in RageTextureManager ❕✅🐲 Fixed resolution of some broken actorframe calls ❕✅ Fixed several pointer dereferences in actor handling ❕✅ Fixed a few missing casts in the GL pipe ❕✅ Fixed missing oem102 key for foreign keyboards ❕✅ Fixed bad issues with variables in RageSurface ❕✅ Revert C++ opts until the new compile method is finished ❕✅ Fixed absf math issues when calculating locations ❕✅ Fix compiler unoptimised functions causing slowdown on tweens ❕✅ Prevent overlapped centering when - 1p occurs (Thanks Neko²) ❕✅ Fix sizing on - 6/8 panel modes ❕✅ Fix size of notefield via AR over ScreenWidth ❕✅ Allow HoldJudgements to receive Player variables ❕✅ Change round method on stats display ❕✅ Support for toggling audio preview modes for ScreenSelectMusic ❕✅🐲 Changed the use of ragefile within sound engine ❕✅🐲 Removed GL 4.6 and 3.3 due to windows 10 update bugs killing the intel driver ❕✅📝 Fixed Esc not leaving test input screen Issue #41 (Thanks Moru!) ❕✅📝 Allowed early dismissal of input keybind warning Issue 40 ❕✅📝 Fixed non-random Seed generation for game/stage Issue 38 (Thanks JustinLove) ❕✅📝 Fixed Game Crash in Extended/Course Mode Issue 29 (Thanks Jubo) ❕✅📝 Fixed FPS Slowdown on some GPUs Issue 25 (Thanks LightningSkunk) ❕✅📝 Fixed Notefield Overlaps on Center 1 player Issue 24 (Thanks SilentTempest83/Neko²) ❕✅📝 Fixed Random noteskins failing to activate Issue 21 (Thanks bibusdax) ❕✅📝 Make ScreenTextEntry handle caps lock once more Issue #13(Thanks Moru!)  Windows:\n ❕✅ Fixed dll Access Violation issues with older videos ❕✅ Fixed edge case overflow on ttf loading ❕✅ Fixed missing return path on input ❕✅🐲 Removed Loading Window win32 and its baggage ❕✅🐲 Removed deprecated WINAPI callbacks  Linux:\n ❕✅ Fixed missing EGL calls ❕✅🐲 Re-add MacOSX 10.16 optimised code as it offers better stability ❕✅🐲 Begun Wayland compatibility code ❕✅🐲 Removed Loading Window linux and its baggage ❕✅🐲 Removed deprecated GTK dependencies ❕✅🐲 Removed deprecated X11/XRandR dependencies ❕✅📝 Added upstream fix to use GLVND SM Issue 1860 (Thanks mwkroening)  MacOSX:\n ❕✅ Fix discord linking for status updates ❕✅🐲 Removed Loading Window and its baggage ❕✅🐲 Removed Darwin era dependencies ❕✅ Fix CMake folder inclusion  ARM/ARM64: (Raspberry Pi etc)\n ❕✅ Fix char overflow ❕✅ Fix legacy 32bit FFMPEG builds ❕✅ Adjust Sound buffer sizes to ease CPU load  Community Content:\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":14,"href":"/releases/A4.8.0/","title":"OutFox Alpha 4.8.0 Build","parent":"Release History","content":"Release Date: 14th August 2020    \u0026ldquo;Chocolate Keyboards and Frikandel\u0026rdquo;    New Input Update (Version 4)!     ❕✅🐲 New Selectable Input system via Preference.ini and Experimental Settings in the theme ❕✅🐲 Added new \u0026ldquo;legacy\u0026rdquo;(HIDAPI) Input to fix regressions in Windows and Ubuntu updates ❕✅🐲 Fixed bug with Modern XInput method causing slowdowns ❕✅🐲 Fixed bug with ParaPara Controller not being detected ❕✅🐲 Fixed bug with Bemani Controllers not being detected ❕✅🐲 Fixed bug with Hori PS2 Controllers not being detected ❕✅🐲 Fixed bug with PS2 Adapted Controllers not being detected ❕✅🐲 Added new Init() functions for controllers ❕✅🐲 Added new ReAssign functions for controllers ❕✅🐲 Fixed error in update loop that added controllers twice to the system ❕✅🐲 Fixed error with mapping buttons back to front on legacy ❕✅🐲 Fixed edge case crashes when adding names to controllers plugged in ❕✅🐲 Fixed error in option row not setting the preference value. ❕✅🐲 Added new UseOldJoystickMapping preference to choose your input system ❕✅🐲 Fixed some older controllers causing a stuck button ❕✅🐲 Fixed controller index being sketchy on USB Host/Hub reset (USB 1.1/1.0) ❕✅🐲 Fixed button assignment reaching a cap and causing an edge crash ❕✅🐲 Fixed availability of Rotary and L - R button assignments on \u0026lsquo;legacy\u0026rsquo; input ❕✅🐲 Fixed analogue inputs on some controllers staying at max range ❕✅🐲 Fixed some older controllers (Pre-2009) from polling at 250ms ❕✅🐲 Fixed some mechanical keyboards polling at 10hz/100hz in Windows 8.1/10 ❕✅ Fix some analogue inputs being seen as \u0026lsquo;depressed\u0026rsquo; when they were not (Thanks JapanYoshi) ❕✅ Fix left analogue sticks not being detected on some controllers (Thanks JapanYoshi) ❕✅ Fix some D-Pad presses (on XInput) not being detected on some controllers (Thanks JapanYoshi)  This edition features another rewrite of the Input System for OutFox. Due to windows updates, (and Ubuntu updates) that have directly affected several of our users, we have taken the time to bring forward our plans to fix this sooner rather that later.\nWhat this means to you, our players. You now have a choice of using the XInput which will be enabled by default, (and has been the norm since alpha 4.5) which gives the familiar buttons on the XBox controller. We have added a new controller option row in the \u0026lsquo;Experimental Settings\u0026rsquo; which will allow easy change, you will need to reboot your game to reinitialise the input system, but we will make this a non-game reset option in a future update. There is also a preference you can edit which is called UseOldJoystickMapping setting this to 0 sets the XInput mode, and setting this to 1 enables the legacy (HIDAPI) mode for your controller or pad.\nYou will likely need to check your offset for this update, if you are swapping modes, as some controllers behave slightly different in legacy/XInput. This is true especially of custom Arduino pads, so take time to remember to test this.\nIf you use older controllers, please ensure they are plugged in BEFORE you start the game. Because we do not depend on DirectX anymore, we need to initialise the system on game start. We are looking into this, but once the system is live, controllers can be added and removed as normal. We really do not want to go back to DInput7 or DInput8 as Microsoft is really punishing use of these system and will remove them outright eventually.\nKeyboard players can use either method, this update fixed a couple of awry driver update issues on steelseries/Corsair keyboards to fix their polling issue, so you can play as normal.\nIf you have an SMX 4k/5k/pump pad, you can use either mode, but some players have mentioned that legacy \u0026lsquo;feels tighter\u0026rsquo; than XInput for this pad. Give it a try and let us know your thoughts.\nThis new mode allows for more than 4 controllers (which XInput is limited to by design), and does not require a mapping for the gamecontrollerdb.txt file which XInput pads require. This new mode allows the older Joystick path to run, which is based on HIDAPI, thus giving us a greater level of controller support than ever before. If your controller does not show up in OutFox, or has become troublesome since the operating system updates, this is the mode for you. If you have any issues with the new system (bear in mind, you WILL need to go to Key mapping and map all the buttons for your controller to their actions. YOU DO NOT NEED TO USE CONTROLLER MAPPING WITH THIS MODE!\nThe legacy mode returns to a slightly more familiar system from 5.1/5.0 so those of you with particularly troublesome controllers will no longer have issues. The ParaParaParadise Controller prefers to be on legacy. So if you use OutFox for Para/ParaStar/EKS-D remember to set this in your game, and restart. The PPP Controller needs to be plugged in BEFORE you start the game, due to how windows operates now. This is true for Ubuntu also. Mac OSX now also properly supports this controller.\nOn the subject of ParaPara Paradise, this month has seen a lot of work and collaboration to finally fix some of the glaring issues for this mode. We will continue to do this for all our modes, so look out for updates!\nParaPara Paradise mode has been given a swathe of fixes:     ❕✅ Fixed Noteskin loading on PPP mode ❕✅ Fixed missing theme elements on PPP mode ❕✅ Added new timing windows for PPP mode, which match the PS2/2nd Mix games ❕✅ Added new judgement names for PPP mode to match PS2/2nd Mix ❕✅ Added new Tick hit support - This allows for a hit if the sensor is triggered, as per the original games ❕✅ Added new Hold Tick Hit support - Fixes a long overdue bug in holds on PPP mode. ❕✅ Added new column style \u0026lsquo;active\u0026rsquo; when a sensor is triggered, to closer match the original games ❕✅ Added 2 player support for PPP mode ❕✅ Fixed PPP controller buttons not being recognised in game ❕✅ Added new default noteskin for PPP mode ❕✅ Added new Jara noteskin for PPP mode ❕✅ Fixed evaluation screen elements causing an edge case crash ❕✅ Fixed how the game records play details to be more accurate to the original play experience. ❕✅ Fixed Rate mode being set to a weird value ❕✅ Fixed Speed Mod. For accurate arcade experience, use A or C mod, between 100-300, we feel the sweet spot is 100-150 ❕✅ Fixed missing gameplay elements  We hope you all enjoy the new revamped Para Mode, and remember it\u0026rsquo;s also playable on MacOS fully for the first time! If you have any feedback or questions please do not hesitate to contact us on the discord!\nNew Loading Window     ❕✅🐲 New loading song error checking - The log will tell you about bad songs ❕✅🐲 New loading window system ❕✅🐲 Support UTF-8 on new loading window ❕✅🐲 New themeable loading window ❕✅🐲 Custom Font loading support ❕✅🐲 New font rendering  This version sees the launch of a new loading window, which has plagued the game since 2007. We plan to use this new window for more features in the future, and it will become fully themeable for those of you that wish to modify it. It is cross platform so replaces the legacy Linux Loader, and the horribly bugged MacOSX loader. The other good thing about this mode is when you load songs, it will check your audio files for availability. What this means, if the file is corrupted or damaged, or just unable to be loaded by the game, you will get a notice in your log file. For ease of viewing, you can scan the games songs with the new version, then check out info.txt in your /logs folder. if you have any damaged songs or corrupt mp3s etc, they will be logged here. An example from my own simfile collection:\nWARNING: Sound file /AdditionalSongs/parapara/Big O/Big O.ogg couldn't be opened: . Please check it is not corrupted and redownload the file.\nWe hope you find this a welcome addition, as it will prevent some sudden crashing or silence being played in the song wheel. This feature will be worked on in the future, so if you have any ideas please throw them our way! Sometimes the window will look like it\u0026rsquo;s \u0026lsquo;locked up\u0026rsquo; on Windows - this is just the SSC cache being generated! Give it a moment and it\u0026rsquo;ll sort itself out, it only does it once.\nWe have plans to allow the online patcher and for configurations to be changed/set up for the future, so I\u0026rsquo;m hoping it is stable for you all and works as designed.\nNew MP3 Driver:     ❕✅ Removed libMAD and it\u0026rsquo;s dependencies ❕✅ Added new dr_mp3 MP3 Driver (clean for closed source phase) ❕✅ Added new libmpeg123 MP3 Driver (not in repo but available for open source phase) ❕✅🐲 Fixed internal Threads overflow ❕✅🐲 Fixed internal buffer sizes ❕✅🐲 Set modern system settings to allow transition  This has been in the background for some time. LibMAD has been a bit of a thorn in our side for some years, and as it is also GPL, it does not really fit with our closed source phase, so we have spent the past 3 months working on a resolution. We have two drivers, Libmpeg123, and dr_mp3. Libmpeg123 will be added when we are open source, and currently is on a closed branch not for distribution. dr_mp3 is the new library we have chosen to fully support as it finally adds VBR support, it\u0026rsquo;s lightweight, and also finally stops one of the broken_pipe problems on the Raspberry Pi 2/3 boards. It also has meant we have taken the time to identify more problems with the sound delivery in the game, so we will be fixing these in the future. For now we have tweaked the pipe to be consistent across drivers, so this also has given us a better experience across the different modes. We also will be looking at a new asynchronous loading mode for Keysounds, primarily for beat/popn so the load times will be reduced and this will deliver a better player experience.\nIf you experience any issues with the new sound driver, do let us know, but it has had some serious testing so we\u0026rsquo;re hoping it is stable and sane for you guys!\nThe other fixes for this month include:\nALL:\n ❕✅🐲 Fix texture buffer inconsistencies in RageTextureManager ❕✅🐲 Fixed resolution of some broken actorframe calls ❕✅ Fixed several pointer dereferences in actor handling ❕✅ Fixed a few missing casts in the GL pipe ❕✅ Fixed missing oem102 key for foreign keyboards ❕✅ Fixed bad issues with variables in RageSurface ❕✅ Revert C++ opts until the new compile method is finished ❕✅ Fixed absf math issues when calculating locations ❕✅ Fix compiler unoptimised functions causing slowdown on tweens ❕✅ Prevent overlapped centering when - 1p occurs (Thanks Neko²) ❕✅ Fix sizing on - 6/8 panel modes ❕✅ Fix size of notefield via AR over ScreenWidth ❕✅ Allow HoldJudgements to receive Player variables ❕✅ Change round method on stats display ❕✅ Support for toggling audio preview modes for ScreenSelectMusic ❕✅🐲 Changed the use of ragefile within sound engine ❕✅🐲 Removed GL 4.6 and 3.3 due to windows 10 update bugs killing the intel driver ❕✅📝 Fixed Esc not leaving test input screen Issue #41 (Thanks Moru!) ❕✅📝 Allowed early dismissal of input keybind warning Issue 40 ❕✅📝 Fixed non-random Seed generation for game/stage Issue 38 (Thanks JustinLove) ❕✅📝 Fixed Game Crash in Extended/Course Mode Issue 29 (Thanks Jubo) ❕✅📝 Fixed FPS Slowdown on some GPUs Issue 25 (Thanks LightningSkunk) ❕✅📝 Fixed Notefield Overlaps on Center 1 player Issue 24 (Thanks SilentTempest83/Neko²) ❕✅📝 Fixed Random noteskins failing to activate Issue 21 (Thanks bibusdax) ❕✅📝 Make ScreenTextEntry handle caps lock once more Issue #13(Thanks Moru!)  Windows:\n ❕✅ Fixed dll Access Violation issues with older videos ❕✅ Fixed edge case overflow on ttf loading ❕✅ Fixed missing return path on input ❕✅🐲 Removed Loading Window win32 and its baggage ❕✅🐲 Removed deprecated WINAPI callbacks  Linux:\n ❕✅ Fixed missing EGL calls ❕✅🐲 Re-add MacOSX 10.16 optimised code as it offers better stability ❕✅🐲 Begun Wayland compatibility code ❕✅🐲 Removed Loading Window linux and its baggage ❕✅🐲 Removed deprecated GTK dependencies ❕✅🐲 Removed deprecated X11/XRandR dependencies ❕✅📝 Added upstream fix to use GLVND SM Issue 1860 (Thanks mwkroening)  MacOSX:\n ❕✅ Fix discord linking for status updates ❕✅🐲 Removed Loading Window and its baggage ❕✅🐲 Removed Darwin era dependencies ❕✅ Fix CMake folder inclusion  ARM/ARM64: (Raspberry Pi etc)\n ❕✅ Fix char overflow ❕✅ Fix legacy 32bit FFMPEG builds ❕✅ Adjust Sound buffer sizes to ease CPU load  Community Content:\n ✅ Translations updated from Moru, SHRMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish) ✅ Translations updated from Daniel Rotwind (German)  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":15,"href":"/releases/A4.6.0/","title":"OutFox Alpha 4.6.0 Build","parent":"Release History","content":"Release Date: 11th July 2020    \u0026ldquo;Ogre\u0026rsquo;s Have Layers\u0026rdquo;    Do not enable 8k texture support at this time, as it will give you GL_OUT_OF_MEMORY problems. Please wait until it\u0026rsquo;s mentioned in a later update.\nAll Platforms     ❕✅ Add Narumi Mascot by Leojiaz!! ❕✅ Fix model index overflow ❕✅ Use 4-byte width for modeltypes ❕✅ Fix FFMPEG 4.3 upstream bug ❕✅🐲 Fix incorrect lua commands in notedisplay ❕✅ Fix invert for modes with odd numbered column count ❕✅ Fix and modernise all compile settings in ffmpeg ❕✅ Switch to shared dynamic linking of libraries ❕✅ Remove hardcoded file types in RandomMovies ❕✅ Fix Lua errors in generating credits OptionRow ❕✅ Fixed pump noteskin rotation to be consistent with other modes  Windows     ❕✅ Fixed dll crashes on course length ❕✅ Fixed video crashes on certain MP4 files  Linux     ❕✅ Fixed SWScale crash on courses ❕✅ Fixed AVI/MP4 crash on courses  MacOS     ❕✅ Fix discord linking for status updates ❕✅ New lib packaging to be compliant with MacOSX ❕✅ Fix dynamic linking causing crashes on avi videos  ARM/ARM64: (Raspberry Pi etc)     ❕✅ Fix crash on start due misconfigured library defaults ❕✅ Fix SWScale crash preventing boot ❕✅ Fix slowdown due to back texture code ❕✅ Tweaked method for graphics renderer choice  Community Content     ✅ Translations updated from Moru, SHRIMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish)  Arm Notices    NOTE 1: If you are on newer AARCH64 based distributions of linux, (Manjaro/Arch) you will need to do: $ sudo pacman -Sy glu mesa-git You will need to follow the tutorial here to get better performance on your ARM device: https://forum.armbian.com/topic/8352-tutorial-opengl-apps-on-opengl-es-gl4es\nNOTE 2: If you are on a raspberry Pi 3B/3B+ or 4 and want 64bit, you have native GL2.1 desktop drivers on the following image direct from the Raspberry Pi foundation: http://downloads.raspberrypi.org/raspios_arm64/images/raspios_arm64-2020-05-28/\nNOTE 3: If the game boots into the GLAD renderer, exit on the menu and set the game to use opengl in Preferences.ini. It will be within your ~home/.stepmania 5.3/save folder.\nNOTE 4: NO SOUND! As per some of the issues with the inbuilt systems on the RPi, if you have many entries of broken pipe in your log files and ALSA errors, this is often worked around with a usb sound card or similar. I have not seen anything on Manjaro which matches this so far it appears to be a Debian issue on the PI.\nNOTE 5: Don\u0026rsquo;t expect crazy performance/perfect playback! We are still learning to tweak the engine for better ARM based performance, so please be patient!\n(The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":16,"href":"/releases/A4.6.0RC3/","title":"OutFox Alpha 4.6.0 RC3 Build","parent":"Release History","content":"Release Date: 1st July 2020    Do not enable 8K texture support at this time, as it will give you GL_OUT_OF_MEMORY problems. Please wait until it\u0026rsquo;s mentioned in a later update.\nAll platforms     ❕✅ Bring over some mod specific fonts from oITG ❕✅ Editor Fixes (Thanks VILEWORX!) ❕✅ Modernise FTOC to not use double math ❕✅ Fix math offset in RageSquare ❕✅ Theme optimisations ❕✅ Fix crash when joysticks are unplugged ❕✅ Remove FTOC from the game, (Thanks shakesoda!) ❕✅ Remove Symmetric Quadstrip calls ❕✅ Fix dereferencing in several texture calls ❕✅ Fix time based overflow ❕✅ Fix not logic in RageTextureManager ❕✅ Remove GL quad calls from pipeline in favour of triangles ❕✅ Update legacy and GLAD pipeline with new triangle code ❕✅ ArrowEffects optimisations to fix stutter showdown ❕✅ Cleaned up cmake and added ARCH check file for new systems ❕✅🐲 Add some legacy GL pipeline optimisations ❕✅🐲 Fix polygon mode for the legacy Driver ❕✅🐲 Fix blendmode crash on modfiles ❕✅ Upgrade FFMPEG to 4.3  Windows     ❕✅ Fixed GL context creation  Linux     ❕✅ Remove visual acceleration to keep compatibility with Xserver  macOS     ❕✅ Don\u0026rsquo;t use /Desktop as a mount point ❕✅ Update functions to read directories ❕✅ Fix closing of sound files ❕✅🐲 Kill 10.16 programming choices due to MacOSX 11 ❕✅🐲 Support macOS 11.0 \u0026ldquo;Big Sur\u0026rdquo; ❕✅ Deprecated support for Application Support folder  ARM/ARM64 (Raspberry Pi, etc)     ❕✅ Add support for Rockchip/Pine64 3399, 3219 chips (arm64) ❕✅ Add support for Raspberry Pi 4,3B+ (thanks shakesoda, Jousway) ❕✅ Add support for armhf Raspberry Pi 2/3/3b+ ❕✅ Fix Bone and Models causing a crash on the Pi ❕✅ Fix geometry crashing on some distros ❕✅🐲 Add GL4GLES/Desktop GL friendly modifications to the legacy driver  Community content:     ✅ Guitar3 and Guitar5 graphics - Lirodon ✅ Translations updated from Moru, SHRIMP0 and SheepyChris (Brazilian Portuguese) ✅ Translations updated from MoNeko (Polish) ✅ Translations updated from Hanubeki (Japanese) ✅ Translations updated from Jose_Varela (Spanish)  ARM notes     If you are on newer AARCH64 based Linux distributions such as Arch/Manjaro, you will need to install glu and mesa-git (sudo pacman -Sy glu mesa-git) If the game boots into the GLAD renderer, exit the game and edit VideoRenderers in ~/.stepmania 5.3/Save/Preferences.ini to list opengl first. Follow this tutorial to get better performance on your ARM device: If you are on a Raspberry Pi 3B/3B+ or 4 and want 64-bit, this image of Raspberry Pi OS has native OpenGL 2.1 drivers. As per some of the issues with the in-built systems on the RPi, if you have many entries of broken pipe in your log files and ALSA errors, this is often worked around with a USB sound card or similar. We have not seen anything on Manjaro which matches this, so far it appears to be a Debian issue. Don\u0026rsquo;t expect crazy performance/perfect playback! We are still learning to tweak the engine for better performance on ARM, so please be patient!  "},{"id":17,"href":"/releases/A4.6.0RC2/","title":"OutFox Alpha 4.6.0 RC2 Build","parent":"Release History","content":"Release Date: 23th June 2020    \u0026ldquo;Jous, Jous, Jous \u0026amp; Jous Big Sur\u0026hellip;..prise Edition\u0026rdquo;    Next main update will be August 2020 as we have to get up to date with our documentation and new features.\nDo not enable 8k texture support at this time, as it will give you GL_OUT_OF_MEMORY problems. Please wait until it\u0026rsquo;s mentioned in a later update.\nAll platforms     Fixed FFMpeg return nullptr when not able to load a video (thanks SheepyChris) Fixed notefield not displaying on howtoplay and demonstration (thanks TacvicomGN) Make p2 use keypad - instead of normal Add GDDM part names Add secondary button check for controllers Add strum bass modes for guitar Give GameManager some Fixes Fix spacing and margins in ScreenGameplay Optimise notefield positional options Add PnM Portable 7 Button Mode Lua fixes for multistyle support  macOS     Build with XCode 11 to keep backwards compatibility with 10.12-14  (The \u0026lsquo;source\u0026rsquo; code below is the reporting issues template, it is not the source for OutFox)\n"},{"id":18,"href":"/releases/A4.6.0RC1/","title":"OutFox Alpha 4.6.0 RC1 Build","parent":"Release History","content":"Release Date: 19th June 2020    All platforms     Fix caching edge crash Fix a message not being called when a player unjoins Fixed an edge crash with folks with 2+ monitors Fixed a problem with a refcount causing a crash to desktop on SongSelect (Thanks Moru!) Fixed gifs being wrongly assigned in Song.cpp (Thanks Moneko!) Fixed looping on videos (Thanks Dims and Jubo!) Fixed a problem with GL 1.1 legacy textures Added a new rounding method for the stats collection Fixed Discord showing some corrupted text for some modes Implement Squish Actor effect Added new GDDM gamemode Set first start of game to be 50% volume Fix XNode loading of sprites not used in the normal pipeline  Windows     Allowed GL1.1 users to actually get a proper display Updated Installer scripts to fix a few bugs  Linux     GL1.1 will no longer cause an X server reset on Linux Mint  Community content     Updated pump default noteskins with a newer design and high res graphics Translations updated from Moru, SHRIMP0 and SheepyChris (Brazilian Portuguese) Translations updated from MoNeko (Polish) Translations updated from Hanubeki (Japanese) Translations updated from Jose_Varela (Spanish)  "},{"id":19,"href":"/dev/mods/Mods-0-Overview/","title":"Overview of modifiers","parent":"Guide to Modifiers","content":"Modifiers    Modifiers often change or affect some aspect of the gameplay, usually by messing with the game\u0026rsquo;s notefield. Some modifiers can be selected through the options menu before starting a song, but there are also simfiles with scripted modifiers that tend to have a wildly different experience than just a regular simfile. (Generally, they\u0026rsquo;re known as \u0026ldquo;modfiles\u0026rdquo;)\nGeneral notes    Often, modifiers (or \u0026ldquo;mods\u0026rdquo;) have what\u0026rsquo;s called an \u0026ldquo;approach rate\u0026rdquo;, which is how fast it\u0026rsquo;ll go to reach the specified value. When not specified, an approach rate of 1 is used, which means 100% per second.\nSo, if you have a modifier that goes from 0 to 200%, it will take 2 seconds, while 200% to -150% would take 3.5 seconds. The approach rate can be a floating point number, so values like 0.24523 or 3.7 are valid.\nApproach rates cannot be negative in OutFox alpha 4.8.2 or earlier, or it will crash.\nIn \u0026ldquo;NotITG\u0026rdquo; \u0026amp; OutFox alpha 4.8.3 and later, negative approach rates (specifically -1 in NotITG, but in general on SM5) are used to signify \u0026ldquo;instant\u0026rdquo; rates. in older versions of SM5, you can use large approach rate numbers (such as 10000 or 9e9) to achieve this.\nMagnitude is usually shown in the form of percentages for modifiers, and are capable of being negative, unless otherwise noted.\nThere are also column-specific modifiers. This affect a single column instead of the whole notefield. In NotITG, column numbering starts at 0, while it starts at 1 in SM5.\nFor the column-specific lua functions (except for gradients, mentioned later), nil can be given as the column to affect all columns of a player. (Does not work in alpha 4.8.2 of OutFox or earlier)\nModstrings    Normally these modifiers will have a modstring form that follows this general format: *\u0026lt;approach rate\u0026gt; \u0026lt;percentage\u0026gt;% \u0026lt;mod name\u0026gt; but some modifiers, like speed mods, may not follow that format.\nWhen not given a percentage, 100% is assumed. no is another way to say 0% as well.\neg: *2 bumpy is the same as *2 100% bumpy.\nThe % is optional and modstrings can work without it, but it\u0026rsquo;s there for visual convenience.\neg: *2 200 bumpy is the same as *2 200% bumpy.\nThe mod name is case insensitive.\nThese modstrings can be used either by simfile ATTACKS, course MODS, or through PlayerOptions' FromString function. Smaller numbers like 0.5 require the preceding 0.\nAny modifier or sub modifier that is boolean has a turning point of 50%. Giving 50% or more will turn it on, while 49% or lower will turn it off.\nPlayerOptions Functions    Going from modstrings to PlayerOptions functions, the magnitude has to be divided by 100 most of the time, and mod names are now case sensitive.\nWhen calling a PlayerOptions function, they often have an optional final boolean parameter that can be placed after all of the parameters that allows for function chaining similar to what Actor does, allowing for something like this:\nXMod(2.5, 3, true):Drunk(-0.75, 2.7)\nWhen passed nothing in the parameters, the function returns two values: the current magnitude, the current approach rate. However, when passed in parameters, the previous values for magnitude and rate are returned.\nYou can grab a player\u0026rsquo;s PlayerOptions for scripting purposes by doing the following:\nlocal po = {GAMESTATE:GetPlayerState(\u0026#39;PlayerNumber_P1\u0026#39;):GetPlayerOptions(\u0026#39;ModsLevel_Song\u0026#39;),GAMESTATE:GetPlayerState(\u0026#39;PlayerNumber_P2\u0026#39;):GetPlayerOptions(\u0026#39;ModsLevel_Song\u0026#39;)} This stores them into a table for easy access at any point during the song. po[1] is what you\u0026rsquo;d use to affect Player 1, while po[2] affects Player 2. Both will need to be used to affect both players with the same mods.\nSimfile ATTACKS and course MODS will override \u0026amp; reset anything set through lua on the Song level, and cannot be player-specific.\nVideo Examples    The video examples for the modifiers use an excerpt of GPOP\u0026rsquo;s expert chart for \u0026ldquo;My Story\u0026rdquo; from the \u0026ldquo;G.P.O.P.S. 3\u0026rdquo; pack.\nThe speed mod used is 1.5x, and the noteskin usually is the default noteskin for dance mode, with Exact3D used when needed.\nThe magnitude used in the video examples also may not be the value used in the textual example.\n"},{"id":20,"href":"/releases/A4.5.9/","title":"OutFox Alpha 4.5.9 Build","parent":"Release History","content":"Release Date: 14th June 2020    All platforms     Fix OpenGL context math overflow edge crash Fix math overflow in arroweffects Added math speedups in notedisplay Fix wayward frame counting on pump and para Added new math functions for 2 dimensional actors 🐲 Removed RageVector2 from the game 🐲 Added new catch all to move users on \u0026lt;= GL 2.0 to the OpenGL Renderer 🐲 Fixed Texture Size overflow Fixed Sprite Overflow causing edge crash (Thanks HeySora!) Fixed Texture Refcount underflow causing a crash on modfiles (Thanks HeySora!) Added new Resolution/Aspect Ratio support 🐲 Fix Tan types in the Math 🐲 Fixed Memory leaks in RageMath 🐲 Fixed Memory leaks in RageTextureManager 🐲 Fixed Errors in some of the new ‘fast’ options Fixed mismatch causing keysounds to stutter Removed an edge case causing songs encoded in mp3/wave prior to 2008 to play at doublespeed Fixed resampling to prevent overflow Math speedups Fixed a few missing performance opportunities in the note system Fixed Texture diagnostics  Windows     Fixed Intel DLL “unhandled c++” error on newer windows 10 builds (newer than fall 2019) Fixed Intel entrypoint errors when windows 8+ forgets that it does actually support GL 3 onwards… Fixed Intel force crashing the game with an invalid context due to a bad call in the driver Fixed the issue when people using GL 1.1 would get a crash Fixed an issue with ATI cards reporting bad GL contexts when falling back to GDI OpenGL 1.1 Added back support for 1.1. The game will warn you that playing with this version is not recommended, but it wont crash on the opengl renderer driver Added GL 2.1 entrypoints to GLAD so those on it can cheekily use the modern pipe  Linux     Fixed GL Mesa Endpoints  macOS:     Fixed GL Call Endpoints for new detections. Crashes should be gone  Community content:     Added New Crystal noteskins from Lirodon (normal and 4K for high-resolution displays) Translations updated from Moru, SHRIMP0 and SheepyChris (Brazilian Portuguese) Translations updated from MoNeko (Polish) Translations updated from Hanubeki (Japanese) Translations updated from Jose_Varela (Spanish)  "},{"id":21,"href":"/dev/mods/Mods-1-Speed-Mods/","title":"Speed","parent":"Guide to Modifiers","content":"These modifiers are used to control the scroll speed of notes in gameplay. These modifiers are not column-specific, unlike later mods described elsewhere.\nNegative speed modifiers cannot be selected from the Player Options menu, nor can it be set through the lua functions PlayerOptions provides, but it can become negative through the use of mod strings (and some modfiles have taken advantage of that).\nXMod    Desc: The \u0026ldquo;X\u0026rdquo; in \u0026ldquo;XMod\u0026rdquo; is for multiply, with it often showing as 1x or 2.5x or some other multiplier value followed by an x. Larger multiplier numbers result in a faster scroll. This speed mod type is capable of showing BPM changes, stops and other chart segment types. Often ranges of 1 to 4 (and in between at practically any specified granularity) can be common.\nQuirks: When setting this through the lua function it will immediately override CMod, MMod or AMod unlike how it functions in courses or modstring-based modfiles.\nPlayerOptions format: XMod(\u0026lt;multiplier\u0026gt;,\u0026lt;approach rate\u0026gt;)\nExample: XMod(2.5, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;multiplier\u0026gt;x\nExample: *0.5 2.5x\nCMod    Desc: The \u0026ldquo;C\u0026rdquo; in \u0026ldquo;CMod\u0026rdquo; is for \u0026ldquo;Constant BPM Scroll\u0026rdquo;, with it often showing as C200 or C450.5 or some other BPM value preceded by a C. Larger BPM values result in faster scroll speeds. This speed mod type visibly ignores chart segments and only shows a constant speed. (some forks of SM even disqualify if the chart has BPM changes and CMod is used!) Other modifiers still work on CMod, though.\nOften ranges of 200 to 400 (and in between at practically any specified granularity) can be common, but some people may be more comfortable reading at slower or faster speeds.\nQuirks: When setting this through the lua function it will immediately override XMod, MMod or AMod unlike how it functions in courses or modstring-based modfiles.\nPlayerOptions format: CMod(\u0026lt;BPM Value\u0026gt;,\u0026lt;approach rate\u0026gt;)\nExample: CMod(200, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; c\u0026lt;BPM value\u0026gt;\nExample: *0.5 c200\nMMod    Desc: The \u0026ldquo;M\u0026rdquo; in \u0026ldquo;MMod\u0026rdquo; is for \u0026ldquo;Maximum BPM Scroll\u0026rdquo;, with it often showing as m200 or m450.5 or some other BPM value preceded by an m. Unlike CMod, this speed modifier supports everything that XMod does. Instead of specifying a BPM speed for the whole song, this specifies the maximum scroll speed that will be used.\nOften ranges of 200 to 400 (and in between at practically any specified granularity) can be common, but some people may be more comfortable reading at slower or faster speeds.\nQuirks: The magnitude is in the hundreds most of the time, so a larger approach rate might be needed.\nPlayerOptions format: MMod(\u0026lt;BPM Value\u0026gt;,\u0026lt;approach rate\u0026gt;)\nExample: MMod(200, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; m\u0026lt;BPM value\u0026gt;\nExample: *0.5 m200\nAMod    Desc: The \u0026ldquo;A\u0026rdquo; in \u0026ldquo;AMod\u0026rdquo; is for \u0026ldquo;Average BPM Scroll\u0026rdquo;, with it often showing as a200 or a450.5 or some other BPM value preceded by an a. Like MMod, this modifier supports everything XMod supports, and the song\u0026rsquo;s BPM is used in calculations, the average of the song\u0026rsquo;s BPMs is calculated instead of the maximum BPM being used. (and the amount of time a BPM lasts for is taken into account, too)\nOften ranges of 200 to 400 (and in between at practically any specified granularity) can be common, but some people may be more comfortable reading at slower or faster speeds.\nQuirks: The magnitude is in the hundreds most of the time, so a larger approach rate might be needed.\nPlayerOptions format: AMod(\u0026lt;BPM Value\u0026gt;,\u0026lt;approach rate\u0026gt;)\nExample: AMod(200, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; a\u0026lt;BPM value\u0026gt;\nExample: *0.5 a200\nRandomSpeed    Desc: Each note is given a random addition to its' speed mod, with larger additions being applied when a higher magnitude is used. This does not have column-specific controls.\nNormally, 100 is the magnitude used (as it\u0026rsquo;s not commonly used in modfiles), but other values are valid.\nQuirks: Only values greater than zero have any visual effect. Missed notes revert to the actual speed mod upon passing the receptors.\nPlayerOptions format: RandomSpeed(\u0026lt;magnitude\u0026gt;,\u0026lt;approach rate\u0026gt;)\nExample: RandomSpeed(1, 0.125)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; randomspeed\nExample: *0.125 100% randomspeed\nSpeed Modifier Controllers    These modifiers control the internal parts of the speed modifiers above, and usually shouldn\u0026rsquo;t be used unless there\u0026rsquo;s a good reason to. Like the speed mods above, these aren\u0026rsquo;t column-specific either, but can support negative numbers like how the modstrings do. Unlike the speed modifiers listed above, there is no modstring form for any of these.\nTimeSpacing    Desc: Allows one to switch between CMod and the remaining mods. At 100%, this tells the game to use CMods. 0% means use XMod/MMod/AMod.\nIt\u0026rsquo;s tweenable like other modifiers, which allows one to tween \u0026lsquo;between\u0026rsquo; CMods and the other mods.\nOften the values used only range between 0 and 100%\nQuirks: The \u0026lsquo;tweening\u0026rsquo; capability can cause interesting stutter effects while tweening. Some modfiles take advantage of this. This cannot be replicated with the plain CMod \u0026amp; XMod PlayerOptions functions, but can be replicated with modstrings.\nPlayerOptions format: TimeSpacing(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: TimeSpacing(1)\nScrollBPM (Used for CMod, values are BPMs)    Desc: This is the underlying BPM value that CMod uses. Common values are the same as those for CMod.\nQuirks: Like the BPM-based speed mods, the magnitude is often in the 100s, so a larger approach rate might be needed.\nPlayerOptions format: ScrollBPM(\u0026lt;BPM value\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: ScrollBPM(1, 2)\nAvarageScrollBPM    Desc: This is the underlying BPM value that AMod uses. When this is zero, AMod is turned off. Common values are the same as those for AMod.\nQuirks: Like the BPM-based speed mods, the magnitude is often in the 100s, so a larger approach rate might be needed.\nPlayerOptions format: AvarageScrollBPM(\u0026lt;BPM value\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: AvarageScrollBPM(200, 0.5)\nMaxScrollBPM    Desc: This is the underlying BPM value that MMod uses. When this is zero, MMod is turned off, and AMod is able to be used. Common values are the same as those for MMod.\nQuirks: Like the BPM-based speed mods, the magnitude is often in the 100s, so a larger approach rate might be needed.\nPlayerOptions format: MaxScrollBPM(\u0026lt;BPM value\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: MaxScrollBPM(200, 0.5)\nScrollSpeed    Desc: This is the underlying multiplier value that XMod uses. Common values are the same as those for XMod.\nQuirks: N/A\nPlayerOptions format: ScrollSpeed(\u0026lt;multiplier\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: ScrollSpeed(2.5, 0.5)\n"},{"id":22,"href":"/releases/A4.5.8/","title":"OutFox Alpha 4.5.8 Build","parent":"Release History","content":"Release Date: 31st May 2020    This is a QoL update.\nAll platforms     Fix PitchRate/DownRate crash (Thanks to Nhan and indigo for reporting!) Fix Pump status entries Added Missing reset functions in PlayerOptions for column specific noteskews Fix discord game_SDK core dump if user goes offline/discord has problems Added ParaParaParadise controller support (Thanks Taikora for the support!) Fix a plethora of coverage recommendations Remove a few ‘virtual’ functions which were not in fact virtual Added avatar examples to the installer Added multi-option option rows. Fixed out of bounds check which always defaulted to true Fixed bad rounding on banner scrolling 🐲 Fixed a few missing performance opportunities in the sprite handler Fixed new GL Asserts not being defined Fixed “Disable Way Off” disabling “Decent” AutoPlayCPU is now disqualified and no longer saves scores. Fixed saved controller mapping saving ‘Joy1-Unknown’ (Thanks Moneko, Take Walker)  Windows     Changed versioning system to say 5.3 finally  Linux     Fixed memory reporting on newer Linux builds Adjust ALSA driver hooks  MacOSX:     Input tweaks, should be less crazy on really sensitive pads  Theme     Optimizations and visual streamlining for the Soundwaves theme. New ColorTable variables for ScreenSelectMusic and gameplay. Enable timing bar and milliseconds display independently.  Community content:     Dancing Style Judgements By MattMayuga Mikado and Jewelry Judgements by Haley Halcyon Translations updated from Moru, SHRIMP0 and SheepyChris (Brazilian Portuguese) Translations updated from MoNeko (Polish) Translations updated from Hanubeki (Japanese) Translations updated from Jose_Varela (Spanish)  "},{"id":23,"href":"/dev/mods/Mods-2-Perspective-Mods/","title":"Perspective","parent":"Guide to Modifiers","content":"Perspective modifiers tilt and skew the notefield itself to allow for a feeling of depth. Scripted modfiles can use these to do effects like rocking the notefield back and forth among other effects (And is definitely noticable with 3D noteskins).\nUnlike most modifiers available through PlayerOptions, these functions only return values in terms of tilt and skew and don\u0026rsquo;t return the current/previous approach rate. Perspecitve modifiers aren\u0026rsquo;t column-specific either.\nHallway    Desc: The notefield is tilted away from the player, so that notes start far away and come closer. Very noticable with 3D noteskins.\nTilt is negative, while Skew is at zero.\nCommon ranges can go from 50% to 150%, while the Player Options menu uses 100%.\nNegative magnitudes activate Distant instead.\nQuirks: Going over 150% Hallway may result in the notefield\u0026rsquo;s draw distance limit showing up, or even result in the notefield rotating over 90 degrees and becoming unreadable.\nPlayerOptions format: Hallway(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Hallway(1.5, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; hallway\nExample: *1 150% hallway\nDistant    Desc: The notefield is tilted towards the player, so that notes start close to the screen and go away. Very noticable with 3D noteskins.\nTilt is positive, while Skew is at zero.\nCommon ranges can go from 50% to 200%, while the Player Options menu uses 100%.\nNegative magnitudes activate Hallway instead.\nQuirks: Going over 200% Distant may result in the notefield rotating over 90 degrees and becoming unreadable.\nPlayerOptions format: Distant(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Distant(2, 2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; distant\nExample: *2 200% distant\nDistant video example\nIncoming    Desc: The notefield is tilted away from the player, like Hallway, but the notefield is also skewed so that notes approach from the middle of the screen.\nTilt is negative, while Skew is positive.\nCommon ranges can go from -150% to 150%, while the Player Options menu uses 100%.\nQuirks: Going over 150% Incoming may result in the notefield\u0026rsquo;s draw distance limit showing up, or even result in the notefield rotating over 90 degrees and becoming unreadable.\nPlayerOptions format: Incoming(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Incoming(1.5, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; incoming\nExample: *1 150 incoming\nIncoming video example\nSpace    Desc: The notefield is tilted away from the player, like Distant, but the notefield is also skewed so that notes approach from the sides of the screen.\nTilt and Skew are positive.\nCommon ranges can go from -150% to 200%, while the Player Options menu uses 100%.\nQuirks: Going beyond the common range may result in the notefield\u0026rsquo;s draw distance limit showing up, or even result in the notefield rotating over 90 degrees and becoming unreadable.\nPlayerOptions format: Space(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Space(1, 3)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; space\nExample: *3 100% space\nSpace video example\nOverhead    Desc: The notefield is parallel to the screen, and appears directly flat. Returns whether both tilt and skew are at zero before the function was called.\nBoth Tilt and Skew are at zero.\nQuirks: N/A\nPlayerOptions format: Overhead(\u0026lt;Set Overhead?\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Overhead(true, 0.2)\nModstring format: *\u0026lt;approach rate\u0026gt; overhead\nExample: *0.2 overhead\nPerspective Modifier Controllers    These modifiers control the internal parts of the modifiers above, and generally shouldn\u0026rsquo;t be used unless finer control is desired. Like the perspective modifiers, these aren\u0026rsquo;t column-specific either. Unlike the perspective modifiers, there is no modstring form for any of these, and the standard current/previous magnitude \u0026amp; approach rate are returned.\nSkew    Desc: Alters the vanish point of the notefield. Positive values move the point towards the middle of the screen, with 100% being fully on the center, while negative values move it towards the sides of the screen.\nNormally, this has the same ranges as Incoming \u0026amp; Space.\nQuirks: Will have no visible effect when players are centered on the screen. Can result in interesting x axis movements from z axis modifiers.\nPlayerOptions format: Skew(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Skew(10, 3)\nSkew video example\nTilt    Desc: Rotates the notefield on the x axis near the receptors so the arrows get closer or farther from the player when they initially appear. Positive values tilt the notefield away from the player, while negative values point it towards the player.\nNormally, this has the same ranges as Distant \u0026amp; Hallway.\nQuirks: Same as Distant and Hallway.\nPlayerOptions format: Tilt(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Tilt(2, 4)\nVideo example: See Distant \u0026amp; Hallway.\n"},{"id":24,"href":"/dev/mods/Mods-3-Column-Movement-Mods/","title":"Column movement","parent":"Guide to Modifiers","content":"Column movement modifiers allow one to move the columns in any direction. Usually, these are used to create \u0026ldquo;column swaps\u0026rdquo;, which alter the visual order of the columns in gameplay.\nFlip    Desc: Flip alters the column order to make it appear backwards. For Example, if the column order is usually left down up right, the order becomes right up down left.\nNegative values have been used to space out the columns, so values from -200% to 100% could be possible.\n50% coverges all columns to the same horizontal spot.\nDifferent amounts could be used in combination with Invert.\nQuirks: N/A\nPlayerOptions format: Flip(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Flip(1.25, 10)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; flip\nExample: *10 125% flip\nFlip video example\nInvert    Desc: Invert flips each half of the notefield. When doubles charts are being played, the two \u0026ldquo;players\u0026rdquo; are inverted separately.\nCommonly, 100% is used, but different amounts could be used in combination with Flip.\nQuirks: If used in 5.2 and earlier, Invert may act in unexpected ways on modes with an odd number of columns (eg. Pump).\nIn OutFox, Invert will have no visual effect if the mode has three columns per side or less (eg. Pump halfdoubles).\nPlayerOptions format: Invert(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Invert(1, 0.3)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; invert\nExample: *0.3 100% invert\nInvert video example\nMove    Desc: Move is a set of modifiers that are column-specific by nature and has variants for the X,Y, and Z axis. 100% moves a column forward on an axis by one dance mode column width. This can allow for column swaps that can\u0026rsquo;t be achieved through just Flip and Invert, but can take more time to set up.\nQuirks: Since alpha 4.8.3, all columns can\u0026rsquo;t be hit from the modstring (possible in NotITG), but can be done through the lua function. Right now (as of Project OutFox alpha 4.7), Pump mode\u0026rsquo;s column-spacing is 48 pixels instead of 64, so use multiples of 0.75 instead when working with Pump mode. It\u0026rsquo;s also the only way to move the center panel with any of the column-movement mods.\nAvailable Variants: MoveXCol, MoveYCol, MoveZCol\nAvailable Variants (modstring): movex, movey, movez\nPlayerOptions format: \u0026lt;Move variant\u0026gt;(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExamples: MoveXCol(1, -0.5, 4, true):MoveYCol(2, 1, 0.5, true):MoveZCol(3, 5, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\u0026lt;column\u0026gt;\nExamples: *4 -50 movex1, *0.5 100 movey2, *1 500 movez3\nMove video example\nTipsy    Desc: Tipsy makes the columns bob up and down in a sinusoidal pattern. There is a tangent-based variant as well.\nCommon ranges go from -300 to 300%\nQuirks: When combined with Drunk in SM5.1 or earlier, hold bodies may detach from the hold head.\nAvailable Variants: Tipsy, TanTipsy\nAvailable Variants (modstring): tipsy, tantipsy\nPlayerOptions format: \u0026lt;Tipsy variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Tipsy(1.5, 3) TanTipsy(1.5, 3)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *3 150% tipsy *3 150% tantipsy\nTipsy video example\nAvailable sub modifiers:    TipsyOffset    Desc: TipsyOffset shifts the point in time of where Tipsy is in its' sinusoidal pattern.\nValues of -100 to 100% have a noticable effect.\nAvailable Variants: TipsyOffset, TanTipsyOffset\nAvailable Variants (modstring): tipsyoffset, tantipsyoffset\nTipsySpacing    Desc: TipsySpacing shifts the phase for each column after the first column.\nValues of -100 to 100% have a noticable effect.\nAvailable Variants: TipsySpacing, TanTipsySpacing\nAvailable Variants (modstring): tipsyspacing, tantipsyspacing\nTipsySpeed    Desc: TipsySpeed affects how fast Tipsy goes through its' sinusoidal pattern with a multiplier. Lower magnitudes slow it down, while higher magnitudes speed it up. -100% freezes the effect completely. Results in a very jittery effect when using game uptime as the mod timer.\nCommon ranges can go from -100 to 100%\nAvailable Variants: TipsySpeed, TanTipsySpeed\nAvailable Variants (modstring): tipsyspeed, tantipsyspeed\nCombining Flip \u0026amp; Invert    Flip and invert, when paired together, allow for unusual column ordering. Here\u0026rsquo;s what\u0026rsquo;s possible in dance \u0026amp; pump modes.\n  Dance mode (4 panel) Pump mode (5 panel)   75\u0026percnt; flip + 75\u0026percnt; invert 66.666667\u0026percnt; (AKA 2/3) flip + 133.333333\u0026percnt; (AKA 4/3) invert       25\u0026percnt; flip + -75\u0026percnt; invert 33.333333\u0026percnt; (AKA 1/3) flip + -133.333333\u0026percnt; (AKA -4/3) invert       100\u0026percnt; flip + -100\u0026percnt; invert 100\u0026percnt; flip + -100\u0026percnt; invert       25\u0026percnt; flip + 125\u0026percnt; invert 33.333333\u0026percnt; (AKA 1/3) flip + 166.666666\u0026percnt; (AKA 5/3) invert       75\u0026percnt; flip + -125\u0026percnt; invert 66.666666\u0026percnt; (AKA 2/3) flip + -166.666666\u0026percnt; (AKA -5/3) invert       25\u0026percnt; flip + -25\u0026percnt; invert 33.333333\u0026percnt; (AKA 1/3) flip + -33.333333\u0026percnt; (AKA -1/3) invert       "},{"id":25,"href":"/releases/A4.5.6/","title":"OutFox Alpha 4.5.6 Build","parent":"Release History","content":"Release Date: 8th May 2020    All platforms     Aligned inline sine math with NotITG. Fine-tune the Discord SDK integration added on 4.5.5. Fix RPC core being required to run the game. Additional Soundwaves bug fixes and details.  Fix the Avatar preference line not being found. Fix failed initialisations on some of the theme statistics.    Windows     Update EXE resource metadata to display 5.3 version number (should also help prevent false positives from antivirus software)  "},{"id":26,"href":"/releases/A4.5/","title":"OutFox Alpha 4.5.9 Build","parent":"Release History","content":"Release Date: 4th May 2020    All platforms     Fix no input for axis U/D and L/R (reported by Julius) 🐲 Fix Obscure Pad Buttons 🐲 Add Multi-point Analog Support 🐲 Fix analogue AXIS being mapped incorrectly 🐲 Fix PS2/PS1/GC pad converter adapters 🐲 Add Nintendo Joy-Con/Pro/SNES/NES/8Bit DO Pad support 🐲 Add PS1/PS2/PS3/PS4 pad Support 🐲 Add Xbox/Xbox 360 pad Support 🐲 Add HORI Arcade pad support (PS4/Switch) 🐲 Add Project Diva pad support (PS3/PS4) 🐲 Add Stadia/Steam pad support 🐲 Add custom game pad/dance pad mapping support and associated user interface. 🐲 Added gamepad database support we can add to! Fix crash on joystick index Add and modify Actor functions to allow getting mid-tween values and skew values Add extra modifiers, such as \u0026ldquo;Orient\u0026rdquo; Add mid-gameplay combo manipulation to Players Re-add old SM-SSC lighting Fix 1-pixel overlap and gap on holds (Thanks waiei!) Fix arrow hold drawing order  Theme     Add sub-themes to Soundwaves. Add CDtitles. Option to disable W4 and/or W5 timing windows (ITG Decent and Way Off) More detailed stats display Scatter MS judgment bar. Players can select their own life type individually. Measure counter for streams and breaks (Thanks rin!) Display summary of last-played songs on evaluation in 1-player mode.  Linux:     Fix 5.1 Folders being overwritten with 5.3 data due to hardcoded paths New 5.3 Folder Location beginning this Alpha  Alternate binary compiled on Arch Linux for amd64 (replace existing version in amd64 tarball)\nmacOS     No longer causes program softlocks Support new input methods removing lag.  Windows     Fix bad renderer selection on pre-2011 graphics cards Fix rare crash on axis overflow.  "},{"id":27,"href":"/dev/mods/Mods-4-Scroll-Mods/","title":"Scroll","parent":"Guide to Modifiers","content":"Scroll modifiers affect the general scroll of the notefield. This is often used to change from upscroll to downscroll among other effects.\nReverse    Desc: Reverse flips the scroll of the whole notefield from upscroll to downscroll. There is also a column-specific version that adds onto the value of normal Reverse.\nCommonly, 50% or 100% is used on its' own.\nQuirks: When going over 100%, the effect goes backwards, with 200% being normal upscroll again. Negative values go upward resulting in a longer notefield. This applies to the column-specific version, too. Going to 100% on column 1 will also make the judgment \u0026amp; combo swap positions.\nFor example, 100% reverse + 100% reverse on a single column would result in that single column having upscroll and the rest being downscroll.\nAvailable Variants (modstring): reverse, reverse\u0026lt;column\u0026gt;\nPlayerOptions format: Reverse(\u0026lt;magnitude\u0026gt; \u0026lt;approach rate\u0026gt;)\nExample: Reverse(1, 2)\nColumn-specific format: ReverseCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: ReverseCol(2, 0.25, 0.25)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nexample: *2 100% reverse *0.25 25% reverse2\nReverse video example\nAvailable sub modifiers:    UnboundedReverse    Desc: UnboundedReverse is a boolean modifier that makes it so Reverse no longer bounces back when going over 100% (Acts similar to negative reverse, behavior-wise). This affects all reverse-type modifiers, including Split, Alternate and Cross. In NotITG, this is known as reversetype.\nPlayerOptions format: UnboundedReverse(\u0026lt;enable\u0026gt;)\nmodstring format: \u0026lt;enable\u0026gt; unboundedreverse\nSplit    Desc: The second half of the notefield gets reversed.\nCommonly, 50% or 100% is used on its' own.\nQuirks: Same as Reverse. If used in modes with an odd number of columns, the middle column also gets affected.\nPlayerOptions format: Split(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Split(0.75,3)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; split\nexample: *3 75% reverse\nSplit video example\nAlternate    Desc: Every other column gets reversed, starting with the second column. Also can be activated with ultraman in NotITG.\nCommonly, 50% or 100% is used on its' own.\nQuirks: Same as Reverse.\nPlayerOptions format: Alternate(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Alternate(1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; alternate\nexample: *1 100% alternate\nAlternate video example\nCross    Desc: The inner part of the notefield gets reversed with the outer sides staying as upscroll.\nCommonly, 50% or 100% is used on its' own.\nQuirks: Same as Reverse.\nPlayerOptions format: Cross(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Cross(0.25, 4)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; cross\nexample: *4 25% cross\nCross video example\nCentered    Desc: Centered moves the notefield down to where the receptors are at the center of the whole field at 100% (which is usually around the middle of the screen), taking the above scroll modifiers into account (As seen with Alternate in the video example). Commonly used to create \u0026ldquo;driven drops\u0026rdquo;. Can also be activated with converge in modstring form.\nAlso often combined with other scroll modifiers above.\nCommonly used at 100%, but more or less can be used. Negative values move the notefield up.\nQuirks: The speed it has when going to the center depends on multiple theme metrics, so \u0026ldquo;driven drop\u0026rdquo; effects may be inconsistent across multiple themes. Most modfiles expect ITG positioning, which is available as the \u0026ldquo;Lower\u0026rdquo; note position setting in the default theme. The player\u0026rsquo;s Combo also moves down based on the current amount of Centered.\nPlayerOptions format: Centered(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Centered(1. 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; centered\nexample: *0.5 100% centered\nCentered video example\nCenteredPath    Desc: While Centered moves the notefield down in position, CenteredPath moves the columns down their current path in multiples of the column\u0026rsquo;s width (Commonly 64 pixels for dance mode). This consist amount allows for more consistent \u0026ldquo;driven drops\u0026rdquo; across different setups. In NotITG, this modifier is called centered2.\nLarge amounts of CenteredPath may be used because \u0026ldquo;driven drops\u0026rdquo; can span the whole screen height.\nWhen combined with the opposite amount of MoveY in upscroll, interesting movement effects can be achieved.\nQuirks: Because CenteredPath moves columns down the path, receptors may become affected by mods that otherwise would not affect them (As seen in the video example with Tornado), and note paths may look different.\nPlayerOptions format: CenteredPath(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: CenteredPath(2.5,0.23)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; centeredpath\nexample: *0.23 250% centeredpath\nCenteredPath video example\nWhat\u0026rsquo;s a \u0026ldquo;Driven Drop\u0026rdquo;?    Driven Drops are an effect where the notes are stationary while the receptor moves down to hit the notes. (As seen in the ITG course, \u0026ldquo;Driven\u0026rdquo;)\nOften, speed mod has to be taken into account for these (which can be made simpler by forcing a speed mod).\nCenteredPath makes it easier due to using a consistent amount that doesn\u0026rsquo;t depend on multiple theme metrics, but the resulting effect may look different.\n\u0026ldquo;SCAR\u0026rdquo; Gimmicks    Before column-specific Reverse existed, Combinations of Split, Cross, Alternate and Reverse (SCAR, for short) were used to generate column-specific reverse in 4 panel modes. Here\u0026rsquo;s what\u0026rsquo;s possible when combining the modifiers.\n   SPLIT CROSS ALTERNATE Reverse LDUR reversed (1 = reversed)     50% -50% 50% 0% 0001   50% 50% -50% 0% 0010   -50% 50% -50% 0% 0100   50% 50% 50% 0% 0111   -50% -50% -50% 100% 1000   0% -100% 0% 100% 1001   50% 0% -100% 100% 1010   50% -50% -50% 100% 1011   -100% 0% 0% 100% 1100   -50% -50% 50% 100% 1101   -50% 50% -50% 100% 1110    "},{"id":28,"href":"/releases/A4.4/","title":"OutFox Alpha 4.4 Build","parent":"Release History","content":"Release Date: 4th March 2020    Alpha 4.4.1 changes     Properly removed the obsolete input handlers - seems there was a separate one added to a lone screen. Cheers, Glenn. Fixed missing keystrokes on profile creation and high score name entry.  All platforms     Removed extra input debug output from Alpha 4.3; thank you for your reports and updates. 🐲 Fixed missing scancodes on keyboard input. Fixed old %d number behaviour in Lua. Returns to 5.0/5/1 behaviour. Thanks Tatsh for reporting. Removed \u0026lsquo;Frameskipcode\u0026rsquo; - It will be readded in a later build. Fixed a few more bugs in the render pipeline\u0026hellip; added in 2004. 🐲 Properly removed the obsolete input handlers. Fixed some old cmake typos and cleaned up code for linux. Fixed regression in not supporting smzip/zip archives. Thanks to Jubo for the report. Add new keyboard input system. Fixed InputHandler issues, no more skipping on pads. Fixed missing SDL options in input causing a break error. 🐲 Added new entry-points for OpenGL. 🐲 Fixed Matrix calculation errors, resulting in a small performance boost. 🐲 Added new math functions. Added new GL support for older Intel Cards. Thanks Astolfo, Gabrielpivotyt, Aqui and Wilycel for reporting. Added new noteskins. ArrowEffect fixes to prevent math errors. 🐲 Fixed matrix errors in GL causing odd crashes. Fixed missing ImageCache setting causing odd slowdowns on launch.  Theme     New options menu appearance. New two-row speed mod selector (pick a speed type, increment the value in a second row, similar to Simply Love) and note skin preview on ScreenPlayerOptions. New ScreenStageInformation design with song background. Updated Japanese language strings by hanubeki Downplay references to \u0026ldquo;Event Mode\u0026rdquo; in the gameplay user interface. Adjustment to ScreenSelectMusic heading to fix misalignment of the sort mode box\u0026rsquo;s fill. Thanks MoNeko for reporting. In a related change, refresh header on ScreenEvaluation. Fix missing option (ScreenOptionsTheme) for mascot on title screen. Change ScreenOptionsService (options menu from title screen) and submenus to use a minimalistic, static background.  macOS     Fixed another weird issue with compiling. Fixed dmg creation.  Linux     Fixed weird Mesa edge crash. Fixed odd missing entry-points on GLX, thanks Hālian for reporting.  Windows     Fixed missing GLAD definitions.  "},{"id":29,"href":"/dev/mods/Mods-5-Rotation-Mods/","title":"Rotation","parent":"Guide to Modifiers","content":"Rotation modifiers rotate the notes on the x, y or z axis, and can also rotate the receptors in some cases.\nSome noteskins may affect how the effect looks due to how rotation and zoom interact in the notefield.\nOutFox and Open/NotITG act the same way, while earlier versions of SM5 may act differently.\nDizzy    Desc: Notes spin as they reach the receptor, with more rotationz added the farther away from the receptor a note is.\nCommon values involve multiples of PI to make some amount of rotation happen per beat.\nFor example, 628% means the notes do a full rotation every beat before hitting the receptor.\nQuirks: Unlike Twirl \u0026amp; Roll, the rotation is based on beat distance and not physical distance. Hold heads aren\u0026rsquo;t affected unless DizzyHolds is used.\nPlayerOptions format: Dizzy(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Dizzy(3.14, 2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; dizzy\nExample: *2 314% dizzy\nDizzy video example\nAvailable sub modifiers:    DizzyHolds    Desc: Enables Dizzy to affect hold heads. When used in 5.1, hold heads will still turn while held.\nPlayerOptions format: DizzyHolds(\u0026lt;enable\u0026gt;)\nModstring format: \u0026lt;enable\u0026gt; dizzyholds\nTwirl    Desc: Notes twirl as they reach the receptor, with more rotationy added the farther away from the receptor a note is.\nValues can go from -200 to 200% and beyond.\nQuirks: Also affects holds in their entirety. Single-sided noteskins may result in invisible notes sometimes (As seen in the video example).\nPlayerOptions format: Twirl(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Twirl(2.2, 3)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; twirl\nExample: *3 220% twirl\nTwirl video example\nRoll    Desc: Notes roll as they reach the receptor, with more rotationx added the farther away from the receptor a note is.\nValues can go from -200 to 200% and beyond.\nQuirks: Single-sided noteskins may result in invisible notes sometimes (As seen in the video example). Does not affect hold heads.\nPlayerOptions format: Roll(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Roll(1.7, 3.4)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; roll\nExample: *3.4 170% roll\nRoll video example\nConfusion    Desc: The notes and receptors spin constantly. Has X, Y and Z variants available. Not commonly used in modfiles compared to its' Offset sub-modifier. 100% usually works as a magnitude.\nQuirks: The effect is beat-based, with the magnitude being a multiplier. 100% means a full rotation every ~6.28 (2*PI) beats\nAvailable Variants: Confusion, ConfusionX, ConfusionY\nAvailable Variants (modstring): confusion, confusionx, confusiony, confusionz (NotITG alias for confusion)\nPlayerOptions format: \u0026lt;Confusion variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Confusion(0.5, 2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *2 50% confusion\nConfusion video example\nAvailable sub modifiers:    ConfusionOffset    Desc: Allows one to rotate the notes and receptors by a static amount. Good for keeping the notes \u0026amp; receptors oriented properly while rotating the Player. Note that the magnitude is in radians.\n628.3185% is enough for a full rotation. (Another way to put it is PI * 200 if used in modstrings and PI * 2 if using PlayerOptions.)\nAvailable Variants: ConfusionOffset, ConfusionXOffset, ConfusionYOffset\nAvailable Variants (Column-Specific): ConfusionOffsetCol, ConfusionXOffsetCol, ConfusionYOffsetCol\nAvailable Variants (modstring): confusionoffset, confusionoffset\u0026lt;column\u0026gt;, confusionxoffset, confusionxoffset\u0026lt;column\u0026gt;, confusionyoffset, confusionyoffset\u0026lt;column\u0026gt;, confusionzoffset (NotITG alias for confusionoffset), confusionzoffset\u0026lt;column\u0026gt; (NotITG alias for confusionoffset\u0026lt;column\u0026gt;)\nPlayerOptions format: \u0026lt;ConfusionOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nColumn-specific format: \u0026lt;Column-specific variant\u0026gt;(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nOrient    Desc: Orient rotates the notes and receptors based on their travel direction. That means other mods, like Drunk, can influence this modifier.\nOften 50% to 100% is good enough for an effect, as too much may make notes unreadable.\nQuirks: When a column is Reversed, 314% ConfusionOffset may be desired for the column (or field if the whole field is reversed)\nPlayerOptions format: Orient(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Orient(1, 0.25)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; orient\nExample: *0.25 100% orient\nOrient video example\n"},{"id":30,"href":"/releases/A4.3/","title":"OutFox Alpha 4.3 Build","parent":"Release History","content":"Release Date: 9th February 2020    All platforms     Fixed various missing keyboard inputs, including symbol keys (;:'@#,\u0026lt;\u0026gt;./?|`{}[])(\u0026amp;^%$\u0026quot;), the ~ key for localised keyboards, and the number pad. Fixed missing options for no mapping on localised keyboards. 🐲 Add touchscreen and mouse input hooks 🐲 Added hooks for haptic/rumble support on controllers. Why? Why not? 🐲 Fixed odd skipping on inputfilters. Removed average FPS gauge from debug overlay; caused skew on mod files. 🐲 Fixed a few bugs in the render pipeline\u0026hellip; added in 2004. 🐲 Properly integrated buffering. Rewritten triangle logic to prevent errors in ActorMultiVertex. Fixed a small lights bug. Added a cleaner way to shut the game down. Added new window states in preparation for the removal of RageDisplay (check the logs for events!) Fixed draw issue reported by some users.  Linux     Removed obsolete X11 input hook code.  macOS     This build will only run on 10.14/10.15 due to work in progress code. Fixed an integer overflow that messed with Catalina\u0026rsquo;s guiding of our output windows. Fixed a vertex overflow causing a very rare crash 🐲 Fixed polling error.  Windows     Removed obsolete win32 input hook code.  "},{"id":31,"href":"/dev/mods/Mods-6-Zoom-Mods/","title":"Zoom","parent":"Guide to Modifiers","content":"Zoom modifiers affect the size of the notefield or notes \u0026amp; receptors. Zoom works a bit differently in SM5 in that it also affects the z axis unlike in ITG/SM3.95, which only affect x \u0026amp; y.\nExtra scaling may be required if recreating effects between ITG and SM5.\nMods that work on the note and column-level may make holds look a bit weird due to how hold scaling works.\nMini    Desc: Mini scales down the entire notefield, while maintaining the receptor position.\nThe following equation for calculating the zoom is this:\n1 - (0.5*mini), with mini being the magnitude as input into the PlayerOptions function.\n100% is half-size, and 200% is zero zoom.\nNegative values make the notefield bigger.\nQuirks: Positive and negative values increase how far down the notefield draws, Judgment \u0026amp; combo scale down with Mini, but will not scale up when Mini is negative (Unlike OpenITG/NotITG, where the judgment scales down or up and the combo is unaffected). Going beyond 200% will result in the notefield having a negative zoom, which might look weird.\nPlayerOptions format: Mini(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Mini(1,0.2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; mini\nExample: *0.2 100% mini\nMini video example\nTiny    Desc: Tiny scales down the notes and receptors instead of the entire field. Variants for all three axis are available, as are column-specific variants. These are multiplied onto the whole field variants.\nThe following equation for calculating the zoom is this:\n0.5^tiny, with tiny being the magnitude as input into the PlayerOptions function.\nNotITG uses the equation from Mini instead of this one for the zoom.\nCommon values can be from -100 to 100%.\nQuirks: Judgment \u0026amp; combo scale down with Tiny, but will not scale up when Tiny is negative. Positive values bring the columns closer to simulate what Mini does, unlike NotITG. (Use the column-specific version if that effect is desired.)\nAvailable Variants: Tiny, TinyX, TinyY, TinyZ\nAvailable Variants (Column-Specific): TinyCol, TinyXCol, TinyYCol, TinyZCol, HoldTinyXCol (Hold bodies only, HoldTinyCol is an alias)\nAvailable Variants (modstring): tiny, tiny\u0026lt;column\u0026gt;, tinyx, tinyx\u0026lt;column\u0026gt;, tinyy, tinyy\u0026lt;column\u0026gt;, tinyz, tinyz\u0026lt;column\u0026gt;, holdtiny (NotITG alias that hits all columns, Hold bodies only, holdgirth is also an alias), holdtinyx\u0026lt;column\u0026gt; (Hold bodies only, holdtiny\u0026lt;column\u0026gt; is an alias (NotITG uses this name instead), holdgirth\u0026lt;column\u0026gt; is a NotITG alias)\nPlayerOptions format: \u0026lt;Tiny variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExamples: Tiny(2, 0.5)\nColumn-specific format: \u0026lt;Column-specific variant\u0026gt;(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExamples: TinyXCol(1, 1, 1, true):TinyYCol(2, -2, 0.5, true):TinyZCol(3, -4, 10, true):HoldTinyXCol(4, 3, 0.2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExamples: *0.5 -200% tinyy *1 100% tinyx1, *0.5 -200% tinyy2, *10 -400% tinyz3, *0.2 300% holdtinyx4\nTiny video example\nAvailable sub modifiers:    TinyUsesMiniCalc    Desc: When active, all Tiny mods use the zoom equation from Mini instead of the normal one. This allows for negative zooms and is useful for replicating NotITG effects that expect this behavior.\nPlayerOptions format: TinyUsesMiniCalc(\u0026lt;enable\u0026gt;)\nModstring format: \u0026lt;enable\u0026gt; tinyusesminicalc\nPulse    Desc: Pulse is a set of mods that make the notes zoom in and out as they approach the receptors.\nPulseOuter affects the main pulsing effect, while PulseInner offsets the maximum \u0026amp; minumum zoom. Also has a tangent-based variant.\nPulseOuter is noticable at 100%, and 100% PulseInner offsets the zoom to between 2x and 1x zoom.\nQuirks: N/A\nAvailable Variants: PulseInner, PulseOuter, TanPulseInner, TanPulseOuter\nAvailable Variants (modstring): pulseinner, pulseouter, pulse (NotITG alias that hits both inner \u0026amp; outer), tanpulseinner, tanpulseouter, tanpulse (NotITG alias that hits both inner \u0026amp; outer)\nPlayerOptions format: \u0026lt;Pulse variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExamples: PulseInner(1, 0.5, true):PulseOuter(1, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExamples: *0.5 100% pulseinner, *0.5 100% pulseouter\nPulse video example\nAvailable sub modifiers:    PulseOffset    Desc: Affects the phase of the sinusoidal pattern used for Pulse.\nAvailable Variants: PulseOffset, TanPulseOffset\nAvailable Variants (modstring): pulseoffset, tanpulseoffset\nPlayerOptions format: \u0026lt;PulseOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nPulsePeriod    Desc: Affects the speed of the pulsing with a multiplier (1 + magnitude).\nPositive magnitudes slow down the pulsing, negative magnitudes speed it up.\n-100% freezes the effect at the minumum.\nAvailable Variants: PulsePeriod, TanPulsePeriod\nAvailable Variants (modstring): pulseperiod, tanpulseperiod\nPlayerOptions format: \u0026lt;PulsePeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nShrinkLinear    Desc: ShrinkLinear has notes start out zoomed in, and linearly go down to normal size based on how far away the note is from hitting the receptor. There are also separate variants for all three axis.\n50% is still readable in normal circumstances.\nNegative amounts may result in notes starting backwards and ending normally.\nQuirks: N/A\nAvailable Variants: ShrinkLinear, ShrinkLinearX, ShrinkLinearY, ShrinkLinearZ\nAvailable Variants (modstring): shrinklinear, shrinklinearx, shrinklineary, shrinklinearz\nPlayerOptions format: \u0026lt;ShrinkLinear variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExamples: ShrinkLinear(0.5,1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExamples: *1 50% shrinklinear\nShrinklinear video example\nShrinkMult    Desc: ShrinkMult has notes that start zoomed out and decelerate to normal zoom. There are also separate variants for all three axis.\n100% is a decent amount.\nQuirks: Using negative amounts will result in notes going to negative infinity zoom before going back to normal.\nAvailable Variants: ShrinkMult, ShrinkMultX, ShrinkMultY, ShrinkMultZ\nAvailable Variants (modstring): shrinkmult, shrinkmultx, shrinkmulty, shrinkmultz\nPlayerOptions format: \u0026lt;ShrinkMult variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExamples: ShrinkMult(1, 2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExamples: *2 100% shrinkmult\nShrinkmult video example\n"},{"id":32,"href":"/dev/mods/Mods-7-Acceleration-Mods/","title":"Acceleration","parent":"Guide to Modifiers","content":"Acceleration modifiers mess with the vertical acceleration of the note. It lets people have notes speed up, slow down, or do a 180 among other things.\nBoomerang    Desc: Notes start flying out from the top of the screen, do a 180 at around the bottom of the screen, and go back towards the receptors.\nThe modifier has a simple on/off nature, so any nonzero magnitude will work. (Unless the VariableBoomerang sub modifier is in play)\nQuirks: Hold bodies will draw only after the hold head does the 180. NotITG changed Boomerang\u0026rsquo;s behavior to work with the magnitude by default. See the VariableBoomerang sub modifier for replicating NotITG\u0026rsquo;s behavior.\nPlayerOptions format: Boomerang(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Boomerang(1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; boomerang\nExample: *1 100% boomerang\nBoomerang video example\nAvailable sub modifiers:    VariableBoomerang    Desc: When active, Boomerang now takes its' magnitude into account, allowing for more varied effects.\nPlayerOptions format: VariableBoomerang(\u0026lt;enable\u0026gt;)\nModstring format: \u0026lt;enable\u0026gt; variableboomerang\nBrake    Desc: Notes start fast at the bottom, but slow down as they approach the receptors.\nCommon values range from 50 to 200%\nQuirks: Going over 100% can result in notes going past the receptors and then rebounding back.\nAvailable variants (modstring): brake, land (alias for brake)\nPlayerOptions format: Brake(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Brake(2, 5)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *5 200% brake\nBrake video example\nBoost    Desc: Notes start slow at the bottom, but speed up as they approach the receptors.\nCommon values range from -100% to 200%.\nQuirks: Going over 100% may result in notes bobing at the bottom before going up.\nPlayerOptions format: Boost(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Boost(1.5, 3)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; boost\nExample: *3 150% boost\nBoost video example\nExpand    Desc: the visual speed of the field\u0026rsquo;s notes oscilates back and forth, as if the notefield is expanding and contracting. Also has a tangent variant.\nCommon values range from -50 to 100%\nQuirks: When using a negative magnitude, the notes may go beyond the receptor. Stops and Delays will pause the effect altogether.\nAvailable variants: Expand, TanExpand\nAvailable variants (modstring): expand, tanexpand\nPlayerOptions format: \u0026lt;Expand variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Expand(1.2, 0.25)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.25 120% Expand\nExpand video example\nAvailable sub modifiers:    ExpandPeriod    Desc: Can speed up or slow down the oscilation. Positive speeds up, while negative slows down, -100% stops the effect.\nAvailable variants: ExpandPeriod, TanExpandPeriod\nAvailable variants (modstring): expandperiod, tanexpandperiod, expandsize (alias in NotITG), tanexpandsize (alias in NotITG)\nPlayerOptions format: \u0026lt;ExpandPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nWave    Desc: Notes slow down in the middle and then speed up to the receptors. 200% makes notes effectively stop at the middle before going up to the receptors. Also has a column-specific version.\nCommon values range from 50 to 200%.\nQuirks: N/A\nAvailable variants (modstring): wave, wave\u0026lt;column\u0026gt;\nPlayerOptions format: Wave(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Wave(2, 0.5)\nColumn-specific format: WaveCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: WaveCol(1, -2, 10, true):WaveCol(2, -1, 5, true):WaveCol(3, 1, 5, true):WaveCol(4, 2, 10, true)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt; Example: *0.5 200% wave *10 -200 wave1, *5 -100% wave2, *5 100% wave3, *10 200% wave4\nWave video example\nAvailable sub modifiers:    WavePeriod    Desc: Affects how many times the notes slow down. Positive values increase the period (less times the notes slow down), while negative values decrease the period (more times the notes slow down). -100% stops the effect.\nModstring variants: waveperiod, wavesize (NotITG alias), waveperiod\u0026lt;column\u0026gt;\nPlayerOptions format: WavePeriod(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nColumn-specific format: WavePeriodCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nWaveOffset    Desc: Shifts where the slow down point is. Positive values shift towards the receptor, negative values shift away from the receptor.\nModstring variants: waveoffset, waveoffset\u0026lt;column\u0026gt;\nPlayerOptions format: WaveOffset(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nColumn-specific format: WaveOffsetCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\n"},{"id":33,"href":"/releases/A4.2/","title":"OutFox Alpha 4.2 Build","parent":"Release History","content":"Release Date: 5th February 2020    Windows build was pulled due to bugs.\n 🐉 Fix Shader initialisation being skipped due to new LLW pipeline. Fix Detection returning false when actually true. Added new Delta2019 noteskin (Thanks shakesoda). Fix StepMania 5.0 noteskins to not use .redir files or fall back on assets from Default. Fix SDL init not being set up correctly on older hardware. Fix static linking of libs on windows. Add SDL patchfix to fix input lag. New GLAD renderer pipeline. 🐉 Input has been completely rewritten to test controller input. Player 2\u0026rsquo;s keyboard mappings will need resetting to numpad as it sets +-/* as keys. (This is a hooks bug we will remove). Lua\u0026rsquo;s backend code has been made a little more stable. Removed several cachemiss overflows, an important one being in the math pipe. 🐉 Experimental touch support added. (There is no code at the moment, but it is on our roadmap.) 🐉 Experimental hotplugging Support. DrunkOffset and TipsyOffset changed to match their behaviour on NotITG v4; the previous versions have been renamed to DrunkSpacing and TipsySpacing. HiddenRegions has been added Optimise old ssc code from NoteDisplay. Add option for hiding the mascot character on the title screen in Soundwaves 🐉 Gatekeeper no longer gets upset on macOS Core input modules are now macOS Sierra (10.12)+ compliant. Sound modules are now 10.12+ compliant. HiDPI is enabled, but the resize window will still fail on a resize if the computer has 2 monitors. (known bug) Memory usage display on renderer stats overlay now functions on macOS. Fix clock errors. 🐉 Remove DirectX code from the game on Windows. Fixed edge case heap crash on Windows caused by game controllers. Fix bad Xinput crash on Linux. Fix lag on gameplay on Linux.  "},{"id":34,"href":"/user-guide/meta/","title":"Front Matter","parent":"User Guide","content":""},{"id":35,"href":"/dev/mode-support/","title":"Mode support","parent":"Developers and Creators","content":"This section contains details for specific feature and mode support for simfiles in Project OutFox.\n BMS/PMS/DTX support KSF support SM support TJA support  "},{"id":36,"href":"/releases/A4.1/","title":"OutFox Alpha 4.1 Build","parent":"Release History","content":"Release Date: 4th January 2020    Alternate Linux binary compiled on Arch Linux for amd64 (replace existing version in amd64 tarball)\n New GLFW Renderer Pipeline. 🐉Added Xwindow SDL2 support. 🐉Tweak to remove dependency on ancient colour handling that actually slowed the game down, instead of giving it the intended performance. Re-purposed GL Entrypoints to re-support ancient GL\u0026lt;1.5 Hardware, for Native Arcade Hardware support. 🐉Fix LLW to allow for set contexts. 🐉Experimental GLES2 support from Dragons. Add new Lua hook for getrenderer now we have a choice. 🐉Experimental HiDPI support. Add Mascot to home screen. Fix missing external SDL code. Fix NaN crash on Actors. Fix GLHandleARB mismatch. Add better openGL handling for contexts on different systems. 🐉Fix ImageCache forcing a D3D format causing unnecessary conversions in RageSurface. Remove float based textures as they were unused. Remove Rageformat PAL from the game as it\u0026rsquo;s been unsupported since 2007. Fix apple compiling with new pipeline. Fix float errors in Gameloop.  "},{"id":37,"href":"/user-guide/","title":"User Guide","parent":"Project OutFox Wiki","content":""},{"id":38,"href":"/dev/mods/Mods-8-Visibility-Mods/","title":"Visibility","parent":"Guide to Modifiers","content":"Visibility Modifiers    Visibility modifiers hide various parts of the gameplay screen, such as the background, notes, receptors and other things.\nCover    Desc: Cover hides the song background. The range between fully lit and fully hidden scales based on the current value of the BGBrightness preference.\nUse negative amounts to bring back the background if BGBrightness is less than 1. A lot of modfiles use large amounts of negative cover to deal with any positive value BGBrightness could have.\nIf used on only one player, only that player\u0026rsquo;s side will have the background dimmed/hidden, with a fade in the middle between the two players.\nQuirks: If BGBrightness is at 0, then no amount of negative Cover can bring back the background.\nPlayerOptions format: Cover(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Cover(0.5, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; cover\nExample: *0.5 50% cover\nBlind    Desc: Blind hides the information relating to judgment \u0026amp; combo.\nUnlike most On/Off modifiers, this modifier is float-based. Any positive magnitude will turn it on.\nQuirks: In OpenITG, the noteflashes also turn into all fantastic (W1) noteflashes, which is why some of the modding community discourages its' use.\nPlayerOptions format: Blind(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Blind(1,1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; blind\nExample: *1 100% blind\nHideHoldJudgments    Desc: Hides the OK/NG judgments that appear upon the end of a hold note. It\u0026rsquo;s called \u0026ldquo;hoholdjudge\u0026rdquo; or \u0026ldquo;halgun\u0026rdquo; in NotITG.\nQuirks: N/A\nPlayerOptions format: HideHoldJudgments(\u0026lt;enable\u0026gt;)\nExample: HideHoldJudgments(true)\nModstring format: \u0026lt;enable\u0026gt; hideholdjudgments\nExample: 100% hideholdjudgments\nHideNoteFlash    Desc: Turns off the noteflashes for a given column. Since alpha 4.8.3, all columns can\u0026rsquo;t be hit from the modstring (possible in NotITG), but can be done through the lua function. Also known as \u0026ldquo;hidenoteflashes\u0026rdquo; in NotITG.\nQuirks: N/A\nAvailable variants (modstring): hidenoteflash\u0026lt;column\u0026gt;, hidenoteflash (NotITG alias that hits all columns), hidenoteflashes\u0026lt;column\u0026gt; (NotITG alias), hidenoteflashes (NotITG alias that hits all columns)\nPlayerOptions format: HideNoteFlashCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: HideNoteFlashCol(2, true)\nModstring format: \u0026lt;enable\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: 100% hidenoteflash2\nMinTNSToHideNotes    Desc: This sets the minimum judgment that is needed to hide the notes upon hitting. There is no modstring form.\nQuirks: The default is set in Preferences.ini, holds aren\u0026rsquo;t subject to this setting.\nPlayerOptions format: MinTNSToHideNotes(\u0026lt;TapNoteScore enum\u0026gt;)\nExample: MinTNSToHideNotes('TapNoteScore_W1')\nDrawSize    Desc: DrawSize is a set of modifiers that affect how far down and up the notefield will draw notes.\nDrawSize affects notes below the receptor (usually notes that have yet to be hit), while DrawSizeBack affects notes above the receptor (usually notes that were visibly missed)\nNot often used unless some mod effects need a longer or shorter field, but can be used to ensure a consistent field length across multiple setups through ratios.\nQuirks: The farther the notefield is allowed to draw, the more notes will be on-screen, which can hurt game performance. This is a multiplier, so it depends on your theme\u0026rsquo;s metrics.\nAvailable variants: DrawSize, DrawSizeBack\nAvailable variants (modstring): drawsize, drawsizefront (NotITG alias for drawsize), drawdistance (NotITG alias for drawsize), drawdistancefront (NotITG alias for drawsize), drawsizeback, drawdistanceback (NotITG alias for drawsizeback)\nPlayerOptions format: \u0026lt;DrawSize variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: DrawSize(-0.5,1)\nModstring format: *\u0026lt;approach rate\u0026gt;, \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 -50% drawsize\nDark    Desc: Dark hides the receptors (but not the noteflashes). There is a column-specific variant and it adds onto the normal variant.\nBecause of this additive property, the range often used can go between -100 and 100%.\nQuirks: N/A\nAvailable variants: Dark, DarkCol\nAvailable variants (modstring): dark, dark\u0026lt;column\u0026gt;\nPlayerOptions format: Dark(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Dark(1, 0.125)\nColumn-specific format: DarkCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: DarkCol(1, 0.25, 1, true):DarkCol(2, 0.5, 1, true):DarkCol(3, 0.75, 1, true):DarkCol(4, 0.90, 1, true)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.125 100% dark *1 25% dark1, *1 50% dark2, *1 75% dark3, *1 90% dark4\nDark video example\nStealth    Desc: Stealth hides the notes. When activating, notes start glowing white (0 to 50%), and then the glow fades away to an invisible note (50 to 100%). There\u0026rsquo;s a column-specific version. All variants add onto eachother, so it\u0026rsquo;s possible to have one variant at 100%, and undo it for another type with a different variant at -100%.\nBecause of this additive property, the range often used can go between -100 and 100%.\nStealthMines affects the mines only, while StealthHolds only affects the hold bodies (topcap, body, bottomcap)\nNotITG has column-specific versions of those variants, too.\nQuirks: N/A\nAvailable variants: Stealth, StealthCol, StealthHolds, StealthMines\nAvailable variants (modstring): stealth, stealth\u0026lt;column\u0026gt;, stealthmines, minestealth (NotITG\u0026rsquo;s name for stealthmines), minestealth\u0026lt;column\u0026gt; (NotITG only), hidemines (NotITG alias), hidemines\u0026lt;column\u0026gt; (NotITG alias), stealthholds, holdstealth (NotITG\u0026rsquo;s name for stealthholds), holdstealth\u0026lt;columns\u0026gt; (NotITG\u0026rsquo;s only), hideholds (NotITG alias), hideholds\u0026lt;column\u0026gt; (NotITG alias)\nPlayerOptions format: \u0026lt;Stealth variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Stealth(0.90, 1, true):StealthMines(-0.4, 1)\nColumn-specific format: StealthCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: StealthCol(1, 0.25, 1, true):StealthCol(2, 0.5, 1, true):StealthCol(3, 0.75, 1, true):StealthCol(4, 0.90, 1, true)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 90% stealth, *1 -40% stealthmines *1 25% stealth1, *1 50% stealth2, *1 75% stealth3, *1 90% stealth4\nStealth video example\nAvailable sub modifiers:    StealthType    Desc: When active, Stealth, Sudden, Hidden, Blink and RandomVanish act based on y offset (distance from the receptor) instead of the visible y position on the screen.\nPlayerOptions format: StealthType(\u0026lt;enable\u0026gt;)\nModstring format: \u0026lt;enable\u0026gt; stealthtype\nStealthPastReceptors    Desc: When active, Stealth, Sudden, Hidden, Blink and RandomVanish will not revert to zero upon passing the receptors.\nPlayerOptions format: StealthPastReceptors(\u0026lt;enable\u0026gt;)\nModstring format: \u0026lt;enable\u0026gt; stealthpastreceptors\nSudden    Desc: Notes start invisible and appear at around the middle of the notefield.\nDue to how Stealth works, values between -100 and 100% usually get used.\nQuirks: When combined with Hidden, the appearance point moves down.\nPlayerOptions format: Sudden(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Sudden(1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; sudden\nExample: *1 100% sudden\nSudden video example\nAvailable sub modifiers:    SuddenOffset    Desc: Shifts the point where the notes appear. Positive values shifts the point away from the receptors, while negative values shift it towards the receptors.\nPlayerOptions format: SuddenOffset(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; suddenoffset\nHidden    Desc: Notes start visible and disappear at around the middle of the notefield.\nDue to how Stealth works, values between -100 and 100% usually get used.\nQuirks: When combined with Sudden, the disappearance point moves up.\nPlayerOptions format: Hidden(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Hidden(0.75, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; hidden\nExample: *1 75% hidden\nHidden video example\nAvailable sub modifiers:    HiddenOffset    Desc: Shifts the point where the notes disappear. Positive values shifts the point away from the receptors, while negative values shift it towards the receptors.\nPlayerOptions format: HiddenOffset(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; hiddenoffset\nBlink    Desc: The notes blink in and out of sight. The blinking itself is based on game uptime.\nUnlike most modifiers, this only has an on and off state. Any positive magnitude will work.\nQuirks: Due to the magnitude not affecting anything and the clock being based on game uptime (unless ModTimer is changed), Blink is considered a bad mod in terms of scripted modfiles, and its' use is discouraged.\nPlayerOptions format: Blink(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Blink(1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; blink\nExample: *1 100% blink\nBlink video example\nRandomVanish    Desc: The notes disappear, then reappear in a different/random column. NotITG supposedly has an offset sub modifier. NotITG also split this modifier into separate \u0026ldquo;Randomize\u0026rdquo; and \u0026ldquo;Vanish\u0026rdquo; modifiers.\nNot used that much.\nQuirks: The \u0026ldquo;Random\u0026rdquo; feature of \u0026ldquo;RandomVanish\u0026rdquo; was removed in SM5 beta2a, but should fully work in NotITG.\nPlayerOptions format: RandomVanish(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: RandomVanish(1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; randomvanish\nExample: *1 100% randomvanish\nRandomVanish video example\n"},{"id":39,"href":"/dev/","title":"Developers and Creators","parent":"Project OutFox Wiki","content":""},{"id":40,"href":"/releases/A4.0/","title":"OutFox Alpha 4.0 Build","parent":"Release History","content":"Release Date: 16th December 2019     Fix up NoteField zoom and positioning math for soundwaves. Fix Linux Compile. Fix Mine Rotation. Fix FFMPEG memory leak. Fix Credits with inconsistent shakesoda. Add back select button menu, but also change the presentation of the options themselves to make it more prominent. Set Loading Window Size on Linux. Allow any splash size on windows. Ensure Frame is persistent and not lose data. Fix screengameplay background.lua calling the old func instead of the updated one. Fix splash being width locked. Make Eval\u0026rsquo;s noteskin actors grab from the Stage ModsLevel. Fix making Credit\u0026rsquo;s and Openings work on any Theme\u0026rsquo;s screen height. Fix typing issue with DrawDistanceBeforeTargetsPixels. Fix TapNoteScore_Attack being invalid by replacing it with a valid TNS. Allow PLayerAI to use Pro Judgments. Remove delete on sharedptr in D3D. Fix any image file extension support for avatars. 🐉Update soundman earlier to stop usb cards lagging. Hotfix Crash fixes. 🐉Fix Colour Profile on D3D. Fix Input detection on MacOS. Update MacOS App Icon. Fix typo pointed out by shakesoda. Make map controllers screen BG more minimal, strip down overlay on input calibration gameplay. New HD Noteskins. Include new core mediaframeworks into CMake. NSIS and Installer fixes. Fix Lua Compile Warning. Fix Topcap Effects. Add Stretch and shrink holds. Make BitmapText Accept floats and then convert to int to prevent Lua errors. Tweak lifebar and judgment for shake, explain ComboIsPerRow option in theme.  "},{"id":41,"href":"/dev/mods/Mods-9-Path-Mods/","title":"Path modifiers","parent":"Guide to Modifiers","content":"Path modifiers affect the path a note takes to the receptor, often curving it in some way or creating a type of wave in the movement.\nDrunk    Desc: Drunk makes the notes and receptors move left and right in a constantly shifting sinusoidal wave. There are extra variants for the Y and Z axis, as well as tangent variants.\nCommon values can be practically any value, due to its' wide use in modfiles. Try starting with -200 to 200% for an initial effect.\nQuirks: When combined with Tipsy in SM5.1 and earlier, hold bodies may detatch from the hold head. The phase of the sinusoidal wave depends on game uptime unless the mod timer is changed.\nAvailable variants: Drunk, DrunkY, DrunkZ, TanDrunk, TanDrunkY, TanDrunkZ\nAvailable variants (modstring): drunk, drunky, drunkz, tandrunk, tandrunky, tandrunkz\nPlayerOptions format: \u0026lt;Drunk variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Drunk(3, 2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *2 300% drunk\nDrunk video example\nAvailable sub modifiers:    DrunkOffset    Desc: Offsets the phase of the sinusoidal wave, which is added onto the offset caused by time.\nAvailable variants: DrunkOffset, DrunkYOffset, DrunkZOffset, TanDrunkOffset, TanDrunkYOffset, TanDrunkZOffset\nAvailable variants (modstring): drunkoffset, drunkyoffset, drunkzoffset, tandrunkoffset, tandrunkyoffset, tandrunkzoffset\nPlayerOptions format: \u0026lt;DrunkOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nDrunkPeriod    Desc: Alters the period of the sinusoidal wave. Positive values decrease the period, negative values increase the period. -100% just results in the columns moving, but the notes won\u0026rsquo;t go back and forth.\nAvailable variants: DrunkPeriod, DrunkYPeriod, DrunkZPeriod, TanDrunkPeriod, TanDrunkYPeriod, TanDrunkZPeriod\nAvailable variants (modstring): drunkperiod, drunksize (NotITG alias for drunkperiod), drunkyperiod, drunkysize (NotITG alias for drunkyperiod), drunkzperiod, drunkzsize (NotITG alias for drunkzperiod), tandrunkperiod, tandrunksize (NotITG alias for tandrunkperiod), tandrunkyperiod, tandrunkysize (NotITG alias for tandrunkyperiod), tandrunkzperiod, tandrunkzsize (NotITG alias for tandrunkzperiod)\nPlayerOptions format: \u0026lt;DrunkPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nDrunkSpacing    Desc: Alters the amount of space between the columns, and is cyclical like DrunkOffset. Used to be called \u0026ldquo;DrunkOffset\u0026rdquo; before OutFox and NotITG v4.\nAvailable variants: DrunkSpacing, DrunkYSpacing, DrunkZSpacing, TanDrunkSpacing, TanDrunkYSpacing, TanDrunkZSpacing\nAvailable variants (modstring): drunkspacing, drunkyspacing, drunkzspacing, tandrunkspacing, tandrunkyspacing, tandrunkzspacing\nPlayerOptions format: \u0026lt;DrunkSpacing variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nDrunkSpeed    Desc: Affects the speed of Drunk through a multiplier. Positive numbers speed it up, negative numbers slow it down, -100% freezes the effect. Will look really jittery when using game uptime as the mod timer.\nAvailable variants: DrunkSpeed, DrunkYSpeed, DrunkZSpeed, TanDrunkSpeed, TanDrunkYSpeed, TanDrunkZSpeed\nAvailable variants (modstring): drunkspeed, drunkyspeed, drunkzspeed, tandrunkspeed, tandrunkyspeed, tandrunkzspeed\nPlayerOptions format: \u0026lt;DrunkSpeed variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBounce    Desc: Notes bounce to the right. There\u0026rsquo;s also a Z axis variant that has notes bounce towards the player.\n100% is good enough to give a good idea for the effect.\nQuirks: N/A\nAvailable variants: Bounce, BounceZ\nAvailable variants (modstring): bounce, bouncez\nPlayerOptions format: \u0026lt;Bounce variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Bounce(1, 0.25)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.25 100% bounce\nBounce video example\nAvailable sub modifiers:    BouncePeriod    Desc: Affects the period of the bouncing. Positive numbers increase the period, while negative numbers decrease the period. -100% moves the columns to the highest point of the bounce.\nAvailable variants: BouncePeriod, BounceZPeriod\nAvailable variants (modstring): bounceperiod, bouncezperiod\nPlayerOptions format: \u0026lt;BouncePeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBounceOffset    Desc: Offsets the phase of the bounce.\nAvailable variants: BounceOffset, BounceZOffset\nAvailable variants (modstring): bounceoffset, bouncezoffset\nPlayerOptions format: \u0026lt;BounceOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nTornado    Desc: Notes swirl around as they go to the receptor. Has a Z axis variant, as well as tangent variants.\nCommon values range from -200 to 200%\nQuirks: N/A\nAvailable variants: Tornado, TornadoZ, TanTornado, TanTornadoZ\nAvailable variants (modstring): tornado, tornadoz, tantornado, tantornadoz\nPlayerOptions format: \u0026lt;Tornado variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Tornado(1, 0.2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.2 100% tornado\nTornado video example\nAvailable sub modifiers:    TornadoOffset    Desc: Offsets the phase of the sinusoidal curves for each column. Large values are needed for noticable effects.\nAvailable variants: TornadoOffset, TornadoZOffset, TanTornadoOffset, TanTornadoZOffset\nAvailable variants (modstring): tornadooffset, tornadozoffset, tantornadooffset, tantornadozoffset\nPlayerOptions format: \u0026lt;TornadoOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nTornadoPeriod    Desc: Affects the period of the sinusoidal curves for each column. Positive values decrease the period, while negative values increase the period. -100% visually removes the effect.\nAvailable variants:\nAvailable variants (modstring):\nPlayerOptions format: \u0026lt;TornadoPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBumpy    Desc: Notes go back and forth on the z axis as they go towards the receptor. Has variants for all axis as well as tangent variants and column-specific variants. Unlike the variants for Stealth and Dark, this does not add onto the values for normal Bumpy.\nCommon values could be practically anywhere due to its' wide use in modfiles. Try starting with -300 to 300% for an initial amount.\nQuirks: N/A\nAvailable variants: Bumpy, BumpyX, BumpyY, TanBumpy, TanBumpyY, TanBumpyZ\nAvailable variants (column-specific): BumpyCol, BumpyXCol, BumpyYCol, TanBumpyCol, TanBumpyXCol, TanBumpyYCol\nAvailable variants (modstring): bumpy, bumpyx, bumpyy, bumpyz (NotITG alias for bumpy), bumpy\u0026lt;column\u0026gt;, bumpyx\u0026lt;column\u0026gt;, bumpyy\u0026lt;column\u0026gt;, bumpyz\u0026lt;column\u0026gt; (NotITG alias for bumpy\u0026lt;column\u0026gt;), tanbumpy, tanbumpyx, tanbumpyy, tanbumpyz (NotITG alias for tanbumpy), tanbumpy\u0026lt;column\u0026gt;, tanbumpyx\u0026lt;column\u0026gt;, tanbumpyy\u0026lt;column\u0026gt;, tanbumpyz\u0026lt;column\u0026gt; (NotITG alias for tanbumpy\u0026lt;column\u0026gt;)\nPlayerOptions format: \u0026lt;Bumpy variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Bumpy(3, 0.5)\nColumn-specific format: \u0026lt;Column-specific variant\u0026gt;(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: BumpyCol(1, -3, 3, true):BumpyCol(2, -1, 1, true):BumpyCol(3, 1, 1, true):BumpyCol(4, 3, 3) Modstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.5 300% Bumpy\nBumpy video example\nAvailable sub modifiers:    BumpyOffset    Desc: Offsets the phase of the back and forth wave. The min/max and middle points are reachable through increments of 25%.\nAvailable variants: BumpyOffset, BumpyXOffset, BumpyYOffset, TanBumpyOffset, TanBumpyXOffset, TanBumpyYOffset\nAvailable variants (column-specific): BumpyOffsetCol, BumpyXOffsetCol, BumpyYOffsetCol, TanBumpyOffsetCol, TanBumpyXOffsetCol, TanBumpyYOffsetCol\nAvailable variants (modstring): bumpyoffset, bumpyxoffset, bumpyyoffset, bumpyzoffset (NotITG alias for bumpyoffset), bumpyoffset\u0026lt;column\u0026gt;, bumpyxoffset\u0026lt;column\u0026gt;, bumpyyoffset\u0026lt;column\u0026gt;, bumpyzoffset\u0026lt;column\u0026gt; (NotITG alias for bumpyoffset\u0026lt;column\u0026gt;), tanbumpyoffset, tanbumpyxoffset, tanbumpyyoffset, tanbumpyoffset\u0026lt;column\u0026gt;, tanbumpyxoffset\u0026lt;column\u0026gt;, tanbumpyyoffset\u0026lt;column\u0026gt;\nPlayerOptions format: \u0026lt;BumpyOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nColumn-specific format: \u0026lt;Column-specific variant\u0026gt;(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBumpyPeriod    Desc: Affects the period of the back and forth wave. Positive values increase the period, while negative values decrease the period. -100% stops the effect and moves the columns to the negative-most value.\nAvailable variants: BumpyPeriod, BumpyXPeriod, BumpyYPeriod, TanBumpyPeriod, TanBumpyXPeriod, TanBumpyYPeriod\nAvailable variants (column-specific): BumpyPeriodCol, BumpyXPeriodCol, BumpyYPeriodCol, TanBumpyPeriodCol, TanBumpyXPeriodCol, TanBumpyYPeriodCol\nAvailable variants (modstring): bumpyperiod, bumpyxperiod, bumpyyperiod, bumpyzperiod (NotITG alias for bumpyperiod), bumpysize (NotITG alias for bumpyperiod), bumpyxsize (NotITG alias for bumpyxperiod), bumpyysize (NotITG alias for bumpyyperiod), bumpyzsize (NotITG alias for bumpyperiod), bumpyperiod\u0026lt;column\u0026gt;, bumpyxperiod\u0026lt;column\u0026gt;, bumpyyperiod\u0026lt;column\u0026gt;, bumpyzperiod\u0026lt;column\u0026gt; (NotITG alias for bumpyperiod\u0026lt;column\u0026gt;), tanbumpyperiod, tanbumpyxperiod, tanbumpyyperiod, tanbumpyzperiod (NotITG alias for tanbumpyperiod), tanbumpysize (NotITG alias for tanbumpyperiod), tanbumpyxsize (NotITG alias for tanbumpyxperiod), tanbumpyysize (NotITG alias for tanbumpyyperiod), tanbumpyzsize (NotITG alias for tanbumpyperiod), tanbumpyperiod\u0026lt;column\u0026gt;, tanbumpyxperiod\u0026lt;column\u0026gt;, tanbumpyyperiod\u0026lt;column\u0026gt;\nPlayerOptions format: \u0026lt;BumpyPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nColumn-specific format: \u0026lt;Column-specific variant\u0026gt;(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBeat    Desc: Notes \u0026amp; receptors pulse to the left and right to the beat. Contrary to popular belief, it is not the only mod. There are variants for each axis.\nCommon values range from -250% to 200%, but could be practically anything because of its' wide use in modfiles.\nQuirks: Beat in OpenITG \u0026amp; NotITG does not respond well to very high BPMs.\nAvailable variants: Beat, BeatY, BeatZ\nAvailable variants (modstring): beat, beaty, beatz\nPlayerOptions format: \u0026lt;Beat variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Beat(1.5, 0.2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.2 150% Beat\nBeat video example\nAvailable sub modifiers:    BeatMult    Desc: Multiply the BPM that Beat is reacting to. Negative values slow down, while positive values speed up. -50% is half, while 100% is double.\nAvailable variants: BeatMult, BeatYMult, BeatZMult\nAvailable variants (modstring): beatmult, beatymult, beatzmult\nPlayerOptions format: \u0026lt;BeatMult variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBeatOffset    Desc: Offset the beat that the effect is going off of. 50% makes the effect act on the half beat instead of on the beat.\nAvailable variants: BeatOffset, BeatYOffset, BeatZOffset\nAvailable variants (modstring): beatoffset, beatyoffset, beatzoffset\nPlayerOptions format: \u0026lt;BeatOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBeatPeriod    Desc: Affects the period of the wave used. Positive values increase the period, negative values reduce the period. -100% makes the field shift back and forth to the beat.\nAvailable variants: BeatPeriod, BeatYPeriod, BeatZPeriod\nAvailable variants (modstring): beatperiod, beatyperiod, beatzperiod, beatsize (NotITG alias for beatperiod), beatysize (NotITG alias for beatyperiod), beatzsize (NotITG alias for beatzperiod)\nPlayerOptions format: \u0026lt;BeatPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBeatCap (NotITG only)    Desc: When active (any nonzero magnitude), Beat acts like it does in SM5, being able to properly react to high BPMs.\nAvailable variants (modstring): beatcap, beatcapy, beatcapz\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nZigzag    Desc: Notes move left and right on a triangle wave. There is also a Z axis variant.\nCommon values range from -400 to 400%\nQuirks: N/A\nAvailable variants: Zigzag, ZigzagZ\nAvailable variants (modstring): zigzag, zigzagz\nPlayerOptions format: \u0026lt;Zigzag variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Zigzag(2, 2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *2 200% zigzag\nZigzag video example\nAvailable sub modifiers:    ZigzagOffset    Desc: Offsets the phase of the triangle wave used.\nAvailable variants: ZigzagOffset, ZigzagZOffset\nAvailable variants (modstring): zigzagoffset, zigzagzoffset\nPlayerOptions format: \u0026lt;ZigzagOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nZigzagPeriod    Desc: Affects the period of the triangle wave. Positive values increase the period, negative values decrease the period, -100% shifts the field to the negative extrema.\nAvailable variants: ZigzagPeriod, ZigzagZPeriod\nAvailable variants (modstring): zigzagperiod, zigzagzperiod, zigzagsize (NotITG alias for zigzagperiod), zigzagzsize (NotITG alias for zigzagzperiod)\nPlayerOptions format: \u0026lt;ZigzagPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nSawtooth    Desc: Notes move left and right on a sawtooth wave. There is also a Z axis variant.\nCommon values range from -200 to 200%.\nQuirks: N/A\nAvailable variants: Sawtooth, SawtoothZ\nAvailable variants (modstring): sawtooth, sawtoothz\nPlayerOptions format: \u0026lt;Sawtooth variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Sawtooth(2, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 200% sawtooth\nSawtooth video example\nAvailable sub modifiers:    SawtoothOffset (NotITG only)    Desc: Offsets the sawtooth wave.\nAvailable variants (modstring): sawtoothoffset, sawtoothzoffset\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nSawtoothPeriod    Desc: Affects the period of the sawtooth wave. Positive values increase the period, negative values decrease the period. -100% makes the notefield disappear.\nAvailable variants: SawtoothPeriod, SawtoothZPeriod\nAvailable variants (modstring): sawtoothperiod, sawtoothzperiod, sawtoothsize (NotITG alias for sawtoothperiod), sawtoothzsize (NotITG alias for sawtoothzperiod)\nPlayerOptions format: \u0026lt;SawtoothPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nSquare    Desc: Notes \u0026amp; receptors are placed onto a (mostly) square wave. There is also a Z axis variant.\nCommon values range from -150 to 150%\nQuirks: The wave period is different from NotITG. Refer to https://gist.github.com/MrThatKid/2a8525a1abe1cb95073ef4eb64590b00\nAvailable variants: Square, SquareZ\nAvailable variants (modstring): square, squarez\nPlayerOptions format: \u0026lt;Square variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Square(-0.5, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 -50% square\nSquare video example\nAvailable sub modifiers:    SquareOffset    Desc: Offsets the square wave used.\nAvailable variants: SquareOffset, SquareZOffset\nAvailable variants (modstring): squareoffset, squarezoffset\nPlayerOptions format: \u0026lt;SquareOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nSquarePeriod    Desc: Alters the period of the square wave. Positive values increase the period, negative values decrease the period. -100% shifts the field to the positive extrema.\nAvailable variants: SquarePeriod, SquareZPeriod\nAvailable variants (modstring): squareperiod, sqaurezperiod\nPlayerOptions format: \u0026lt;SquarePeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nDigital    Desc: Notes are placed onto a \u0026lsquo;digital\u0026rsquo; sine wave. (Think of a sine wave, but more blocky looking). There is a variant for the Z axis, as well as tangent variants. Common values range from -400 to 400%\nQuirks: The wave period is different from NotITG. Refer to https://gist.github.com/MrThatKid/2a8525a1abe1cb95073ef4eb64590b00\nAvailable variants: Digital, DigitalZ, TanDigital, TanDigitalZ\nAvailable variants (modstring): Digital, DigitalZ, TanDigital, TanDigitalZ\nPlayerOptions format: \u0026lt;Digital variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Digital(-1.5, 3)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *3 -150% digital\nDigital video example\nAvailable sub modifiers:    DigitalSteps    Desc: Affects how many \u0026lsquo;levels\u0026rsquo; the digital sine wave has. Positive values make the wave smoother, while negative values make the wave more blocky. -50% visually removes the effect, -100% hides the notefield.\nAvailable variants: DigitalSteps, DigitalZSteps, TanDigitalSteps, TanDigitalZSteps\nAvailable variants (modstring): digitalsteps, digitalzsteps, tandigitalsteps, tandigitalzsteps\nPlayerOptions format: \u0026lt;DigitalSteps variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nDigitalOffset    Desc: Offsets the sine wave used in Digital. It\u0026rsquo;s really granular, so large amounts and large approach rates may be needed.\nAvailable variants: DigitalOffset, DigitalZOffset, TanDigitalOffset, TanDigitalZOffset\nAvailable variants (modstring): digitaloffset, digitalzoffset, tandigitaloffset, tandigitalzoffset\nPlayerOptions format: \u0026lt;DigitalOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nDigitalPeriod    Desc: Affects the period of the sine wave. Positive values increase the period, negative values decrease the period. -100% shifts the field to the negative extrema.\nAvailable variants: DigitalPeriod, DigitalZPeriod, TanDigitalPeriod, TanDigitalZPeriod\nAvailable variants (modstring): digitalperiod, digitalzperiod, tandigitalperiod, tandigitalzperiod\nPlayerOptions format: \u0026lt;DigitalPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nSpiral    Desc: Spiral is a set of modifiers that move notes in a spiral towards the receptors. There are three axis variants that are usually combined to make the full spiral effect (X + Y, Y + Z, X + Z)\nCommon values range from -200 to 200%, with a period of -99% as a starting point.\nQuirks: When at 50% Reverse, the spiral effect looks much more like a full spiral. SpiralY does not affect holds in OutFox unless some NoteField functions are used (Refer to the SpiralHolds sub modifier for more details. The video example uses NoteField:set_holds_use_nonstandard_y_pos only.)\nAvailable variants: SpiralX, SpiralY, SpiralZ\nAvailable variants (modstring): spiralx, spiraly, spiralz\nPlayerOptions format: \u0026lt;Spiral variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: SpiralX(1,1,true):SpiralY(1,1,true):SpiralXPeriod(-0.99,1,true):SpiralYPeriod(-0.99,1,true)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 100% spiralx, *1 100% spiraly, *1 -99% spiralxperiod, *1 -99% spiralyperiod\nSpiral video example\nAvailable sub modifiers:    SpiralOffset    Desc: Offsets the waves used for the spiral.\nAvailable variants: SpiralXOffset, SpiralYOffset, SpiralZOffset\nAvailable variants (modstring): spiralxoffset, spiralyoffset, spiralzoffset\nPlayerOptions format: \u0026lt;SpiralOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nSpiralPeriod    Desc: Affects the period of the waves used in spiral. Positive values decrease the period, negative values increase the period, -100% just has notes come in at a diagonal line.\nAvailable variants: SpiralXPeriod, SpiralYPeriod, SpiralZPeriod\nAvailable variants (modstring): spiralxperiod, spiralyperiod, spiralzperiod\nPlayerOptions format: \u0026lt;SpiralPeriod variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nSpiralHolds (NotITG only)    Desc: When at a positive amount, the hold renderer is switched out for one that can handle spirals better with proper uv scaling. When at -100%, the hold render uses unscaled uvs for the holds, emulating old spiralholds behavior.\nThe old behavior can be mostly replicated in SM5 by combining NoteField:set_holds_orient_to_travel_dir with NoteField:set_holds_use_nonstandard_y_pos (works for most cases) or NoteField:set_hold_length_uses_beats (when dealing with ~50% reverse, holds become much more smooth)\nAvailable variants (modstring): spiralholds, holdtype (alias)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nAsymptote    Desc: The receptors become the zero point of an asymptote on the x axis, while notes get closer to it on the x axis.\nThere aren\u0026rsquo;t any real common values because this modifier isn\u0026rsquo;t used that much.\nQuirks: N/A\nPlayerOptions format: \u0026lt;Asymptote variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Asymptote(1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 100% asymptote\nAsymptote video example\nAvailable sub modifiers:    AsymptoteOffset    Desc: Moves the asymptote line. Negative values move it down.\nPlayerOptions format: AsymptoteOffset(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; asymptoteoffset\nAsymptoteScale    Desc: Affects the curve before veering off towards the asymptote. Negative values make the curve more noticable. Going past -100% flips the curve. Being at -100% hides the notefield. (Has an alias of \u0026ldquo;asymptotesize\u0026rdquo; in NotITG)\nPlayerOptions format: AsymptoteScale(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; asymptotescale\nParabola    Desc: A set of modifiers that turn the path into a parabola, with the zero point being the receptors. There are variants for all axis.\nCommon values range from -500 to 500%\nQuirks: N/A\nAvailable variants: ParabolaX, ParabolaY, ParabolaZ\nAvailable variants (modstring): parabolax, parabolay, parabolaz\nPlayerOptions format: \u0026lt;Parabola variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: ParabolaX(2, 0.125)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.125 200% parabolax\nParabola video example\nAvailable sub modifiers:    ParabolaOffset    Desc: Moves the zero point of the parabola.\nAvailable variants: ParabolaXOffset, ParabolaYOffset, ParabolaZOffset\nAvailable variants (modstring): parabolaxoffset, parabolayoffset, parabolazoffset\nPlayerOptions format: \u0026lt; variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nCubic    Desc: A set of modifiers that turn the path into a cubic graph, with the zero point being the receptors. There are variants for all axis.\nCommon values range from -200% to 200%\nQuirks: N/A\nAvailable variants: CubicX, CubicY, CubicZ\nAvailable variants (modstring): cubicx, cubicy, cubicz\nPlayerOptions format: \u0026lt;Cubic variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: CubicZ(3, 10)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *10 300% cubicz\nCubic video example\nAvailable sub modifiers:    CubicOffset    Desc: Moves the zero point of the cubic graph. This modifier is really granular, so use large amounts.\nAvailable variants: CubicXOffset, CubicYOffset, CubicZOffset\nAvailable variants (modstring): cubicxoffset, cubicyoffset, cubiczoffset\nPlayerOptions format: \u0026lt;CubicOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nXmode (SM5 only)    Desc: A replication of Pump It Up\u0026rsquo;s X scroll mode.\nThis is rarely used, so 100% should work fine.\nQuirks: The effect is reversed on player 2 in singles mode and is reversed on the second half of the notefield if doubles modes are used. (The video example shows player 1)\nPlayerOptions format: Xmode(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Xmode(1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; xmode\nExample: *1 100% xmode\nXmode video example\nAttenuate    Desc: Emphasises the note position the further a note gets away from the receptor. Has variants for all axis. NotITG V3 and later does not have the Y axis variant.\nCommon values range from -300 to 300%\nQuirks: This modifier is applied after every other modifier has run, so all path modifiers are taken into account for this.\nAvailable variants: AttenuateX, AttenuateY, AttenuateZ\nAvailable variants (modstring): attenuatex, attenuate (NotITG name), attenuatey, attenuatez\nPlayerOptions format: \u0026lt;Attenuate variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: AttenuateX(2, 4)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *4 200% attenuatex\nAttenuate video example\nAvailable sub modifiers:    AttenuateOffset    Desc: Offset the position emphasis used in Attenuate. Available variants: AttenuateXOffset, AttenuateYOffset, AttenuateZOffset\nAvailable variants (modstring): attenuatexoffset, attenuateoffset (NotITG name), attenuateyoffset, attenuatezoffset\nPlayerOptions format: \u0026lt;AttenuateOffset variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;) Modstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\n"},{"id":42,"href":"/releases/","title":"Release History","parent":"Project OutFox Wiki","content":"    OutFox Alpha 4.9.9HF3 Build     OutFox Alpha 4.9.9HF2 Build     OutFox Alpha 4.9.9HF Build     OutFox Alpha 4.9.9 Build     OutFox Alpha 4.9.8 Build     OutFox Alpha 4.9.7GG Build     OutFox Alpha 4.9.7 Build     OutFox Alpha 4.9.6 Build     OutFox Alpha 4.9.5 Build     OutFox Alpha 4.9.1 Build     OutFox Alpha 4.9.0/HF Build     OutFox Alpha 4.8.5 Build     OutFox Alpha 4.8.2 Build     OutFox Alpha 4.8.1 Build     OutFox Alpha 4.8.0 Build     OutFox Alpha 4.6.0 Build     OutFox Alpha 4.6.0 RC3 Build     OutFox Alpha 4.6.0 RC2 Build     OutFox Alpha 4.6.0 RC1 Build     OutFox Alpha 4.5.9 Build     OutFox Alpha 4.5.8 Build     OutFox Alpha 4.5.6 Build     OutFox Alpha 4.5.9 Build     OutFox Alpha 4.4 Build     OutFox Alpha 4.3 Build     OutFox Alpha 4.2 Build     OutFox Alpha 4.1 Build     OutFox Alpha 4.0 Build     "},{"id":43,"href":"/user-guide/setup/","title":"Setup","parent":"User Guide","content":""},{"id":44,"href":"/user-guide/meta/about/","title":"About Project OutFox","parent":"Front Matter","content":"What is Project OutFox    Project OutFox is a fork of StepMania 5.1, led by a group of veterans and other prominent figures in the community. Its main goals include:\n Refactoring its internal codebase to improve performance, adhere to modern coding practices, and enhance its capabilities on modern hardware and other platforms. We have worked on support for single-board ARM systems such as Raspberry Pi), and improvements to uncapped frame rate have also been recorded on hardware as far back as the Pentium E2180. Improving its support for other gameplay styles beyond dance games; we are treating the project as a cross-platform \u0026ldquo;sandbox\u0026rdquo; and \u0026ldquo;museum\u0026rdquo; for rhythm games, rather than simply a simulator/emulator for popular dance game franchises.  As Project OutFox is a continuation of the 5.0.12 and 5.1 codebase (not “5.2”), it remains compatible with almost all existing songs, themes, and noteskins that are supported on these versions (if you do encounter odd behaviour or other issues with older content, please report it to us as a bug). Project OutFox is unrelated to 5.1 -3 (sometimes written as 5.1-3), which was a prior build of 5.2 before it was renamed.\nProject OutFox Teams       Development     Squirrel   Jousway   Cube   MrThatKid   ArcticFqx   Jose Varela        Design     Jose Varela   Lirodon   SheepyChris   Sudospective        Community     Moru Zerinho6   SHRMP0   Moneko   Hanubeki   Gabrimax98   RodentVienna      The development members are the ones that make OutFox possible. They\u0026rsquo;re the people working on the game engine.\nThe design members are the ones who work on assets, themes and frontend.\nThe community members assists by creating, maintaining and expanding community projects and organizations, such as:\n Moderating the Discord Server, Forum, Subreddit and our Bug Hunter Repository; Coordinating Tiny-Foxes, a community group focusing on add-ons and localizations for Project OutFox. Creation and organization of OutFox Community Pack.  "},{"id":45,"href":"/dev/mode-support/bms-pms-dtx-support/","title":"BMS/PMS/DTX","parent":"Mode support","content":"Project OutFox contains parsers for the BMS, PMS, and DTX chart formats, which are the standard formats used in conjunction with the beat, popn, and gddm game types. The following table contains details on the BMS/PMS/DTX channels that Project OutFox currently supports.\nBMS/PMS/DTX Notedata support as of Alpha 4.9.9    Key:     ✅ Fully supported and used in Mode ✓ Fully supported and not used in Mode 📝? No Documentation on this channel\u0026rsquo;s support ❌ Not Supported / Not Available ~ Not Used  Channel Support Table       BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     1 Background Music ✅ Background Music ✅ Supported Background Music ✅ ✅ Supported   2 Measure Length ✅ Measure length ✅ Supported / OutFox Channel 2 lasts a measure on DTX Measure Multiplication factor ❌ ✅ Supported / OutFox Channel 2 lasts a measure on DTX   3 Set Initial BPM ✅ Set Initial BPM ✅ Supported Set Initial BPM ✅ ✅ Supported   4 BGA Base ✅ BG Base ✅ Supported - needs enabling BG Layer 1 ✅ ✅ Supported - needs enabling   5 eXtended Object ✅ eXtended Object ✅ Supported eXtended Object ✅ 📝? Supported   6 BGA Layer Miss ✅ BGA Poor ✅ Supported - needs enabling Not Used ✓ ~ Supported - needs enabling   7 BGA Layer ✅ BG Layer ✅ Supported - needs enabling sits above channel 4 BG Layer 2 ✅ ✅ Supported - needs enabling sits above channel 4   8 Extended BPM ✅ Set BPM ✅ Supported - Changes bpm to value Extended BPM ✅ ✅ Supported - Changes bpm to value   9 Stop ✅ Stop ✓ Supported Not Used ✓ ~ Supported   0A BGA Layer 2 ✅ BGA Layer 2 ✅ Supported Not Used ✓ ~ Supported   0B BGA Base Opacity ❌ BGA Base Opacity ❌ Not Supported Not Used ~ ~ Not Used   0C BGA Layer Opacity ❌ Not Used ~ Not Supported Not Used ~ ~ Not Used   0D BGA Layer 2 Opacity ❌ Not Used ~ Not Supported Not Used ~ ~ Not Used   0E BGA Poor Opacity ❌ BGA Poor Opacity ❌ Not Supported Not Used ~ ~ Not Used   0F Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     10 Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   11 P1 Key 1 ✅ P1 Left White ✅ Supported HiHatClose ✅ ✅ Supported   12 P1 Key 2 ✅ P1 Left Yellow ✅ Supported Snare ✅ ✅ Supported   13 P1 Key 3 ✅ P1 Left Green ✅ Supported Bass Drum ✅ ✅ Supported   14 P1 Key 4 ✅ P1 Left Blue ✅ Supported High Tom ✅ ✅ Supported   15 P1 Key 5 ✅ P1 Red ✅ Supported Low Tom ✅ ✅ Supported   16 P1 Turn/Scratch ✅ Not Used ~ Supported Cymbal ✅ ✅ Supported   17 P1 FootPedal ❌ Not Used ~ Supported Floor Tom ✅ ✅ Supported   18 P1 Key 6 ✅ Not Used ~ Supported High Hat Open ✅ ✅ Supported   19 P1 Key 7 ✅ Not Used ~ Supported Ride Cymbal ✅ ✅ Supported   1A Not Used ~ Not Used ~ Not Used Left Cymbal ✅ ✅ Supported   1B Not Used ~ Not Used ~ Not Used Left Pedal ✅ ✅ Supported   1C Not Used ~ Not Used ~ Not Used Left Bass Drum ✅ ✅ Supported   1D Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   1E Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   1F Not Used ~ Not Used ~ Not Used Drums Fill in Sound ✅ ✅ Supported        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     20 Not Used ~ Not Used ~ Not Used Guitar OPEN ❌ ✅ Not Supported yet on DTX   21 P2 Key 1 ✅ Not Used ✅ Supported Guitar xxBxx ❌ ✅ Not Supported yet on DTX   22 P2 Key 2 ✅ P1 Right Blue ✅ Supported Guitar xGxxx ❌ ✅ Not Supported yet on DTX   23 P2 Key 3 ✅ P1 Right Green ✅ Supported Guitar xGBxx ❌ ✅ Not Supported yet on DTX   24 P2 Key 4 ✅ P1 Right Yellow ✅ Supported Guitar Rxxxx ❌ ✅ Not Supported yet on DTX   25 P2 Key 5 ✅ P1 Right White ✅ Supported Guitar RxBxx ❌ ✅ Not Supported yet on DTX   26 P2 Turn/Scratch ✅ Not Used ~ Supported Guitar RGxxx ❌ ✅ Not Supported yet on DTX   27 P2 FootPedal ❌ Not Used ~ Not Supported yet Guitar RGBxx ❌ ✅ Not Supported yet on DTX   28 P2 Key 6 ✅ Not Used ~ Supported Guitar Wail ❌ ✅ Not Supported yet on DTX   29 P2 Key 7 ✅ Not Used ~ Supported Not Supported ~ ~ Not Supported   2A Not Used ~ Not Used ~ Not Used Not Supported ~ ~ Not Supported   2B Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   2C Not Used ~ Not Used ~ Not Used Guitar Long Note Start/End Point ❌ ✅ AL Not Supported   2D Not Used ~ Not Used ~ Not Used Bass Long Note Start/End Point ❌ ✅ AL Not Supported   2E Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   2F Not Used ~ Not Used ~ Not Used Guitar Wailing Sound ❌ ✅ Not Supported yet on DTX        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     30 Not Used ~ Not Used ~ Not Used Rate Speed ~ ~ Not Used   31 P1 Key 1 Hidden ❌ P1 Left White Hidden ❌ BMS/PMS in 4.9.10 HiHatClose Hidden Note ✅ ✅ Supported   32 P1 Key 2 Hidden ❌ P1 Left Yellow Hidden ❌ BMS/PMS in 4.9.10 Snare Hidden Note ✅ ✅ Supported   33 P1 Key 3 Hidden ❌ P1 Left Green Hidden ❌ BMS/PMS in 4.9.10 Bass Drum Hidden Note ✅ ✅ Supported   34 P1 Key 4 Hidden ❌ P1 Left Blue Hidden ❌ BMS/PMS in 4.9.10 High Tom Hidden Note ✅ ✅ Supported   35 P1 Key 5 Hidden ❌ Not Used ~ BMS in 4.9.10 Low Tom Hidden Note ✅ ✅ Supported   36 P1 Turn/Scratch Hidden ❌ Not Used ~ BMS in 4.9.10 Cymbal Hidden Note ✅ ✅ Supported   37 P1 FootPedal Hidden ❌ Not Used ~ BMS in 4.9.10 Floor Tom Hidden Note ✅ ✅ Supported   38 P1 Key 6 Hidden ❌ Not Used ~ BMS in 4.9.10 High Hat Open Hidden Note ✅ ✅ Supported   39 P1 Key 7 Hidden ❌ Not Used ~ BMS in 4.9.10 Ride Cymbal Hidden Note ✅ ✅ Supported   3A Not Used ~ Not Used ~ Not Used Left Cymbal Hidden Note ✅ ✅ Supported   3B Not Used ~ Not Used ~ Not Used Left Pedal Hidden Note ✅ ✅ Supported   3C Not Used ~ Not Used ~ Not Used Left Bass Drum Hidden Note ✅ ✅ Supported   3D Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   3E Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   3F Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     40 Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   41 P2 Key 1 Hidden ❌ Not Used ~ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   42 P2 Key 2 Hidden ❌ P1 Right Blue Hidden ❌ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   43 P2 Key 3 Hidden ❌ P1 Right Green Hidden ❌ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   44 P2 Key 4 Hidden ❌ P1 Right Yellow Hidden ❌ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   45 P2 Key 5 Hidden ❌ P1 Right White Hidden ❌ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   46 P2 Turn/Scratch Hidden ❌ Not Used ~ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   47 P2 FootPedal Hidden ❌ Not Used ~ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   48 P2 Key 6 Hidden ❌ Not Used ~ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   49 P2 Key 7 Hidden ❌ Not Used ~ BMS/PMS in 4.9.10 Not Used ~ ~ Not Used   4A Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   4B Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   4C Not Used ~ Not Used ~ Not Supported Bonus 04 ❌ ✅ Not Supported   4D Not Used ~ Not Used ~ Not Supported Bonus 03 ❌ ✅ Not Supported   4E Not Used ~ Not Used ~ Not Supported Bonus 02 ❌ ✅ Not Supported   4F Not Used ~ Not Used ~ Not Supported Bonus 01 ❌ ✅ Not Supported     Long Note Sections #xxx51-69 - #LNTYPE1, #LNTYPE2 (BMS/PMS)    The original Long Note Implementation is currently not supported in OutFox, though we do support #LNTYPE 1, but the others need to be added to the game. These sections seem to be for BMS specific extensions, however I have not been able to find any modern documented use of them outside of 2005-2009.\nI have kept them here mainly due to the fact they exist, and whether or not there is enough of a use case to include them in our support roadmap of the specification.\n   BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     50 Not Used ~ Not Used ~ Not Supported Bar Line ❌ ✅ Not Used   51 P1 Key 1 LongNote 📝? P1 Left While LongNote 📝? Not Supported Beat Line ❌ ✅ Not Supported   52 P1 Key 2 LongNote 📝? P1 Left Yellow LongNote 📝? Not Supported MIDI Drum Chorus ❌ ✅ Not Supported   53 P1 Key 3 LongNote 📝? P1 Left Green LongNote 📝? Not Supported Fill In ~ ~ Not Supported   54 P1 Key 4 LongNote 📝? P1 Left Blue LongNote 📝? Not Supported Video Playback ❌ ✅ Not Supported   55 P1 Key 5 LongNote 📝? P1 Red LongNote 📝? Not Supported BGA Layer 3 ❌ ✅ Not Supported   56 P1 Turn/Scratch LongNote 📝? Not Used ~ Not Supported BGA Layer 4 ❌ ✅ Not Supported   57 P1 FootPedal LongNote 📝? Not Used ~ Not Supported BGA Layer 5 ❌ ✅ Not Supported   58 P1 Key 6 LongNote 📝? Not Used ~ Not Supported BGA Layer 6 ❌ ✅ Not Supported   59 P1 Key 7 LongNote 📝? Not Used ~ Not Supported BGA Layer 7 ❌ ✅ Not Supported   5A Not Used ~ Not Used ~ Not Used Background Video Playback ~ ~ Not Used   5B Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   5C Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   5D Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   5E Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   5F Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     60 Not Used ~ Not Used ~ Not Used BGA Layer 8 ❌ ✅ Not Supported   61 P2 Key 1 LongNote 📝? Not Used ~ Not Supported Sound Effect 01 ✅ ✅ Supported   62 P2 Key 2 LongNote 📝? P1 Right Blue LongNote 📝? Not Supported Sound Effect 02 ✅ ✅ Supported   63 P2 Key 3 LongNote 📝? P1 Right Green LongNote 📝? Not Supported Sound Effect 03 ✅ ✅ Supported   64 P2 Key 4 LongNote 📝? P1 Right Yellow LongNote 📝? Not Supported Sound Effect 04 ✅ ✅ Supported   65 P2 Key 5 LongNote 📝? P1 Right White LongNote 📝? Not Supported Sound Effect 05 ✅ ✅ Supported   66 P2 Turn/Scratch LongNote 📝? Not Used ~ Not Supported Sound Effect 06 ✅ ✅ Supported   67 P2 FootPedal LongNote 📝? Not Used ~ Not Supported Sound Effect 07 ✅ ✅ Supported   68 P2 Key 6 LongNote 📝? Not Used ~ Not Supported Sound Effect 08 ✅ ✅ Supported   69 P2 Key 7 LongNote 📝? Not Used ~ Not Supported Sound Effect 09 ✅ ✅ Supported   6A Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   6B Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   6C Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   6D Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   6E Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   6F Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     70 Not Used ~ Not Used ~ Not Used Sound Effect 10 ✅ ✅ Not Supported   71 Not Used ~ Not Used ~ Not Used Sound Effect 11 ✅ ✅ Supported   72 Not Used ~ Not Used ~ Not Used Sound Effect 12 ✅ ✅ Supported   73 Not Used ~ Not Used ~ Not Used Sound Effect 13 ✅ ✅ Supported   74 Not Used ~ Not Used ~ Not Used Sound Effect 14 ✅ ✅ Supported   75 Not Used ~ Not Used ~ Not Used Sound Effect 15 ✅ ✅ Supported   76 Not Used ~ Not Used ~ Not Used Sound Effect 16 ✅ ✅ Supported   77 Not Used ~ Not Used ~ Not Used Sound Effect 17 ✅ ✅ Supported   78 Not Used ~ Not Used ~ Not Used Sound Effect 18 ✅ ✅ Supported   79 Not Used ~ Not Used ~ Not Used Sound Effect 19 ✅ ✅ Supported   7A Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   7B Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   7C Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   7D Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   7E Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   7F Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     80 Not Used ~ Not Used ~ Not Used Sound Effect 20 ✅ ✅ Supported   81 Not Used ~ Not Used ~ Not Used Sound Effect 21 ✅ ✅ Supported   82 Not Used ~ Not Used ~ Not Used Sound Effect 22 ✅ ✅ Supported   83 Not Used ~ Not Used ~ Not Used Sound Effect 23 ✅ ✅ Supported   84 Not Used ~ Not Used ~ Not Used Sound Effect 24 ✅ ✅ Supported   85 Not Used ~ Not Used ~ Not Used Sound Effect 25 ✅ ✅ Supported   86 Not Used ~ Not Used ~ Not Used Sound Effect 26 ✅ ✅ Supported   87 Not Used ~ Not Used ~ Not Used Sound Effect 27 ✅ ✅ Supported   88 Not Used ~ Not Used ~ Not Used Sound Effect 28 ✅ ✅ Supported   89 Not Used ~ Not Used ~ Not Used Sound Effect 29 ✅ ✅ Supported   8A Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   8B Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   8C Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   8D Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   8E Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used   8F Not Used ~ Not Used ~ Not Used Not Used ~ ~ Not Used        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     90 Not Used ~ Not Used ~ Not Used Sound Effect 30 ✅ ✅ Supported   91 Not Used ~ Not Used ~ Not Used Sound Effect 31 ✅ ✅ Supported   92 Not Used ~ Not Used ~ Not Used Sound Effect 32 ✅ ✅ Supported   93 Not Used ~ Not Used ~ Not Used Guitar xxxYx ❌ ✅ Not Supported   94 Not Used ~ Not Used ~ Not Used Guitar xxBYx ❌ ✅ Not Supported   95 Not Used ~ Not Used ~ Not Used Guitar xGxYx ❌ ✅ Not Supported   96 Not Used ~ Not Used ~ Not Used Guitar xGBYx ❌ ✅ Not Supported   97 Not Used ~ BGM Volume ❌ Not Supported Guitar RxxYx ❌ ✅ Not Supported   98 Not Used ~ KeySound Volume ❌ Not Supported Guitar RxBYx ❌ ✅ Not Supported   99 Not Used ~ TEXT String ❌ Not Supported Guitar RGxYx ❌ ✅ Not Supported   9A Not Used ~ Not Used ~ Not Used Guitar RGBYx ❌ ✅ Not Supported   9B Not Used ~ Not Used ~ Not Used Guitar xxxxP ❌ ✅ Not Supported   9C Not Used ~ Not Used ~ Not Used Guitar xxBxP ❌ ✅ Not Supported   9D Not Used ~ Not Used ~ Not Used Guitar xGxxP ❌ ✅ Not Supported   9E Not Used ~ Not Used ~ Not Used Guitar xGBxP ❌ ✅ Not Supported   9F Not Used ~ Not Used ~ Not Used Guitar RxxxP ❌ ✅ Not Supported        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     A0 Not Used ~ Not Used ~ Not Used Bass OPEN ❌ ✅ Not Supported   A1 Not Used ~ Not Used ~ Not Used Bass xxBxx ❌ ✅ Not Supported   A2 Not Used ~ Not Used ~ Not Used Bass xGxxx ❌ ✅ Not Supported   A3 Not Used ~ Not Used ~ Not Used Bass xGBxx ❌ ✅ Not Supported   A4 Not Used ~ Not Used ~ Not Used Bass Rxxxx ❌ ✅ Not Supported   A5 Not Used ~ Not Used ~ Not Used Bass RxBxx ❌ ✅ Not Supported   A6 Change Option ❌ Change Option ❌ This was the mod system for BMS and PMS. Bass RGxxx ❌ ✅ Not Supported   A7 Not Used ~ Not Used ~ Not Used Bass RGBxx ❌ ✅ Not Supported   A8 Not Used ~ Not Used ~ Not Used Bass Wail ❌ ✅ Not Supported   A9 Not Used ~ Not Used ~ Not Used Guitar RxBxP ❌ ✅ Not Supported   AA Not Used ~ Not Used ~ Not Used Guitar RGxxP ❌ ✅ Not Supported   AB Not Used ~ Not Used ~ Not Used Guitar RGBxP ❌ ✅ Not Supported   AC Not Used ~ Not Used ~ Not Used Guitar xxxYP ❌ ✅ Not Supported   AD Not Used ~ Not Used ~ Not Used Guitar xxBYP ❌ ✅ Not Supported   AE Not Used ~ Not Used ~ Not Used Guitar xGxYP ❌ ✅ Not Supported   AF Not Used ~ Not Used ~ Not Used Guitar xGBYP ❌ ✅ Not Supported        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     B0 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   B1 Not Used ~ Not Used ~ Not Used HiHatClose Empty ❌ ✅ Not Supported   B2 Not Used ~ Not Used ~ Not Used Snare Empty ❌ ✅ Not Supported   B3 Not Used ~ Not Used ~ Not Used Bass Drum Empty ❌ ✅ Not Supported   B4 Not Used ~ Not Used ~ Not Used High Tom Empty ❌ ✅ Not Supported   B5 Not Used ~ Not Used ~ Not Used Low Tom Empty ❌ ✅ Not Supported   B6 Not Used ~ Not Used ~ Not Used Cymbal Empty ❌ ✅ Not Supported   B7 Not Used ~ Not Used ~ Not Used Floor Tom Empty ❌ ✅ Not Supported   B8 Not Used ~ Not Used ~ Not Used High Hat Open Empty ❌ ✅ Not Supported   B9 Not Used ~ Not Used ~ Not Used Ride Cymbal Empty ❌ ✅ Not Supported   BA Not Used ~ Not Used ~ Not Used Guitar Empty ❌ ✅ Not Supported   BB Not Used ~ Not Used ~ Not Used Bass Empty ❌ ✅ Not Supported   BC Not Used ~ Not Used ~ Not Used LeftCymbal Empty ❌ ✅ Not Supported   BD Not Used ~ Not Used ~ Not Used LeftPedal Empty ❌ ✅ Not Supported   BE Not Used ~ Not Used ~ Not Used LeftBassDrum Empty ❌ ✅ Not Supported   BF Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     C0 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   C1 Not Used ~ Not Used ~ Not Used Beat Bar Offset ❌ ✅ Not Supported   C2 Not Used ~ Not Used ~ Not Used Hide Beat/Measure bar ❌ ✅ Not Supported   C3 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   C4 Not Used ~ Not Used ~ Not Used Replacing BGA Layer 1 ❌ ✅ Not Supported   C5 Not Used ~ Not Used ~ Not Used Bass xxxYx ❌ ✅ Not Supported   C6 Not Used ~ Not Used ~ Not Used Bass xxBYx ❌ ✅ Not Supported   C7 Not Used ~ Not Used ~ Not Used Replacing BGA Layer 2 ❌ ✅ Not Supported   C8 Not Used ~ Not Used ~ Not Used Bass xGxYx ❌ ✅ Not Supported   C9 Not Used ~ Not Used ~ Not Used Bass xGBYx ❌ ✅ Not Supported   CA Not Used ~ Not Used ~ Not Used Bass RxxYx ❌ ✅ Not Supported   CB Not Used ~ Not Used ~ Not Used Bass RxBYx ❌ ✅ Not Supported   CC Not Used ~ Not Used ~ Not Used Bass RGxYx ❌ ✅ Not Supported   CD Not Used ~ Not Used ~ Not Used Bass RGBYx ❌ ✅ Not Supported   CE Not Used ~ Not Used ~ Not Used Bass xxxxP ❌ ✅ Not Supported   CF Not Used ~ Not Used ~ Not Used Bass xxBxP ❌ ✅ Not Supported        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     D0 Not Used ~ Not Used ~ Not Used Guitar RxxYP ❌ ✅ Not Supported   D1 P1 Key 1 LandMine 📝? P1 Left While LandMine 📝? Not Used Guitar RxBYP ❌ ✅ Not Supported   D2 P1 Key 2 LandMine 📝? P1 Left Yellow LandMine 📝? Not Used Guitar RGxYP ❌ ✅ Not Supported   D3 P1 Key 3 LandMine 📝? P1 Left Green LandMine 📝? Not Used Guitar RGBYP ❌ ✅ Not Supported   D4 P1 Key 4 LandMine 📝? P1 Left Blue LandMine 📝? Not Used Not Used ❌ ❌ Not Used   D5 P1 Key 5 LandMine 📝? P1 Red LandMine 📝? Not Used Replacing BGA Layer 3 ❌ ✅ Not Supported   D6 P1 Turn/Scratch LandMine 📝? Not Used ~ Not Used Replacing BGA Layer 4 ❌ ✅ Not Supported   D7 P1 FootPedal LandMine 📝? Not Used ~ Not Used Replacing BGA Layer 5 ❌ ✅ Not Supported   D8 P1 Key 6 LandMine 📝? Not Used ~ Not Used Replacing BGA Layer 6 ❌ ✅ Not Supported   D9 P1 Key 7 LandMine 📝? Not Used ~ Not Used Replacing BGA Layer 7 ❌ ✅ Not Supported   DA Not Used ~ Not Used ~ Not Used Bass xGxxP ❌ ✅ Not Supported   DB Not Used ~ Not Used ~ Not Used Bass xGBxP ❌ ✅ Not Supported   DC Not Used ~ Not Used ~ Not Used Bass RxxxP ❌ ✅ Not Supported   DD Not Used ~ Not Used ~ Not Used Bass RxBxP ❌ ✅ Not Supported   DE Not Used ~ Not Used ~ Not Used Bass RGxxP ❌ ✅ Not Supported   DF Not Used ~ Not Used ~ Not Used Bass RGBxP ❌ ✅ Not Supported        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     E0 Not Used ~ Not Used ~ Not Used Replacing BGA Layer 8 ❌ ✅ Not Supported   E1 P2 Key 1 LandMine 📝? Not Used ~ Not Used Bass xxxYP ❌ ✅ Not Supported   E2 P2 Key 2 LandMine 📝? P1 Right Blue LandMine 📝? Not Used Bass xxBYP ❌ ✅ Not Supported   E3 P2 Key 3 LandMine 📝? P1 Right Green LandMine 📝? Not Used Bass xGxYP ❌ ✅ Not Supported   E4 P2 Key 4 LandMine 📝? P1 Right Yellow LandMine 📝? Not Used Bass xGBYP ❌ ❌ Not Used   E5 P2 Key 5 LandMine 📝? P1 Right White LandMine 📝? Not Used Bass RxxYP ❌ ✅ Not Supported   E6 P2 Turn/Scratch LandMine 📝? Not Used ~ Not Used Bass RxBYP ❌ ✅ Not Supported   E7 P2 FootPedal LandMine 📝? Not Used ~ Not Used Bass RGxYP ❌ ✅ Not Supported   E8 P2 Key 6 LandMine 📝? Not Used ~ Not Used Bass RGBYP ❌ ✅ Not Supported   E9 P2 Key 7 LandMine 📝? Not Used ~ Not Used Not Used ❌ ❌ Not Used   EA Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   EB Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   EC Not Used ~ Not Used ~ Not Used Metronome ❌ ✅ Not Supported   ED Not Used ~ Not Used ~ Not Used Start Sound ❌ ✅ Not Supported   EE Not Used ~ Not Used ~ Not Used Bass RGxxP ❌ ✅ Not Supported   EF Not Used ~ Not Used ~ Not Used Bass RGBxP ❌ ✅ Not Supported        BMS / PMS / DTX Channel BMS Name OutFox BMS Support PMS Name OutFox PMS Support OutFox BMS/PMS Status Comments DTX Name OutFox DTX Support NX/Ver. K Support OutFox DTX Status Comments     F0 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F1 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F2 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F3 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F4 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F5 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F6 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F7 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F8 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   F9 Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   FA Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   FB Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   FC Not Used ~ Not Used ~ Not Used Metronome ❌ ✅ Not Supported   FD Not Used ~ Not Used ~ Not Used Start Sound ❌ ✅ Not Supported   FE Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used   FF Not Used ~ Not Used ~ Not Used Not Used ❌ ❌ Not Used    "},{"id":46,"href":"/dev/mods/Mods-10-Color+Gradient-Mods/","title":"Color modifiers","parent":"Guide to Modifiers","content":"Color modifiers affect the color of notes in some way. A lot of these follow similar behaviors to the Visibility modifiers, alongside with some extra functionalities.\n\u0026lt;color\u0026gt; can be 'ColorType_Red', 'ColorType_Blue' or 'ColorType_Green', and is how one chooses the color channel to affect.\nThese modifiers generally share usable values between 0 to 100%.\nStealthColor    Desc: Bring a color channel of the notes down to zero (This does not affect the actual glow color). Unlike normal Stealth, this doesn\u0026rsquo;t have column-specific variants.\nQuirks: N/A\nAvailable variants (modstring): stealthred, stealthr (NotITG alias), stealthblue, stealthb (NotITG alias), stealthgreen, stealthg (NotITG alias), diffuse|\u0026lt;r\u0026gt;|\u0026lt;g\u0026gt;|\u0026lt;b\u0026gt; (NotITG alias)\nPlayerOptions format: StealthColor(\u0026lt;color\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: StealthColor('ColorType_Red',1,1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 100% stealthred\nStealthColor video example\nSuddenColor    Desc: The color channel starts turned off, and turns on at the middle of the field.\nQuirks: N/A\nAvailable variants (modstring): suddenred, suddenr (NotITG alias), suddenblue, suddenb (NotITG name), suddengreen, suddeng (NotITG alias)\nPlayerOptions format: SuddenColor(\u0026lt;color\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: SuddenColor('ColorType_Green',1,1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 100% suddengreen\nSuddenColor video example\nAvailable sub modifiers:    SuddenOffsetColor    Desc: Offsets the point where the color channel turns on.\nAvailable variants (modstring): suddenoffsetred, suddenredoffset (NotITG name), suddenro (NotITG alias), suddenoffsetblue, suddenblueoffset (NotITG name), suddenbo (NotITG alias), suddenoffsetgreen, suddengreenoffset (NotITG name), suddengo (NotITG alias)\nPlayerOptions format: SuddenOffsetColor(\u0026lt;color\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nHiddenColor    Desc: The color channel starts turned on, and turns off at the middle of the field.\nQuirks: N/A\nAvailable variants (modstring): hiddenred, hiddenr (NotITG alias), hiddenblue, hiddenb (NotITG name), hiddengreen, hiddeng (NotITG alias)\nPlayerOptions format: HiddenColor(\u0026lt;color\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;) Example: HiddenColor('ColorType_Blue',1,1) Modstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt; Example: *1 100% hiddenblue\nHiddenColor video example\nAvailable sub modifiers:    HiddenOffsetColor    Desc: Offsets the point where the color channel turns on.\nAvailable variants (modstring): hiddenoffsetred, hiddenredoffset (NotITG name), hiddenro (NotITG alias), hiddenoffsetblue, hiddenblueoffset (NotITG name), hiddenbo (NotITG alias), hiddenoffsetgreen, hiddengreenoffset (NotITG name), hiddengo (NotITG alias)\nPlayerOptions format: HiddenOffsetColor(\u0026lt;color\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nBlinkColor    Desc: The color channel blinks on and off. Still considered as bad of a mod as normal Blink.\nQuirks: Same as Blink.\nAvailable variants (modstring): blinkred, blinkr (NotITG alias), blinkblue, blinkb (NotITG alias), blinkgreen, blinkg (NotITG alias)\nPlayerOptions format: BlinkColor(\u0026lt;color\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: BlinkColor('ColorType_Red',1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 100% blinkred\nBlinkColor video example\nStealthGlowColor    Desc: Allows one to modify the color used for the glow effect of the Visibility mods.\nQuirks: Unlike most modifiers (including NotITG\u0026rsquo;s implementation of this modifier), this starts at 100%, mimicking how glow\u0026rsquo;s red, green, and blue values start at 1.\nAvailable variants (modstring): stealthglowred, stealthgr (NotITG alias), stealthglowred\u0026lt;column\u0026gt;, stealthglowblue, stealthgb (NotITG alias), stealthglowblue\u0026lt;column\u0026gt;, stealthglowgreen, stealthgg (NotITG alias), stealthglowgreen\u0026lt;column\u0026gt;, stealthglow|\u0026lt;r\u0026gt;|\u0026lt;g\u0026gt;|\u0026lt;b\u0026gt; (NotITG alias), stealthglow\u0026lt;column\u0026gt;|\u0026lt;r\u0026gt;|\u0026lt;g\u0026gt;|\u0026lt;b\u0026gt; (NotITG alias)\nPlayerOptions format: StealthGlowColor(\u0026lt;color\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: StealthGlowColor('ColorType_Red',0, 1, true):StealthGlowColor('ColorType_Green',0, 1, true):Stealth(0.25, 1)\nColumn-specific format: StealthGlowColorCol(\u0026lt;color\u0026gt;, \u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: StealthGlowColorCol('ColorType_Green',1,0,1,true):StealthGlowColorCol('ColorType_Blue',1,0,1,true):StealthGlowColorCol('ColorType_Red',2,0,1,true):StealthGlowColorCol('ColorType_Blue',2,0,1,true):StealthGlowColorCol('ColorType_Red',3,0,1,true):StealthGlowColorCol('ColorType_Green',3,0,1,true):StealthGlowColorCol('ColorType_Blue',4,0,1,true):Stealth(0.25)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *1 0% stealthglowred, *1 0% stealthglowgreen, *1 25% stealth *1 0% stealthglowgreen1, *1 0% stealthglowblue1, *1 0% stealthglowred2, *1 0% stealthglowblue2, *1 0% stealthglowred3, *1 0% stealthglowgreen3, *1 0% stealthglowblue4, 25% stealth\nStealthGlowColor video example\nGradient Modifiers    Gradient modifiers allow for arbitrary color pathing, and are not compatible with the color modifiers.\nActivating these will turn off the color modifiers above in terms of rendering.\nIn SM5, these are accessed through PlayerOptions like most modifiers (And have the same chaining mechanics as the other functions). In NotITG, this is accessed through the Player instead.\nThere are three types available (It\u0026rsquo;ll be denoted as \u0026lt;type\u0026gt; in the function listing below):\n \u0026ldquo;Diffuse\u0026rdquo; (Affects the diffuse of the notes \u0026amp; holds), known as \u0026ldquo;Arrow\u0026rdquo; in NotITG. \u0026ldquo;NotePath\u0026rdquo; (Affects the color of the NotePath), known as \u0026ldquo;Path\u0026rdquo; in NotITG. \u0026ldquo;StealthGlow\u0026rdquo; (Affects the color used for Stealth and other Visibility modifiers), known as \u0026ldquo;Stealth\u0026rdquo; in NotITG. Will not visibly work on noteskin elements that are wrapped in ActorFrames.  \u0026lt;type\u0026gt;NumGradientPoints    Desc: Sets how many points the gradient has for the column. Resets the path to all white at the start.\n 0 points means the gradient is turned off (color = white) 1 point means the whole path is given a single color 2 or more points allows for more arbitrary path coloring.  PlayerOptions format: \u0026lt;type\u0026gt;NumGradientPoints(\u0026lt;column\u0026gt;, \u0026lt;point count\u0026gt;)\nNotITG format: SetNum\u0026lt;type\u0026gt;GradientPoints(\u0026lt;column\u0026gt;, \u0026lt;point count\u0026gt;)\n\u0026lt;type\u0026gt;GradientPoint    Desc: Set the position for a given point in the column\u0026rsquo;s gradient. The magnitude given translates into multiples of ARROW_SIZE (commonly 64 pixels).\nPlayerOptions format: \u0026lt;type\u0026gt;GradientPoint(\u0026lt;column\u0026gt;, \u0026lt;point\u0026gt;, \u0026lt;position\u0026gt;)\nNotITG format: Set\u0026lt;type\u0026gt;GradientPoint(\u0026lt;point\u0026gt;, \u0026lt;column\u0026gt;, \u0026lt;position\u0026gt;)\n\u0026lt;type\u0026gt;GradientColor    Desc: Set the color for a given point in the column\u0026rsquo;s gradient.\nPlayerOptions format: \u0026lt;type\u0026gt;GradientColor(\u0026lt;column\u0026gt;, \u0026lt;point\u0026gt;, \u0026lt;red\u0026gt;, \u0026lt;green\u0026gt;, \u0026lt;blue\u0026gt;, \u0026lt;alpha\u0026gt;)\nNotITG format: Set\u0026lt;type\u0026gt;GradientColor(\u0026lt;point\u0026gt;, \u0026lt;column\u0026gt;, \u0026lt;red\u0026gt;, \u0026lt;green\u0026gt;, \u0026lt;blue\u0026gt;, \u0026lt;alpha\u0026gt;)\nExample code (SM5):\nlocal color = { -- c1, c2, c3, c4, p2 {{1,0,0,1}, {1,1,1,1}, {0,0,1,1}, {0,1,0,1}, {0,1,1,1}, {0,0,0,1}, {1,1,0,1}, {1,0,1,1}},--point1 {{0,1,0,1}, {1,0,0,1}, {1,1,1,1}, {0,0,1,1}, {1,0,1,1}, {0,1,1,1}, {0,0,0,1}, {1,1,0,1}},--point2 {{0,0,1,1}, {0,1,0,1}, {1,0,0,1}, {1,1,1,1}, {1,1,0,1}, {1,0,1,1}, {0,1,1,1}, {0,0,0,1}},--point3 {{1,1,1,0}, {0,0,1,0}, {0,1,0,0}, {1,0,0,0}, {0,0,0,1}, {1,1,0,1}, {1,0,1,1}, {0,1,1,1}},--point4 } for pn = 1,2 do -- Do this for both players local a = po[pn] if a then for col = 1,4 do-- Do this for four columns. a:StealthGlowNumGradientPoints(col,4) -- Each column will have 4 points. -- Each point is 1 ARROW_SIZE below the previous point. a:StealthGlowGradientPoint(col,1,1) a:StealthGlowGradientPoint(col,2,2) a:StealthGlowGradientPoint(col,3,3) a:StealthGlowGradientPoint(col,4,4) -- Each column will have their own color pattern, as defined in the color table. local pla = pn == 2 and col+4 or col a:StealthGlowGradientColor(col,1,color[1][pla][1],color[1][pla][2],color[1][pla][3],color[1][pla][4]) a:StealthGlowGradientColor(col,2,color[2][pla][1],color[2][pla][2],color[2][pla][3],color[2][pla][4]) a:StealthGlowGradientColor(col,3,color[3][pla][1],color[3][pla][2],color[3][pla][3],color[3][pla][4]) a:StealthGlowGradientColor(col,4,color[4][pla][1],color[4][pla][2],color[4][pla][3],color[4][pla][4]) end a:Stealth(0.25) -- 25% Stealth, use currently set approach rate (default = 1) end end Example code (NotITG):\nlocal color = { -- c1, c2, c3, c4, p2 {{1,0,0,1}, {1,1,1,1}, {0,0,1,1}, {0,1,0,1}, {0,1,1,1}, {0,0,0,1}, {1,1,0,1}, {1,0,1,1}},--point1 {{0,1,0,1}, {1,0,0,1}, {1,1,1,1}, {0,0,1,1}, {1,0,1,1}, {0,1,1,1}, {0,0,0,1}, {1,1,0,1}},--point2 {{0,0,1,1}, {0,1,0,1}, {1,0,0,1}, {1,1,1,1}, {1,1,0,1}, {1,0,1,1}, {0,1,1,1}, {0,0,0,1}},--point3 {{1,1,1,0}, {0,0,1,0}, {0,1,0,0}, {1,0,0,0}, {0,0,0,1}, {1,1,0,1}, {1,0,1,1}, {0,1,1,1}},--point4 } for pn = 1,2 do -- Do this for both players local a = SCREENMAN:GetTopScreen():GetChild(\u0026#39;PlayerP\u0026#39;..pn) if a then for col = 0,3 do-- Do this for four columns. a:SetNumStealthGradientPoints(col,4) -- Each column will have 4 points. -- Each point is 1 ARROW_SIZE below the previous point. a:SetStealthGradientPoint(0,col,1) a:SetStealthGradientPoint(1,col,2) a:SetStealthGradientPoint(2,col,3) a:SetStealthGradientPoint(3,col,4) -- Each column will have their own color pattern, as defined in the color table. local pla = pn == 2 and col+5 or col+1 a:SetStealthGradientColor(0,col,color[1][pla][1],color[1][pla][2],color[1][pla][3],color[1][pla][4]) a:SetStealthGradientColor(1,col,color[2][pla][1],color[2][pla][2],color[2][pla][3],color[2][pla][4]) a:SetStealthGradientColor(2,col,color[3][pla][1],color[3][pla][2],color[3][pla][3],color[3][pla][4]) a:SetStealthGradientColor(3,col,color[4][pla][1],color[4][pla][2],color[4][pla][3],color[4][pla][4]) end GAMESTATE:ApplyModifiers(\u0026#39;25% Stealth\u0026#39;,pn) -- 25% Stealth, use default approach rate (default = 1) end end Video Example (Shows colors set for Player 2):\nGradient video example\n"},{"id":47,"href":"/dev/effects/","title":"Effect Simfiles","parent":"Developers and Creators","content":"Normal gameplay is as follows: Notes move up or down towards the target on a usually static background, and the player hits the notes when they reach the target. Simple.\nEffect simfiles change this up, which can result in interesting gameplay results.\nThere are multiple \u0026lsquo;catagories\u0026rsquo; of effect files:\n  \u0026ldquo;Gimmick\u0026rdquo; charts\n While not really an \u0026lsquo;effect\u0026rsquo;, per-say, gimmick charts can change up how one reads a chart. A single BPM or stop doesn\u0026rsquo;t really count as a \u0026lsquo;gimmick\u0026rsquo;. Done with SM or SSC chart segments.    \u0026ldquo;BGA\u0026rdquo; charts\n Uses BGChanges to load lua or image files to alter the Background of a song. Can be used to add in visual effects as needed.    \u0026ldquo;Foreground\u0026rdquo; charts\n Uses FGChanges to load lua files that can alter or obstruct the player\u0026rsquo;s view of the notefield Requires one to keep track of notes and the notefield itself.    \u0026ldquo;Modifier\u0026rdquo; charts (or \u0026ldquo;modcharts\u0026rdquo;/\u0026ldquo;modfiles\u0026rdquo;)\n Usually uses FGChanges or BGChanges to load lua files that can script modifiers to run at given points of the song. Requires one to use various information given, such as column order, note color or direction to figure out what note to hit and when to hit it. Older mod charts tend to use course files or the #ATTACKS field in simfiles to apply scripted modifiers. Newer mod charts tend to hide the UI, which allows for more screen-estate when utilizing modifiers.    These are not mutually exclusive categories. One simfile could be a combination of \u0026ldquo;Foreground\u0026rdquo; and \u0026ldquo;Modifier\u0026rdquo;, while another could be a combination of \u0026ldquo;Gimmick\u0026rdquo; and \u0026ldquo;Foreground\u0026rdquo;.\n"},{"id":48,"href":"/user-guide/config/","title":"Features \u0026 Config","parent":"User Guide","content":""},{"id":49,"href":"/user-guide/setup/install/","title":"Installation","parent":"Setup","content":"System requirements    Project OutFox has builds for Windows, macOS, and Linux. We also have specific builds for ARM-based Linux devices and Apple M1-based computers. It should run on just about any computer from the mid-2000s onward, depending on the operating system and hardware specifications. We have had alphas running on CPUs as old as the Pentium E2180.\nThe Windows build of Project OutFox requires Windows 7 or later. Windows XP builds are available for selected releases, which require Service Pack 3.\nParts of the game are so well-optimised now that they\u0026rsquo;re running too fast, and the rest of the game needs to catch up. We will have a proper fix later, but increasing the amount of background activity (i.e. having other programs running in the background, etc.) is a temporary solution.\nHow to install Project OutFox    Download the installer or package for your respective operating system on the Project OutFox website.\nmacOS  Open the DMG file and drag the game to your Applications directory.\nUntil we produce a digitally-signed build, you will have to change macOS security settings in order for Project OutFox to operate correctly. macOS prevents access to external files by unsigned apps unless given manual permission by the user.\nTo do this, open Terminal and run the following command: xattr -dr com.apple.quarantine /path/to/outfox, replacing /path/to/outfox with the path to the directory containing the OutFox executable (manually typing it out, or dragging the folder containing the game executable directly onto the window to fill it automatically). If no errors show up after pressing enter, then you\u0026rsquo;re ready to start the game.\nOn older builds, macOS Catalina also generated a message stating that the game was requesting permission to receive keystrokes from any application. This was a side effect of previous code that has since been removed.\n Linux  On Linux, we only provide pre-compiled binaries at this time. Extract the tarball, and run ./stepmania in the directory.\nIf you see an error mentioning that it could not find libOpenGL.so.0:, you need to install libglvnd and/or libopengl0 based on your distro. On Debian/Ubuntu-based distros, run sudo apt install libopengl0. On Fedora, the package is known as libglvnd-opengl (sudo dnf install libglvnd-opengl).\ninstall libopengl0 from your distribution\u0026rsquo;s package manager.\n Windows  Windows builds of Project OutFox use an installer; follow the instructions, and launch the game using the provided shortcuts.\n It is recommended that you do not install it to the Program Files directory, as this is known to cause problems. The installer offers optional components, such as the noteskins that were included with StepMania 5.0.12 and 5.1, and \u0026ldquo;Toasties\u0026rdquo; - animations that can trigger on combo milestones in-game. By default, the game is installed in \u0026ldquo;Portable Mode\u0026rdquo;; save data is stored in the installation directory. If you disable portable mode, your save data will be stored in your user directory under %APPDATA%/StepMania 5.3.  If your log file (Installation directory/Logs) shows WDDM1.0 or WDDM1.1 at the end of the graphics card name (i.e. \u0026ldquo;Intel(R) 82945G Express Chipset Family (Microsoft Corporation - WDDM 1.0)\u0026quot;) or the log shows \u0026ldquo;Microsoft GDI\u0026rdquo; as the renderer, then you are running the OpenGL-crippled \u0026ldquo;Windows\u0026rdquo; driver that is downloaded on a fresh install. Project OutFox will not work on these drivers, as we do not support DirectX anymore (the old D3D renderer that 5.0.12/5.1 has) There is a list of drivers at here but for some of these cards, you need to keep your Windows 7 install disc handy!\n  Next steps    Once Project OutFox is installed, you can move on to setting the game up.\n"},{"id":50,"href":"/user-guide/setup/key_shortcuts/","title":"Keyboard Shortcuts","parent":"Setup","content":"Project OutFox has quite a few keyboard shortcuts to make certain tasks easier.\nGlobal Shortcuts    These shortcuts work everywhere in OutFox unless otherwise specified (or used in another section).\nF1: Insert Coin\nF2: Reload metrics, textures, noteskins \u0026amp; code detector cache (Does nothing in edit mode)\nCtrl+F2: Reload theme scripts (Does nothing in edit mode)\nShift+F2: Reload metrics, noteskins \u0026amp; code detector cache (Does nothing in edit mode)\nCtrl+Shift+F2: Reload overlay screens \u0026amp; metrics (Does nothing in edit mode)\nF3: Show debug menu Scroll Lock: Operator Button (Go directly to the theme\u0026rsquo;s operator menu screen. Will not work if the current screen doesn\u0026rsquo;t allow the operator menu button)\n~ (tilde): Broadcasts \u0026ldquo;ToggleConsoleDisplay\u0026rdquo; globally\nPrintScreen: Take a screenshot\nShift+PrintScreen: Take a high quality screenshot (If HighRes Screenshots are off by default)\nShift+PrintScreen: Take a low quality screenshot (If HighRes Screenshots are on by default)\nAlt+Enter: Toggle fullscreen\n` (accent): Slow the game\u0026rsquo;s tweens down Tab: Speed the game\u0026rsquo;s tweens up\nPauseBreak: Toggle \u0026ldquo;Mute Actions\u0026rdquo;\n Editor Shortcuts    These shortcuts only work in the edit screens. All Edit Modes    Up: Scroll up one \u0026lsquo;line\u0026rsquo; (If 4ths are selected, you go up one 4th, if 8ths are selected, you go up one 8th, etc.)\nDown: Scroll down one \u0026lsquo;line\u0026rsquo;\nF1: Show the help menu\n; (semicolon) / PageUp: Scroll up by 4 beats\n' (apostrophe / single quote) / PageDown: Scroll down by 4 beats\nCtrl+; (semicolon) / Ctrl+PageUp: Scroll up by the number of beats in a measure\nCtrl+' (apostrophe / single quote) / Ctrl+PageDown: Scroll down by the number of beats in a measure\nHome: Scroll up to beat 0\nEnd: Scroll down to the last beat of the chart\n. (period): Scroll down to next note in the chart\n, (comma): Scroll up to previous note in the chart\nCtrl+. (period): Scroll down to next chosen chart segment type in the chart\nCtrl+, (comma): Scroll up to previous chosen chart segment type in the chart\nShift+Up / Shift+Down: Create a section from where shift was held\nSpace: Set the start and stop points of a selection\np: Play the selected section of the chart (plays from start if no selection)\nCtrl+p: Play the chart from the start\nShift+p: Play the chart from the current beat\nEsc / Start / Enter / Back: Open the edit menu (When previewing the chart)\nEsc / Start / Enter / Back: Exit the play mode (When practicing / recording / playing the chart)\nPactice Mode    Up: Scroll up one measure (Overrides all other modes)\nDown: Scroll down one measure (Overrides all other modes)\nLeft: Lower the scroll speed\nRight: Raise the scroll speed\nCourse / Mods Edit Mode    Left: Go to the higher snap (8th to 4th, etc.)\nRight: Go to the lower snap (4th to 8th, etc.)\nFull Edit Mode    F4: Show timing menu\nF5: Move to the previous chart for the Song\nF6: Move to the next chart for the Song\nF7: Lower BPM at current beat\nF8: Raise BPM at current beat\nF9: Decrease stop length at current beat\nShift+F9: Decrease delay length at current beat\nF10: Increase stop length at current beat\nShift+F10: Increase delay length at current beat\nF11: Decrease beat 0 offset\nF12: Increase beat 0 offset\n[: Decreases the music sample\u0026rsquo;s starting point\n]: Increases the music sample\u0026rsquo;s starting point\nShift+[: Decreases the music sample\u0026rsquo;s length\nShift+]: Increases the music sample\u0026rsquo;s length\nl: Play the sample music for the song.\nb: Open the Background Change menu for layer 1\nShift+b: Open the Background Change menu for layer 2\nCtrl+Insert: Shifts all timing changes down\nCtrl+Delete: Deletes timing segments and shifts the later ones up to the beginning of the deleted areas\nq: Decrease the amount of time a column has to be held to create a hold in record mode\nw: Increase the amount of time a column has to be held to create a hold in record mode\ne: Reset the amount of time a column has to be held to create a hold in record mode\nr: Turn off the ability to create a hold in record mode\n0-9: add notes to columns 1-10 (holding while pressing Up / Down creates a hold)\nAlt+0-9: add notes to columns 11-20 (holding while pressing Up / Down creates a hold)\nShift while creating a hold: Create a roll\nn: Switch to the previous note type\nm: Switch to the next note type\nCtrl+n: Switch to the previous segment type\nCtrl+m: Switch to the next segment type\nCtrl+Up: Increase the scroll speed\nCtrl+Down: Decrease the scroll speed\nLeft: Go to the higher snap (8th to 4th, etc.)\nRight: Go to the lower snap (4th to 8th, etc.)\nEnter (when not in a menu): Open the area menu\na: Open the alter menu\nAlt+b: Bake in a random video from the song group\nCtrl+b: Bake in a random video from the song\u0026rsquo;s group or genre\nCtrl+r: Go into record mode for the selected area\nInsert / \\(backslash): Inserts a beat and shifts everything after down\nDelete: Deletes a note/selection, and shifts the later notes up to where the deleted note/start of deleted section was\nHolding Alt when adjusting a value: Use a smaller adjust amount\nCtrl+s: Save (Windows, Linux, Pi, etc.)\nMeta+s: Save (Mac OS)\nu: Undo the last action\n/ (slash): switch which player is being charted for in a couples chart\nt: Switch between chart timing and song timing\nAlt (during Record mode): Remove notes\nShift (during Record mode): Add rolls\np (During Record Paused mode): Play selection\nr (During Record Paused mode): Record from the current beat\nCtrl+r (During Record Paused mode): Record the selection\n Gameplay Shortcuts    These shortcuts only work in gameplay screens.\nF4: Revert sync changes\nF6: Autosync\nF7: Toggle Assist Tick\nShift+F7: Toggle Metronome\nF8: AutoPlay (+Alt = hide autoplay text)\nShift+F8: AutoPlayCPU (+Alt = hide autoplay text)\nF9: Decrease song BPM\nF10: Increase song BPM\nF11: Decrease global offset\nShift+F11: Decrease song offset\nF12: Increase global offset\nShift+F12: Increase song offset\n Music Wheel Shortcuts    These shortcuts only work in the music wheel screen.\nF9: Toggle between actual titles and transliterated titles.\nShift+Ctrl+r: reload the currently selected song\nCtrl+a-z: Sort the songs by letter and go to the group of all songs that start with that letter.\nCtrl+Backspace: Delete the song from the system. (Actually deletes from the drive!)\n"},{"id":51,"href":"/dev/mode-support/ksf-support/","title":"KSF","parent":"Mode support","content":"Project OutFox contains a parser for the KSF chart format, which is used for Kick It Up and \u0026lsquo;Pump it Up\u0026rsquo;-style charts. This has been supported as early as StepMania 3.9, so everything listed here is what OutFox supports. At this point, most everyone has moved away from the KSF format in favor of SM or SSC. Like SM and SSC, sections follow this format: #SECTION:DATA;, which means #, : and ; shouldn\u0026rsquo;t be used in the data segment.\nFile Naming    Most KSF files have the difficulty and chart type as its' file name. The following tables show what names translate to which difficulty, default rating and chart type\nDifficulty       File Name Chart Rating StepMania 5.1 and older Project OutFox alpha 4.9.9     another 25 Edit D6   wild / wd / hardcore 20 Challenge D5   crazy+ / cz+ 20 Challenge D5   crazy / cz / crazydouble 14 Hard D4   nightmare / nm 14 Hard D4   hard / hd / double 8 Medium D3   freestyle / fs 8 Medium D3   easy / ez / normal 4 Easy D2   Beginner / practice 4 Beginner D1    If not specified, it gets set to Hard/D4 and is given a rating of 10.\nChart Type       File Name Resulting Steps Type     halfdouble / half-double / h_double / hdb halfdouble   double / db double   freestyle / fs double   nm double   _1 single   _2 couple     Sections    TITLE    This gives both the song name and artist. There are three acceptable formats for this section:\n  song name This just gives a song name only.     artist name - song name This gives both a song name and artist name, separated by a -     artist name - song name - difficulty This gives both a song name, artist name and difficulty, separated by a -. In this case, the difficulty is ignored, since it\u0026rsquo;s read from the file name instead.   Example:\n#TITLE:L.F.O; With artist \u0026amp; title:\n#TITLE:aran - L.F.O;  TICKCOUNT    Sets the starting tick count for the file. This specifies how many lines of notes is needed to pass one beat.\nFor example: a tick count of 4 means 4 lines of notes are needed for a whole beat, allowing for 16ths.\nExample:\n#TICKCOUNT:4;  BPM    This defines the starting BPM.\nExample:\n#BPM:135.01;  BPM2 / BPM3    Kick It Up uses these to define the BPMs to change to. You can have up to two BPM changes.\nExample:\n#BPM2:164; #BPM3:174;  BUNKI / BUNKI2    Kick It Up uses these to handle the positioning of BPM changes. You can have up to two BPM changes.\nThis is specified in centiseconds in SM.\nExample:\n#BUNKI:2000; #BUNKI2:6500;  DIFFICULTY    Sets the rating of the chart. Otherwise, values from the Difficulty secion above are used.\nExample:\n#DIFFICULTY:7;  STARTTIME    Sets the beat 0 offset of the chart. SM interprets this in centiseconds.\nExample:\n#STARTTIME:829;  STARTTIME2 / STARTTIME3    Kick It Up uses these to help ensure more accurate BPM changes. STARTTIME3 is ignored in SM.\nExample:\n#STARTTIME2:9; #STARTTIME3:0;  PLAYER    From Aldo_MX\u0026rsquo;s fork of \u0026ldquo;Stepmania Plus REDUX\u0026rdquo;\nIf \u0026ldquo;double\u0026rdquo; is found, the file is marked as a doubles chart.\nExample:\n#PLAYER:DOUBLE; or\n#PLAYER:SINGLE;  MUSICINTRO / INTRO    From Aldo_MX\u0026rsquo;s fork of \u0026ldquo;Stepmania Plus REDUX\u0026rdquo;\nSets the start point of the music sample. It\u0026rsquo;s parsed in HH:MM:SS format\nExample:\n#MUSICINTRO:1:20;  TITLEFILE    From Aldo_MX\u0026rsquo;s fork of \u0026ldquo;Stepmania Plus REDUX\u0026rdquo;\nSets the background location of the song.\nExample:\n#TITLEFILE:CoolTitle.png;  DISCFILE    From Aldo_MX\u0026rsquo;s fork of \u0026ldquo;Stepmania Plus REDUX\u0026rdquo;\nSets the banner location of the song.\nExample:\n#DISCFILE:FunnyDisc.png;  SONGFILE    From Aldo_MX\u0026rsquo;s fork of \u0026ldquo;Stepmania Plus REDUX\u0026rdquo;\nSets the file name of the song\u0026rsquo;s audio.\nIf not specified, the game looks for an audio file named \u0026ldquo;song\u0026rdquo; in the same folder as the KSF.\nExample:\n#SONGFILE:SweetTunes.mp3;  #STEP:    This is the notedata of the file.\n Notedata specs    Each row of notes is 13 characters long, with all 2s marking the end of the chart.\nIf any holds are unfinished at that point, they automatically capped off at the end of the chart.\nFor half-doubles, the first two columns are always 0.\nNote types       Character Note Type Quirks     0 empty N/A   1 Tap Note N/A   4 Hold Note The hold finishes upon the first non-4 character in the column.   M / m Mines N/A   F / f Fake Note N/A   L / l Lift Note N/A    Example:\n#STEP: 1000010000000 0010000400000 0000000400000 0000000400000 2222222222222 Segment types    Direct Move 0.5 had segment definitions to allow for more extendable charting.\n|Tn|    Sets the tick count at the current beat.\nExample: |T512| sets the tick count to 512.\n |Bn|    Sets the BPM at the current beat.\nExample: |B128.5| sets the BPM to 128.5.\n |En|    Sets a delay segment at the given beat for n beats\nExample: |E12| Makes a 12 beat delay segment.\n |Dn|    Sets a delay segment at the given beat for n miliseconds\nExample: |D1000| Makes a 1000 milisecond (1 second) delay segment.\n |Mn| / |Cn|    Sets the combo multiplier at the given beat\nExample: |M2| sets the combo multiplier to 2.\n |Xn|    Sets the scroll segment at the current beat.\nExample: |X3| sets the scroll to 3x.\n"},{"id":52,"href":"/dev/mode-support/sm-support/","title":"SM","parent":"Mode support","content":"Project OutFox contains a parser for the SM chart format, which has existed as early as StepMania 3.9, and is what most StepMania-based engines support as a base format \u0026amp; simfile cache format. With SM5, this has been succeeded by the SSC format, but for completeness, the following page contains details about what the SM format supports and used to support.\nEvery section follows this format: #SECTION:DATA;, which means #, ; and : shouldn\u0026rsquo;t be used in the data section.\nTo note, some sections parsed are from SSC, so the current implementation of SM is both SM and a bit of SSC.\nSections    TITLE    This gives the title of the song.\nIf not defined, the game falls back on the simfile directory name.\nExample:\n#TITLE:Blow My Mind;  SUBTITLE    This gives the subtitle of the song. It\u0026rsquo;s often shown underneath the song title.\nIf ``TITLE` wasn\u0026rsquo;t defined, the game falls back on the simfile directory name for this as well.\nExample:\n#SUBTITLE:Tournament Stage 2;  ARTIST    This gives the artist of the song.\nIf not defined, the game shows \u0026ldquo;Unknown artist\u0026rdquo; instead.\nExample:\n#ARTIST:かめりあ;  TITLETRANSLIT    This is the transliterated song title that usually shows when the ShowNativeLanguage preference is on. Some music wheels use this if the font used doesn\u0026rsquo;t have the characters needed for the main title. If empty, the TITLE section is used in all cases.\nExample:\n#TITLETRANSLIT:Ame agari no uta;  SUBTITLETRANSLIT    This is the transliterated subtitle that usually shows when the ShowNativeLanguage preference is on. Some music wheels use this if the font used doesn\u0026rsquo;t have the characters needed for the main title. If empty, the SUBTITLE section is used in all cases.\nExample:\n#SUBTITLETRANSLIT:Touhou Koumakyou;  ARTISTTRANSLIT    This is the transliterated song artist that usually shows when the ShowNativeLanguage preference is on. Some music wheels use this if the font used doesn\u0026rsquo;t have the characters needed for the main title. If empty, the ARTIST section is used in all cases.\nExample:\n#ARTISTTRANSLIT:Camellia;  GENRE    This is the genre of the song. Some examples are Rock, Dubstep, and Classical. Anythng can be put here as a genre.\nExample:\n#GENRE:Techno Pop;  CREDIT    This field is for crediting someone.\nExample:\n#CREDIT:Narumi;  BANNER    This defines the file to use for the song\u0026rsquo;s banner. It\u0026rsquo;s usually in the same folder as the simfile. This is a relative path.\nIf not defined, the game looks for image files that contain \u0026ldquo;banner\u0026rdquo; or end with \u0026ldquo;bn\u0026rdquo;.\nExample:\n#BANNER:crazy-bn.png;  BACKGROUND    This defines the file to use for the song\u0026rsquo;s background. It\u0026rsquo;s usually in the same folder as the simfile. This is a relative path.\nIf not defined, the game looks for image files that contain \u0026ldquo;background\u0026rdquo; or end with \u0026ldquo;bg\u0026rdquo;.\nExample:\n#BACKGROUND:awesome-image.png;  LYRICSPATH    This defines the file to use for the song\u0026rsquo;s lyrics. This is a relative path.\nExample:\n#LYRICSFILE:speed.lrc;  CDTITLE    This defines the file to use for the song\u0026rsquo;s CD Title. Usually the simfile author uses this to put their author image. This is a relative path.\nExample:\n#CDTITLE:nonsense.png;  MUSIC    This defines the file to use for the song\u0026rsquo;s music. This is usualy in the same folder as the simfile. This is a relative path.\nExample:\n#MUSIC:dondadon.ogg;  INSTRUMENTTRACK    Specifies a song file to use for an instrument track. This is a relative path. Valid intrument tracks are: \u0026ldquo;Guitar\u0026rdquo;, \u0026ldquo;Rhythm\u0026rdquo;, \u0026ldquo;Bass\u0026rdquo;, \u0026ldquo;Vocal\u0026rdquo;, \u0026ldquo;Drum1\u0026rdquo;, \u0026ldquo;Drum2\u0026rdquo;, \u0026ldquo;Drum3\u0026rdquo; and \u0026ldquo;Drum4\u0026rdquo;\nExample:\n#INSTRUMENTTRACK:track1.ogg=Guitar, track2.ogg=Drum1;  SAMPLESTART    Defines the starting point of the same taken from the main audio file, in seconds.\nExample:\n#SAMPLESTART:20.421;  SAMPLELENGTH    Defines how long the song\u0026rsquo;s sample plays for, in seconds.\nExample:\n#SAMPLELENGTH:5.000;  DISPLAYBPM    Sets the BPM to be shown in the music wheel.\n* means it\u0026rsquo;s random, and constantly changing characters are shown for BPM.\nIf not set, the song\u0026rsquo;s min and max BPM are shown instead.\nExample:\n#DISPLAYBPM:240; or\n#DISPLAYBPM:*;  SELECTABLE    Sets whether the song is shown in the music wheel or not. This is ignored if the HiddenSongs preference is turned off.\n\u0026ldquo;YES\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;ES\u0026rdquo;(3.9+) and \u0026ldquo;OMES\u0026rdquo;(3.9+) are the same, while \u0026ldquo;NO\u0026rdquo; or \u0026ldquo;0\u0026rdquo; set it to unselectable.\nExample:\n#SELECTABLE:NO;  BGCHANGES / BGCHANGES2 / BGCHANGES3 / ANIMATIONS    Specifies what the background of a song changes to throughout the chart. This allows lua files to be loaded.\nBGCHANGES with numbers specifies what layer it shows up on. (BGCHANGES2 = Layer 2)\nBGCHANGE format: beat=file_or_folder=update_rate=crossfade=stretchrewind=stretchnoloop=Effect=File2=Transition=Color1=Color2\n beat: The beat this BGCHANGE occurs on. Can be negative to start before the first beat. file_or_folder: The relative path to the file to use for the BGCHANGE. Lua files are allowed. If a folder is given, it looks for \u0026ldquo;default.lua\u0026rdquo;. update_rate: The update rate of the BGCHANGE. crossfade: set to 1 if using a crossfade. Overriden by Effect. stretchrewind: set to 1 if using stretchrewind. Overriden by Effect. stretchnoloop: set to 1 if using stretchnoloop. Overriden by Effect. Effect: What BackgroundEffect to use. File2: The second file to load for this BGCHANGE. Transition: How the background transitions to this. Color1/Color2: Formatted as red^green^blue^alpha, with the values being from 1 to 0, Passed to the BackgroundEffect with the LuaThreadVaraible \u0026ldquo;Color1\u0026rdquo;/\u0026ldquo;Color2\u0026rdquo; in web hexadecimal format as a string. Alpha is optional.  Often, a last entry with \u0026ldquo;-nosongbg-\u0026rdquo; as the file is placed so the song\u0026rsquo;s starting background doesn\u0026rsquo;t show up at the end.\nExample:\n#BGCHANGES:0.000=blossom1.jpg=1.000=1=0=1===CrossFade==, 52.000=blossom2.jpg=1.000=0=0=1=====, 164.000=blossom1.jpg=1.000=0=0=1=====, 229.000=blossom3.jpg=1.000=0=0=1=====, 302.000=blossom1.jpg=1.000=0=0=1=====, 99999=-nosongbg-=1.000=0=0=0 // don't automatically add -songbackground- ; The second line explained: 52.000=blossom2.jpg=1.000=0=0=1=====\n Beat = 52 File = \u0026ldquo;blossom2.jpg\u0026rdquo; Update rate = 1 Crossfade: off stretchrewind: off stretchnoloop: on Effect: none (Does not override the above three) File2: none (Nothing loads in the second slot) Transition: none (The first line uses \u0026ldquo;CrossFade\u0026rdquo;) Color1: none Color2: none   FGCHANGES    Like BGCHANGES, FGCHANGES follow the same format, but happen in a Foregound layer, above the players and most everything else. Commonly used in gimmick files to script modifiers or other visual aspects.\nExample:\n#FGCHANGES:0.000=lua=1.000=0=0=1=====;  KEYSOUNDS    Specifies what files to load as keysounds. Uses relative paths.\nExample:\n#KEYSOUNDS:pf_24_c#+.ogg,ba_op1.ogg,dr_hho.ogg,dr_rs.ogg,dr_bd8.ogg,dr_cs8.ogg,sq_a.ogg,pc_c.ogg,pf_op11.ogg;  OFFSET    Defines when beat 0 starts, in seconds. Charts made for the ITG meta tend to have an extra positive 9 ms added.\nExample:\n#OFFSET:-0.611000;  STOPS / FREEZES    Defines where stops in the song happen. The first parameter is the beat, and the second parameter is how long the stop is, in seconds.\nExample:\n#STOPS:46.250000=0.030000, 46.500000=0.030000, 46.750000=0.030000;  BPMS    Defines the BPMs the song has. A song must have at least one BPM at beat 0.\nThe first parameter is the beat, and the second parameter is the actual BPM.\nExample:\n#BPMS:0.000=140.250, 48.000=93.500, 48.333=62.333;  TIMESIGNATURES    Defines the time signatures of the song. Most songs default to 4/4 as their starting signature. There are three parameters: beat, numerator and denominator. The last two parameters must be greater than or equal to 1.\nCurrently, this only affects the measure lines.\nExample:\n#TIMESIGNATURES:0.000=4=4;  ATTACKS    These are course-style scripted modifiers written into the simfile. Unlike most sections, this is seconds-based instead of beat-based, to allow for modifiers during stops.\nThe format of an attacks entry is this: TIME=seconds:END/LEN=endtime/lengthtime:MODS=modstring\nInternally, entries that use END are converted into LEN.\nExample:\n#ATTACKS:TIME=1.618:END=3.166:MODS=*32 Invert, *32 No Flip :TIME=2.004:END=3.166:MODS=*32 No Invert, *32 No Flip :TIME=2.392:LEN=0.1:MODS=*64 30% Mini :TIME=2.489:LEN=0.1:MODS=*64 60% Mini;  DELAYS    Specifies the Delay segments for the song. The first parameter is the beat, and the second parameter is the duration in seconds. Appears to have been added since SM-SSC.\nExample:\n#DELAYS:488.000=0.050;  TICKCOUNTS    Specifies how many checkpoints a hold has in a beat. The default value is 4. This only gets used in the pump game mode. The first parameter is the beat, and the second parameter is the number of checkpoints to use. Appears to have been added since SM-SSC.\nExample:\n#TICKCOUNTS:0.000000=4, 50.000=16;  NOTES / NOTES2    NOTES2 is written when keysounds are used, but both are read in the same way.\nNotedata specs    Notedata has 6 parameters:\n Steps Type: follows the format game-style. eg: pump-doubles Description: a string that usually has the chart creator\u0026rsquo;s name or chart information. Difficulty: The difficulty of the chart. Chart Meter: the difficulty number. Various chart metas follow different number scales. Radar Values: The 5 radar values based off of DDR\u0026rsquo;s. The order is this: Stream, Voltage, Air, Freeze, Chaos. The game calculates this itself when writing the SM file. Notes: the actual notedata the game reads in to create the chart one plays.  Special cases    There are two special cases involving the Hard difficulty. If the description is \u0026ldquo;smaniac\u0026rdquo; or \u0026ldquo;challenge\u0026rdquo;, it gets read into the Challenge difficulty.\nNote layout    Each measure has a minumum of four lines, with each measure being comma separated. The number of characters per row corresponds to the number of columns the mode has. (eg: dance-single has four columns, so each row has four characters)\n4 rows per measure allows for 4ths, 8 rows per measure allows for 8ths, 16 rows per measure allows for 16ths, etc.\nNote Types    The following table shows what character corresponds to what note type (not including characters introduced by SSC)\n   Note Character Note Type Quirks     0 empty N/A   1 Tap Note N/A   2 Hold Note Head N/A   4 Roll Note Head N/A   3 Hold \u0026amp; Roll Note Tail Having a 3 without a corresponding 2 or 4 will result in warnings.   M Mines N/A   K AutoKeysounds N/A   L Lifts N/A   F Fakes They can only be fake taps. You can\u0026rsquo;t do fake holds with this.    Attack Notes    Attacks can be attatched to notes by having {} after the note.\nThe format is {modstring:lengthseconds}\nWhen hitting a note with an attack, the attack gets applied for the player as a whole for the given duration.\nKeysounds    Keysounds can be attached to a note by having [] after the note.\nThe format is [index], with index starting at 0, and corresponding to the order listed in #KEYSOUNDS.\nExample:\n#NOTES: dance-single: Charter Man: Easy: 4: 0.503,7.2,0,0,0: L000 00F4 0000 0003 , 1000 0200 00M0 A[0]000 0300 0000 0001{tipsy,50%bumpy:5.2} 0000 ;  Deprecated / Cache Sections    These sections are considered unused or ignored in normal simfiles due to being replaced, removed or being used in cache files instead.\nMUSICLENGTH    Specifies how long the music is, in seconds. Used in the cache variant of the SM format.\nExample:\n#MUSICLENGTH:64.052;  MUSICBYTES    Just flat out ignored. No-one seems to know what this was for.  LASTBEATHINT    Specifies a custom last beat for the song. Phased out at some point. Example:\n#LASTBEATHINT:211.000000;  FIRSTBEAT    Specifies the first beat in the song. Used in the cache variant of the SM format. Phased out at some point. Example:\n#FIRSTBEAT:10.348;  LASTBEAT    Specifies the last beat in the song. Used in the cache variant of the SM format. Phased out at some point. Example:\n#LASTBEAT:128.600;  SONGFILENAME    The full path to the simfile itself. Used in the cache variant of the SM format. Moved into the SSC cache format.\nExample:\n#SONGFILENAME:/AdditionalSongs/UPS 4/Brain Power/Noma - Brain Power.sm;  HASMUSIC    Used in the cache variant of the SM format. Moved into the SSC cache format.\nExample:\n#HASMUSIC:1;  HASBANNER    Used in the cache variant of the SM format. Moved into the SSC cache format.\nExample:\n#HASBANNER:0;  SAMPLEPATH    Defines the path to the separate sample audio. Phased out at some point.  LEADTRACK    Unknown.\n"},{"id":53,"href":"/dev/mode-support/tja-support/","title":"TJA","parent":"Mode support","content":"Project OutFox is working on support on the parser for the TJA (Taikojiro) chart format, which is the standard format used in conjunction with the taiko game types. The following page contains details on the Taiko parsing options that Project OutFox currently supports. This is a living document - it will be incomplete as Squirrel finds time to update and confirm/clarify items that are missing or unknown.\nTJA Notedata support as of Alpha 4.9.9 - NOT YET We are still designing the parser!     Headers     The mode uses a selection of headers to set up the playfield/notefield, which appear to be based off of the old BMS style loading mechanisms. We\u0026rsquo;ll list the known ones and whether or not Project OutFox supports them.\nUnlike it\u0026rsquo;s BMS History, TJA files do not use the # delimiter to begin a line. In BMS to note the title of a song, it would be #TITLE, and in TJA, it uses just TITLE. Bear this in mind if you are converting from BMS/PMS files that the parsers for other simulators will not expect the # to be used. We will list them as per what we can find out about the TJA Specification, so do check back regularly, as this information will change from time to time as we get more familiar with this game mode and the format nuances it uses.\nSomething important to note, There are no spaces after the : in the headers. If you are using a known editor, this won\u0026rsquo;t be a problem. However if you are converting from BMS/PMS, these will not have a : at all and this can lead to information being missed in the way the game parses your chart. It will also make your .tja incompatible with other taikojiro simulators.\n TITLE    This header is self explanatory, and it sets the title of the song/chart that will be played. It is very often done in SHIFT-JIS encoding on older files, however on more modern charts, this is using UTF-8 / UTF-8 BOM.\nExample:\nTITLE:My Favourite Song  SUBTITLE    This header replaces the #ARTIST tag that BMS/PMS uses, so remember to use it in this way. It again used to be written in SHIFT-JIS on older files, but please use UTF-8, as this is the standard now.\nSubtitles can be hidden on the evaluation screen by adding -- before the title begins. If you wish to show the subtitle on the evaluation screen (the default) you can add ++. It is not actually necessary to use this notation on OutFox, but for compatibility with other simulators, it is best to set this to either visible or hide. Be aware, only -- works on other simulations, so if you want to keep compatibility, do not use the other two options.\nExample:\nSUBTITLE:My Favourite Artists To hide on evaluation:\nSUBTITLE:--My Favourite Artists To show on evaluation\nSUBTITLE:++My Favourite Artists  BPM    This header specifies the beginning or \u0026lsquo;starting\u0026rsquo; BPM (Beats Per Minute) of a song. This is the same as the #BPM used in BMS. It is usually a whole number, but floating point/decimal point is also permitted, though these are not completely in the specification.\nExample:\nBPM:145 or\nBPM:128.35  OFFSET    The offset of a song, or where you want the song to begin, is set using seconds. In Taiko mode, this will correspond to the first \u0026lsquo;beat bar\u0026rsquo; you see, then the metronome system will continue from that. If you do not use an editor that allows you to see the waveform, this can be trial and error until it is synched up. You can use negative values, to start before the song starts, or positive values, which is after the song starts. Either of these are supported.\nExample\nOFFSET:-1.785 or\nOFFSET:3.32  WAVE    This header sets the file name of the song you wish to play. You do need to bear in mind, this is case sensitive. On Linux and Mac OS specifically, you must ensure that this entry matches the file name on the disc EXACTLY, or you will be greeted with silence when in game. For OutFox, you have the choice of the following supported file formats:\n  OGG (Recommended if you wish to make your .tja compatible with other simulators) MP3 WAV OPUS FLAC   This header is similar to the #WAVzz header used in BMS, except we\u0026rsquo;re only calling the one for this mode. Do ensure your file is encoded to 44.1kHz (44,100) as some older OGG encoders can do weird things to your file. If you\u0026rsquo;re ever unsure, use the program MediaInfo which is a handy little program for mediafile information. Most simulators will not play bad or slightly corrupted files, so this is something to take into consideration when creating your chart, so take a moment to check the file is good.\nExample\nWAVE:Iliketodrum.ogg or\nWAVE:HitMeinmyFace.flac  SONGVOL    This header sets the play volume of the song when screen gameplay starts. It is independent of the game volume, or the volume you set with the F3 option. Use this sparingly! You can make the sound of your chart be bad for players if you set it too quietly for example. It defaults to 100, which is the normal setting for a sound in the game, and in other simulators as well. It is not recommended to use values over 100, as this will cause distortion and clipping in the output, and will potentially sound awful.\nExample\nSONGVOL:100  SEVOL    This header sets the play volume of the sound effects used when screen gameplay starts. It is independent of the game volume, or the volume you set with the F3 option. Use this sparingly! You can make the sound of your chart be bad for players if you set it too quietly for example. It defaults to 100, which is the normal setting for a sound in the game, and in other simulators as well. It is not recommended to use values over 100, as this will cause distortion and clipping in the output, and will potentially sound awful.\nExample\nSEVOL:100  DEMOSTART    This allows for the preview of the song file set in WAVE. It is set to play when in screen select music, (The music wheel) and will play from the point chosen here. This system mimicks the #PREVIEW system in BMS, but does not require you to load two files. It simply uses the one song file, and will play from the point selected.\nYou need to set a time within the file, or this can cause issues with some simulators. If your song file was 93 seconds long, and you set DEMOSTART:99, this can cause undesirable behaviour in other simulators. If the number is invalid in OutFox, it will just play from the beginning, so do set this right!\nExample\nDEMOSTART:22.65  LEVEL    The level entry sets the amount of stars that the player will see and this will signify the difficulty of the chart. It is set from a scale of 1 to 10, and will set the difficulty in the game. Some simulators can also take the COURSE name to set the difficulty. It is similar to how the PLAYLEVEL works in BMS. Bear in mind that maximum star ratings aren\u0026rsquo;t the same between difficulties:\n  1-5 kantan (Easy) 1-7 futsuu (Normal) 1-8 muzu (Hard) 1-10 oni/ura (Extreme)   Example\nLEVEL:4  COURSE    This header is somewhat misleading. It is in fact the difficulty of the chart, and it can be set either as a number, or by a name.\n  Easy or 0 Normal or 1 Hard or 2 Oni or 3 Edit or 4 Tower or 5 Dan or 6   Due to the competitive nature of the PC based simulators this normally defaults to oni or 3, so be warned if your chart is easier than this difficulty, and make sure you add the correct name in the course setting. It is named Extreme so this should give you an idea of the difficulty! Edit refers to Ura Oni, and doesn\u0026rsquo;t have any impact alone on the genre of the song.\nUra Oni is an alternative to the Oni charts, which are not necessarily harder, but can include 2 player or gimmicks. Remember OutFox\u0026rsquo;s Mod system is quite varied, and try to keep these out of your files if you wish to make them compatible with other simulators.\nTower is based on the style from the PS2 era of the game.\nThis setting is similar to how PLAYLEVEL works in BMS, but gives a finer set of controls.\nExample\nCOURSE:4 or\nCOURSE:hard  GENRE    This header works very differently to the BMS equivalent with the same name. In Taiko, you have a choice of 8 different Genres. These will then be \u0026lsquo;set\u0026rsquo; into groups depending on this value. Use UTF-8 when setting these, to ensure full compatibility across the board.\nThese names will override any settings in box.def, the configuration file.\nSeveral of the older clients need SHIFT-JIS, but if you are targeting newer simulators (and OutFox!) then the following genre names should be used:\n  J-POP This is the J-Pop genre, used for mainstream/uplifting tracks.     アニメ This is the anime genre, used for anime based songs, opening/closing credit songs, or songs based or remixed from music within an anime. In the western community, this genre also covers western animated cartoons and movies, and the \u0026lsquo;western\u0026rsquo; based animes that are produced by the like of Netflix et al.     どうよう This genre is not used that much in modern versions of the game, as it is the \u0026lsquo;nursery rhymes\u0026rsquo; genre. If you are being true to the historical versions of the game then use this genre, but most now have moved into variety and classical. They tend to be more biased towards the easier side of difficulty, as it was meant to open up the game to a younger audience.     バラエティ This genre is \u0026lsquo;variety\u0026rsquo;. It is the genre where you can put charts that do not really \u0026lsquo;fit\u0026rsquo; in anything else. In most simulators, a lot of the edit charts go into variety. A lot of songs from BMS and Touhou fit in this category.     ボーカロイド or VOCALOID The vocaloid genre has two possible entries to the genre tag, and you can use either of them. This genre is for music made using the vocaloid based virtual idol singers, including IA, Miku, Luka, Gumi etc.     クラシック This genre is for classical music or remixes of classical tracks.     ゲームミュージック This genre has all the game music charts. This can be almost anything, as long as it\u0026rsquo;s tied to a game; Boss and title music, to BGM/Ambient music, remixes and even songs from other rhythm games go in here.     ナムコオリジナル This genre is for the \u0026lsquo;Namco Original\u0026rsquo; based songs and remixes.     キッズ This genre is similar to the nursery rhymes set, with the song charts being set for kids.     段位道場の課題曲 This genre is for Danjo Dojo based charts. These are the task based charts used in some simulators. We are not sure if this setting has been used in custom charting as of yet.   Example\nGENRE:VOCALOID or\nGenre:アニメ  SCOREMODE    This tag allows the chart maker to set the game version used when it comes to setting and sorting out the final score of the song. There have been 17 Arcade versions of Taiko and this tag can specify the scoring method. Some simulators do not support score methods other than 1. However, OutFox will support the full range. On most simulators, the default is 1.\n  0 This sets Arcade Version 1 to 7 scoring: Less than 200 combo: SCOREINIT or 1000pts per note. When the player then hits 200 combo, it is SCOREINIT + SCOREDIFF, or 2000pts (1000x2 for double) for the 200+ combo bonus. So if the player scored 184 combo in a song which had 184 notes: it would be 184x1000.   Scoring Formula: SCOREINIT * COMBO (when COMBO \u0026lt; 200) + (SCORINIT + SCOREDIFF * COMBO (when COMBO \u0026gt;200) Scoring Formula: 1000 * COMBO (when COMBO \u0026lt; 200) + (2000 * COMBO (when COMBO \u0026gt; 200))   1 This sets Arcade Version 8 to 14 scoring: With this arcade version, we use the SCOREDIFF variable. The combo multiplier rises by SCOREDIFF with each 10 combo until it hits 100, then it doesn\u0026rsquo;t change unless there is a break.   Scoring Formula: SCOREINIT + max(0, SCOREDIFF * floor((min(COMBO, 100) - 1) / 10))   2 This sets the Arcade version to 0, which is similar to how 1 works, but with some different combo multipliers. This scoring system is not commonly used, but it\u0026rsquo;s included here for completeness. There are a lot more Japanese charts with this setting. This scoring system refers to the always-online HD cabinet versions between 2011 and 2020 (normally named after colours \u0026ndash; kimidori, murasaki, red, blue, green, etc)   Scoring Formula: SCOREINIT + SCOREDIFF * (if combo over 100; 8) (if combo over 50; 4) (if combo over 30; 2) (if combo over 10; 1)   3This sets the scoring to the newest taiko arcade (nijiiro) mathematically calculates score to mean all-good (dfc, =mfc/AJ/perfect) is equal to at least 1 million with combo no longer being a factor, with much more precision than AC0 (where scores of 1.2 million were possible on note-heavy charts and scores of 800k were possible on less note-heavy charts, all oni). It\u0026rsquo;s comparable to the shin-uchi/true hit mode (other than it not accounting for big notes anymore)   Scoring Formula: ((1000000-(time of balloon (sec)*100*16.6 OR hit count of balloon×100)-time of drumroll (sec)*100*16.6)/total note count/10)then unconditional carry to single digit * 10 Example\nSCOREMODE:1  SCOREINIT    This tag sets the INITial score for the scoring method. This is commonly set to 610 on Japanese charts, but many other values are seen as well. See #SCOREMODE above.\nExample\nSCOREINIT:380  SCOREDIFF    This tag sets the score DIFFerence for the scoring method. This is commonly set to 140 on Japanese charts, but many other values are seen as well. See #SCOREMODE above.\nExample\nSCOREDIFF:90  MAKER    This tag is used for the name of the chart artist. It is not often seen in the simulators options, but the tag is available for credit. Works as per #MAKER in BMS.\nExample\nMAKER:Squirrel   Taiko Note Types      0 = No Notes 1 = Small Don (Orange Note) 2 = Small Kat (Blue Note) 3 = Large Don (Orange Note) 4 = Large Kat (Blue Note) 5 = Small Drum Roll Start Point (Yellow Roll) - Ends with an 8 6 = Large Drum Roll Start Point (Yellow Roll) - Ends with an 8 7 = Where the \u0026lsquo;Balloon\u0026rsquo; (Long) Note Begin - Ends with an 8 8 = Where the Drum Roll / Balloon Long Notes End 9 = Where the \u0026lsquo;Kusudama, yam, oimo, or big balloon\u0026rsquo; (Long) Note Begins - Ends with an 8 A = Large Don Partner, Multiplayer, with the hands B = Large Kat Partner, Multiplayer, with the hands C = Not Used? D = Not Used? E = Not Used? F = Adlib; hidden note that will increase combo if spotted, but won\u0026rsquo;t give bad/miss when not   Written and Maintained by Squirrel, with thanks to Taiko-web, and members of the TJADB community\n"},{"id":54,"href":"/dev/actors/General-DifferencesfromOlderSM/","title":"Behavioral differences from SM 3.95/ITG","parent":"Lua and Actors","content":"OpenITG, NotITG and SM 3.95 are popular engines based on older versions of StepMania that have communities that continue to support by making new content.\nOutFox contains a similar feature set as the previous revisions of the game, but with some notable differences. This document aims to provide help with porting content to and from the different versions of the game.\n\u0026ldquo;Command\u0026rdquo; format vs \u0026ldquo;Function\u0026rdquo; format    Converting commands to the newer function format is generally recommended when porting content to SM5. The following sections detail what these processes.\n\u0026ldquo;Command\u0026rdquo; format    In SM3.95 \u0026amp; related engines, commands can be defined inside xml nodes like this:\nOnCommand=\u0026#34;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;rotationz,180;linear,50;rotationy,-5000;rotationx,750;rotationz,750;sleep,100\u0026#34; (Taken from WinDEU\u0026rsquo;s \u0026ldquo;Golden Slaughterer\u0026rdquo; file from \u0026ldquo;WinDEU Hates You 5EVR\u0026rdquo;.)\nThis is what can be considered \u0026ldquo;Command\u0026rdquo; format, which allowed for easy chaining of actor functions tweens.\nFor a quick translation into SM5, this can be wrapped with cmd(), but this is considered bad practice and inefficient (And it\u0026rsquo;s still counted as \u0026ldquo;Command\u0026rdquo; format). However, it\u0026rsquo;s used a lot in the past, so it\u0026rsquo;s still here for backwards compatibility.\nAnother thing to note is that the functions inside this format (eg: x, rotationz, zoom, etc.) appear to be case-insensitive, all being converted to lowercase in the end. (Although in SM5, this appears to not be the case.)\n\u0026ldquo;Function\u0026rdquo; format    In SM5, commands can be defined inside lua tables like this:\nOnCommand= function(self) self:x(SCREEN_CENTER_X):y(SCREEN_CENTER_Y):zoom(2):rotationz(180):linear(50):rotationy(-5000):rotationx(750):rotationz(750):sleep(100) end (The function format version of the earlier command)\nThis is what can be considered \u0026ldquo;Function\u0026rdquo; format.\nThis is not exclusive to SM5, however. SM3.95 \u0026amp; friends can use lua functions inside xml nodes. But there is a caveat: Actor function chaining as seen in the example is not possible in SM3.95/OpenITG/NotITG. Instead, a separate self: would be needed for each function call.\nEverything is case-sensitive in this format, so take care to ensure the casing is corrent.\nActor Differences    Because the internals of the engines are different, actors may work differently with the same lines of code.\nZoom and rotation order     SM3.95 (and as a result, OpenITG \u0026amp; NotITG) apply the rotation, then apply the zoom.  SM5 applies the zoom and then applies the rotation.\nIn Project OutFox, this can be worked around by setting the rotafterzoom attribute to false, returning the SM3.95 behavior.\nThe notes \u0026amp; receptors already have this active to help with easilly replicating modifier effects from the other engines.\nIn SM5.2 and earlier, this has to be done with wrapper states or actorframes. This is done by having the wrapper do the positioning and zooming, while the main actor gets everything else. (This is still doable in Project OutFox if you\u0026rsquo;re aiming to write content for multiple SM5s)\nZoom\u0026rsquo;s effect on the axis    SM3.95\u0026rsquo;s zoom function only affected the x \u0026amp; y axis, while zoom affects all three axis in SM5.\nIt\u0026rsquo;s fine for actors like Sprites or BitmapTexts, but it stops being \u0026lsquo;normal\u0026rsquo; when actors like Models come into play.\nThis not only affects actors, but also affects modifiers that play with zoom (eg: Mini, Tiny).\nA workaround is to either use only the x \u0026amp; y zooms or undo any scaling done to the z axis when performing a normal zoom.\nActorFrameTexture\u0026rsquo;s capture method.    In NotITG, an ActorFrameTexture (AFT), captures everything that was rendered before it and places it into a texture.\nSM5\u0026rsquo;s AFT captures everything inside of it (Hence, ActorFrameTexture), and places that into a texture.\nThis difference makes for a nontrivial challenge to port content across if AFTs are in use.\nDue to how AFTs work in nITG, lumikey or chromakey shaders are needed if transparent textures of an actor are needed.\nAttribute renames    A few of the attributes got renamed, so when porting content, take care to ensure these are dealt with:\n  effectdelay (SM3.95) becomes effect_hold_at_full (SM5)\n  hidden(0) and hidden(1) (SM3.95) becomes visible(false) and visible(true) (SM5)\n  Scaling across multiple themes    Most themes made for the SM3.95 era are considered \u0026ldquo;480p\u0026rdquo; because it\u0026rsquo;s internal height was always 480 pixels.\nSM5 changes this, with SM5.1\u0026rsquo;s default theme shifting towards a hight of 720 pixels, which can be considered an \u0026ldquo;HD\u0026rdquo; Theme.\nSeveral things have to be scaled in accordance to this, such as:\n Zoom (All axis are involved) Positioning (All axis are involved) Effects (Not all need to be scaled.)   A Common ratio would be this: SCREEN_HEIGHT/intended_height (for SM3.95-style content, intended_height is 480)\nHowever, this does not apply to every actor. If an actor is inside something that\u0026rsquo;s already scaled (eg: the NoteField inside the scaled Player), it does not require the above scaling.\nModifier Differences    Some modifiers have completely different behavior, which can make porting modifier-related content less trivial.\nTiny     In SM5, positive tiny brings the columns together similar to what Mini visually does.  NotITG instead only zooms the notes.\nThe only options are to combine column movement modifiers to counteract the movement, use the column-specific variants instead, or use tinyx \u0026amp; tinyy (which is technically closer to what nITG\u0026rsquo;s Tiny actually does).\nThis only affects the original Tiny modifier, and not its' variants.\n The zoom equation is different. SM5 uses this equation: 0.5^strength, while NotITG uses this one: 1 - 0.5*strength. (100% == 1.0 for the strength)  It just so happens that NotITG\u0026rsquo;s equation is the exact same one Mini uses for notefield zoom.\nIn OutFox, this can be altered with the TinyUsesMiniCalc sub-modifier. When active, it switches to NotITG\u0026rsquo;s equation, which allows for a wider range of zooms.\nIn SM5.2 and earlier, this can be somewhat replicated by taking the two equations and solving for the equivalent strength. (Doesn\u0026rsquo;t work for negative strengths in NotITG, through)\nThis affects every variant of Tiny.\nDifferences from older SM5 builds    Project OutFox changes the default behavior from the older SM5 builds. This section documents those changes.\nColumn-specific function changes    Instead of typing \u0026lt;mod name\u0026gt;\u0026lt;\\column number\u0026gt; (As in SM5.1), you now type \u0026lt;Mod Name\u0026gt;Col, and the first parameter is the column number. It also allows for mass applications by passing nil as the column number.\nPlayer vanish point    In SM5.2 and earlier (due to a math error), the player\u0026rsquo;s vanish point at the x axis is skewed towards their side of the screen instead of being directly at the center of the notefield. This is not an issue in SM5.0.7 and earlier or in OutFox and later.\nFor example: P1 is at the left half of the screen, so its' vanish point is slightly skewed towards the left edge of the screen.\nvibrate() now takes the current zoom into account    This is similar to how it behaves in SM3.95/ITG.\nSM5.1 and earlier take the endpoint zoom and use that for vibrate.\nFor example:\nactor:vibrate():zoom(20):linear(2):zoom(0) Would result in no visible vibration because the end point is 0, while in OutFox and SM3.95, one would see the vibration start at 20 and go down as the zoom reaches 0.\nLua is more strict with escape sequences.    In older builds of SM, an invalid escape sequence is ignored, with the offending \\ removed. In Lua 5.3 (and consequentally, Project OutFox), this now causes a lua error, which may result in themes or effect files not running correctly or at all.\n"},{"id":55,"href":"/dev/effects/EffectFiles-ChartSegments/","title":"Chart segments","parent":"Effect Simfiles","content":"Gimmick charts often involve a large amount of BPM changes or stops to create various effects like stutters, wave-type scrolling or switching notes with other types of notes (ex: notes become mines).\nThis is done with \u0026ldquo;segments\u0026rdquo;. One can have many instances of a segment type.\nThe SSC simfile format has extra \u0026ldquo;segments\u0026rdquo;, which allow for other effects. The following list notes what is available and what it is supposed to do.\nSM-era segments    These segments can be found in .sm files, but they can also be in .ssc files, too.\nBPM changes (BPMS)    Every chart has a BPM, but it doesn\u0026rsquo;t have to stay at one BPM. Some songs do change BPM throughout, but some charts do this for doing stutters (when combined with stops) or having notes speed towards or slow down. Visually ignored if CMod is used (But may result in weird spacing with regards to note quantization).\nIn the simfile, it\u0026rsquo;s listed as the beat the change happens, and then the BPM to change to. The BPM listed at beat 0 is the starting BPM.\nIn SM3.95 and oITG/nITG, negative BPMs can be used to \u0026lsquo;warp\u0026rsquo; through the chart. SM5 converts these to warp segments automatically, but the result may not be perfect. (SM3.95 can use this to make autohit notes, or artificially lower the possible score. SM5 can\u0026rsquo;t)\n#BPMS:0.000=256.000,42.000=128.000,56.000=256.000; (ex: a chart that starts at 256 BPM, changes to 128 BPM at beat 42, then changes back to 256 BPM at beat 56)\nStop segments (STOPS)    Stop segments tell the game to stop scrolling the chart for a given amount of seconds. Visually ignored if CMod is used.\nThis also makes the beat stop while one is active. (So, if you were printing the beat, it would stop incrementing during the stop segment)\nIn the simfile, it\u0026rsquo;s listed as the beat the stop happens, and then how long the stop is (in seconds).\n#STOPS:27.000=3.141; (ex: at beat 27, the chart stops scrolling for 3.141 seconds)\nKeysounding (KEYSOUNDS)    SSC-era segments    When SSC created the .ssc format, new segment types were added.\nDelay segments (DELAYS)    Warp segments (WARPS)    Tells the game to teleport foreward a given number of beats into a chart. Any notes that are skipped get counted as fake.\nIn simfile, it\u0026rsquo;s listed as the beat it happens, then how many beats foreward to teleport.\n#WARPS:28.000=4.000; (ex: at beat 28, teleport foreward by 4 beats.)\nTime Signature segments (TIMESIGNATURES)    Tick Count segments (TICKCOUNTS)    Sets how many hold ticks happen in a hold per measure. Starting value defaults to 4. Only really used in pump mode, due to other games not having hold checkpoints.\nIn simfile, it\u0026rsquo;s listed as the beat it happens, then the actual tickcount amount.\n#TICKCOUNTS:0.000=4, 28.000=8 (ex: At beat 28, a hit becomes 2 combo, and a miss becomes 4 misses.)\nCombo segments (COMBOS)    Sets how much combo a hit or miss adds. The default is 1/1, which means a hit gets 1 combo and a miss gets 1 miss.\nIn simfile, it\u0026rsquo;s listed as the beat it happens, how much combo a hit is and then how much combo a miss is. If a single number is listed, both hits and misses get the same value. Weird behavior, such as underflows can happen if negative values are used.\n#COMBOS:0.000=1, 28.000=2=4; (ex: At beat 28, a hit becomes 2 combo, and a miss becomes 4 misses.)\nSpeed segments (SPEEDS)    Sets the speed of the chart by ratio. 1 is the normal speed. If given a length of 0, the change happens instantly. The default starts with a speed of 1, applying at beat 0 instantly. Visually ignored if CMod is used.\nIn simfile, it\u0026rsquo;s listed as the beat it happens, the speed to go to, how long the change takes and whether it\u0026rsquo;s in beats or seconds.\n#SPEEDS:0.000=2.000=0.000=0, 16.000=4.000=1.000=0, 24.000=1.000=2.000=1; (ex: Chart starts at a speed of 2, on beat 16, it turns to a speed of 4 in 1 beat, and on beat 24, it turns to a speed of 1 in 2 seconds.\nScroll segments (SCROLLS)    Allows one to alter the scrolling factor for a section (as opposed to the whole field). When given a factor of 0, the chart stops visibly scrollnig, but notes can still be hit. Visually ignored if CMod is used.\nIn simfile, it\u0026rsquo;s listed as the beat it happens, and then the factor to switch to.\n#SCROLLS:0.000=1.000, 24.000=0.000, 28.000=2.000; (ex: The chart starts with a factor of 1, switches to a factor of 0 at beat 24, and switches to a factor of 2 at beat 28)\nFake segments (FAKES)    Allows one to mark a section of the chart as fake, which means the notes can\u0026rsquo;t be hit or judged.\nIn the simfile, it\u0026rsquo;s listed as the beat the fake segment is at, and then how long the section is in beats.\n#FAKES:24.000=8.000; (ex: at beat 24, don\u0026rsquo;t judge the notes for 8 beats)\nLabel segments (LABELS)    Allows one to mark the start of a section with a name. The default label is \u0026ldquo;Song Start\u0026rdquo; at beat 0.\nIn the simfile, it\u0026rsquo;s listed as the beat the label is at, and then the name of the label.\n#LABELS:0.000=Song Start;\nNotITG has an advanced version called \u0026ldquo;Spellcards\u0026rdquo;, which have a start beat, end beat, difficulty, name and color\n"},{"id":56,"href":"/user-guide/meta/faq/","title":"FAQ","parent":"Front Matter","content":"What is Project OutFox?    A project to modernize the StepMania 5.0.12/5.1 codebase to improve its performance and provide enhanced support for modern hardware and operating systems. We are also adding new features, including those being requested by our community, as well as refurbishing its support of non-dance/4-key game types, adding new game types, and so forth.\nWill it still work with my old songs/themes/etc..?    Project OutFox builds upon the existing StepMania 5.0.12/5.1 beta codebase, and maintaining backwards compatibility with older content is one of our main priorities. Content that worked on StepMania 5.0.12/5.1 (including songs, themes, and noteskins) should still work on OutFox. If you experience any issues/weirdness, please report it to us.\nSide note for developers\nPlease note that we are deprecating the use of semicolon-separated cmd() blocks (i.e. OnCommand=cmd(linear,1.5;diffusealpha,1); ) as a means of placing commands on actors in Lua scripts, as this method is a non-standard Lua function that was created for StepMania, and OutFox is not optimized with this coding style in mind (themes may experience performance penalties if they use this method). It is strongly recommended that function chaining (i.e. code such as OnCommand=function(self) self:linear(1.5):diffusealpha(1) end, ) be used instead.\nCan I install it alongside existing versions?    Yes. Our installer on Windows also defaults to portable mode, so user profile data is stored in your installation directory.\nIf you would like to have a shared song library between multiple builds, you can use the AdditionalSongFolders preference in Save/Preferences.ini to specify a path. Learn how to here\nWill there be online support?    The existing SMO functionality is deprecated, but we have future plans to develop a revamped online system.\nQ: Where should I report Bugs, request features and post game crashes?    If you can, do those in our Issue Tracker Repository, by creating an issue it\u0026rsquo;ll give you those exact options that I mentioned in the question.\nYou can also use this Discord Server:\nUse \u0026ldquo;feature-request\u0026rdquo; channel to request features or give ideas. Use \u0026ldquo;bugs-crashlogs\u0026rdquo; channel to report bugs and game crashes.\nYou can also use our forum\nAre there ways I can contribute?     You can report bugs and make feature suggestions on our Discord server. TinyFoxes is coordinating and hosting community-produced content for Project OutFox, such as translations and other add-ons.  What is StepMania 5.2 and why did you skip over it?    StepMania 5.2 was originally intended to be the next version. However, it included a number of major changes that broke compatibility with previous versions, and were not well-received by the community and other developers.\nStepMania 5.2 was originally meant to be 5.1. However, in response to the reception, it was officially delayed in favour of a new 5.1 that was largely an update to 5.0.12 that did not break compatibility with existing content. This was done under the presumption that the new version (subsequently renamed 5.2) would eventually be completed. However, this did not end up happening.\nQ: How do I get logs?    Go into your game folder and check if there\u0026rsquo;s a file called portable.ini (or just portable if your system doesn\u0026rsquo;t display file extensions). If there\u0026rsquo;s a portable.ini in your game folder then all you need to do is open the Logs folder and you\u0026rsquo;ll find all logs, the most important one being log.txt. (Try to do this after closing the game)\nIf there\u0026rsquo;s no portable.ini in your game folder, then you need to go into a specific path based on your OS:\n Windows: appdata/roaming/stepmania 5.3 Mac: ~/Library/Logs/Stepmania 5.3/ Linux: /home/user/.stepmania-5.3  Q: Why do I have to configure my pad while older versions of StepMania could work with no problem?    Project OutFox uses XInput, it means controllers need to get mapped first and then never again. It means every single controller should work with Project OutFox\nThe game doesn\u0026rsquo;t even try to automap things yet, there\u0026rsquo;s a tutorial step-by-step how to map\nQ: I\u0026rsquo;m new to this community and I don\u0026rsquo;t understand many terms, could you explain what they mean?     Chart: How we call Songs that you can play in OutFox. (osu! players calls them Maps) Mods: Modded charts that uses Lua to change how the game operates. Pad Chart/Keyboard Chart: If the chart was design for people that play in pad or for keyboard. Hold: A note that you have to hold to not miss it. Drill/Roll: A note that you have to keep hitting to not miss it. NG: Missed Hold/(Drill or Roll) Doublestep: When you have to use the same foot to hit 2 different notes. RUDRU for example (R = Right, U = Up, D = Down) Ghosttap: When you hit a place where there\u0026rsquo;s no step. 4th,8th,12th: Note types and colors, 4th: red arrow (hit after each beat), 8th: blue arrow (hit after each half beat), 12th: green arrow (hit after each 1/3 beat)..it goes on. Playfield/Notefield/Receptors/PlayerBoards: The targets that notes are going to reach. In dance, the 4 notes that are always at the top. In pump, the 5 notes that are always at the top. Lifts: Note that you have to stop holding the moment they reach the playfield.  Q: Will Project OutFox go open source?    Yes. Here\u0026rsquo;s a quote from Squirrel if you want to know more:\n The project began as a method to add online and profiles to SM5, but when we looked into the engine to see how this could be appropriated it was discovered just how much in a sorry state the code base was, and it looked mostly abandoned. I spoke to Shakesoda in hopes of a resurrection in the form of a team project, and it was requested rather than breaking 10 years of content and community to take the time to make a proper 5.x build that is stable and supports what the community as a whole wants from the game. This backward compatibility support has been an absolute git to do, but it\u0026rsquo;s something now we are down the line which we are proud of, as it has brought many players and newcomers to the community, and provided a very stable experience for folks during the lockdown. We will continue to maintain a near 100% compatibility where we can, and this is taken into consideration whenever we plan a new feature or change engine components.\nWe asked if it was ok to close the source while this process was done, and it was deemed wise for the health of the repo and the need of people who are just wanting to play. Its why we\u0026rsquo;ve been around the repo but not on it as taint can happen and we do not wish this. SSC did this same behaviour before us, so we did not see it as a problem. Some vocal members of the community disagreed, including some of the SMDev Team. We have also been compared to past SM repo contributors who may have left a less than savoury memory in the minds of some, and it has also been hard to differentiate from history we have no involvement with.\n My controller doesn\u0026rsquo;t work, but it did on older versions of StepMania.    Currently the game features two modes: a HIDAPI-based \u0026ldquo;Legacy\u0026rdquo; input system, similar in behaviour to the input system seen in StepMania 5.0, and an XInput-compliant input system (additional configuration is needed to use unrecognized controllers in this mode, see here for more information). If you are unable to map any buttons to the game, try switching modes to Legacy, available as an option in the Experimental Settings menu, or follow the guide mentioned above on how to map your controller with XInput.\nQ: I have a really recent processor and my game is having a lot of problems, why is that?    Outfox reached a point of optimization that good processors are going to have some problems because some parts of the game are going too fast and need catch up. The current solution to this is to have something running in the background (Have a video playing, other programs) to keep the processor busy.\nThis is going to have a proper fix later.\nQ: Is online mode available yet? If not, is it coming?    Short answer: no it\u0026rsquo;s not available, yes it\u0026rsquo;s coming. Long answer: It\u0026rsquo;ll take a while, the engine is still being optimized and the online system is still in development (being done by Cube).\nThis doesn\u0026rsquo;t mean Online isn\u0026rsquo;t important for us, it\u0026rsquo;s a lot, it was one of Team Rizu first plans but the engine just wasn\u0026rsquo;t ready for their plans.\nResume: As your read this, both the game engine and online mode are still in development.\nQ: How do I insert Noteskins/Themes/Avatars/Judgments/Toasties into Project OutFox?    In the game folder there\u0026rsquo;s a folder called Appearance, where you\u0026rsquo;ll find a folder for each of those mentioned features.\nFor Avatars    Open Avatars folder and drop any png, jpg, gif into there with any name you want. Now in-game go into Options \u0026gt; Profiles \u0026gt; Select any already created profile (or create one) \u0026gt; edit \u0026gt; change avatar image, now you can select any image that is inside the Avatars folder.\nFor Themes    Open Themes folder and drop here any theme that supports 5.x\nFor Noteskins    Open NoteSkins folder, open the folder that represents what noteskin gamemode the noteskin is made for, drop the NoteSkin Folder there.\nYou can find more noteskins in https://projectmoon.dance/addons/noteskins\nFor Judgments    Open Judgments, drop the judgment image there. Do not change the name of the judgments you download, they\u0026rsquo;re important so the game knows what part of the image the game should get)\nFor Toasties    Open Toasties, drop the game Toastie folter there. (The game can come with 2 toasties in the installer options)\nQ: I have an ancient Intel Card and the game does nothing but crash!    If your log shows WDDM1.0 or WDDM1.1 at the end of the graphics card name:\n00:00.505: Last seen video driver: Intel(R) 82945G Express Chipset Family (Microsoft Corporation - WDDM 1.0) or the log shows Microsoft GDI as the Renderer\nThen you are running the OpenGL crippled \u0026lsquo;windows\u0026rsquo; driver that is downloaded on a fresh install. Project OutFox will not work on these drivers, as we do not support DirectX anymore (the old D3D renderer that 5.0.12/5.1 has)\nThere is a list of drivers at this site location that may help, but for some of these cards, you need to keep your windows 7 install disc handy!\nhttps://www.intel.com/content/www/us/en/support/articles/000005733/graphics.html\nUpdate: If you accidentally updated your windows to beyond the support given to you by Intel, so you moved to windows 8.1/10 from 7 then there is still hope! you can take a chance with the Mesa OpenGL replacer for legacy software, which adds an API extension over Microsoft. You can find it here: https://github.com/pal1000/mesa-dist-win/releases/latest\nHOW TO USE?\nDownload Mesa3d for Windows: mesa3d-xxxx-release-msvc.exe\n Extract it (either with a double-click or right-click 7-zip) In the extraction folder of Mesa, go to x64, select and copy opengl32.dll In the extraction folder of Project OutFox, go to /program and paste opengl32.dll it may now use the proper dll  Also see https://fdossena.com/?p=mesa/index.frag for a windows working solution.\nAnd for a detailed guide for intel users: (Some computer literacy needed) https://gist.github.com/rb-dahlb/26f316c5b6089807a139fc44ee69f0d1\nQ: How can I know who works on OutFox and who to trust?    Everyone on this list is part of OutFox Team and works on OutFox: see list\nInternational Moderators/Translators/Alpha Testers/Tiny-Foxes indirectly helps OutFox development but they aren\u0026rsquo;t part of the OutFox Team.\nIf you see anyone else saying they work on OutFox then do not trust and please report to us. You can always ask at our Discord Server\nLinux    I get the error \u0026ldquo;error while loading shared libraries: libOpenGL.so.0:\u0026rdquo;    Install either libglvnd and/or libopengl0 based on your distro. On some distros the package is known as libglvnd-opengl.\nMac    I\u0026rsquo;m having issues launching the game.    If you receive errors such as \u0026ldquo;No noteskins found\u0026rdquo; or other unusual behavior, you will have to change macOS security settings in order for Project OutFox to operate correctly. MacOS performs a process every time a new program has been downloaded called quarantine, which will require Gatekeeper (The OS\u0026rsquo;s security manager) to verify its signature. The OS does not trust unsigned applications, and prevents access to external files unless given manual permission by the user.\nTo do this, open Terminal and run the following command: xattr -dr com.apple.quarantine /path/to/StepMania, replacing /path/to/StepMania with the path to the directory containing the StepMania executable (manually typing it out, or dragging the folder containing the game executable directly onto the window to fill it automatically).\nQuarantine video example\nOn older builds, macOS Catalina also generated a message stating that the game was requesting permission to receive keystrokes from any application. This was a side effect of previous code that has since been removed.\nThe game is rendering small in the bottom corner of the window.    This is due to the renderer not supporting scaled screens yet. To fix this, right-click the game executable and select \u0026ldquo;Get info\u0026rdquo; (or highlight the file and press Command (⌘)+I, and toggle the \u0026ldquo;Open in Low Resolution\u0026rdquo; option under General.\nWhat modes does OutFox currently support?    The modes as of Alpha 4.9.8 (April 2021) are as follows:\nName | Description --------|------------ dance | Dance Dance Revolution + Solo (3, 4, 6 and 8 (Double) Panels) pump | Pump It Up (5, 6 (HalfDouble), 10 (Double)) based off of the pro era (SM4) kb7 | 7 Keys ez2 | Ez2Dancer (3 Panels with 2 Sensors, 3 Panels with 4 Sensors and 6 Panels with 4 Sensors (Double)) para | Para Para Paradise (5, 8, and 10 Sensor) ds3ddx | Dance Station 3DDX (4 Panels with 4 Sensors) beat | Bemani style via BMS (5, 7, 10 (Double) and 14 (double) Keys + Scratch) maniax | Dance Maniax (4 and 8 (Double) Sensors) techno | TechnoMotion (4, 5, 8. 9, 8 (Double), 10 (Double), 16 (Double) and 18 (Double) Panels) taitai | A 'don da don' styled mode popn | Pop'n Music via PMS (3, 4, 5, 7, 9 and 18 Keys) gddm | GitaDora Drummania style (5, 9 and 10 part!) gdgf | GitaDora Guitar freaks style (5 Guitar/Bass, 3 Guitar/Bass) (6 Guitar support Coming soon!) gh | Guitar style (5 Solo/Backup, 6 Solo/Backup) kickbox | Obscure lash a soft dance pad to a punching bag mode (4, 6, 8 sensor Mode) The Modes we can talk about are as follows: PLEASE NOTE: These are proposed and are scheduled on the road map, limitations or code problems may delay or change these modes, so it is why there is no date or ETA given.\nName | Description ----------|------------ piu | A major refactoring to a more accurate mode, to update it to closer to mainline style djh | A Hero isn't always needed, neither are the DJs drum | A midi based drum mode with 20 parts simulating a full yamaha DTX drum kit karaoke | A (.. do i need to explain this?) singing mode. Will happen if squirrel gets off his butt jam | A mode properly supporting O2Jam and it's modes, with full .OJM loader support d86.4 | Feet dance Station Radio 3 panel ??? | ??? What NotesLoaders Does OutFox Support?    The OutFox Supported Notes Loaders and their level of completeness to the specifications:\nName | Notes: ------|------------ BMS | 75% See Wiki for more details BME | 80% (beat loader for extended/PMS) BML | 80% (beat loader for long notes) CHART | 100% (gh loader) DTX | 40% (gddm 90% / gdgf 15%) DWI | 100% (as we know) KSF | 100% (as we know) MID | 90% (gh loader) PMS | 100% BMS98 / 85% BME 2004 SM | 100% (+ OF fixes) SSC | 100% (+ OF fixes v0.84 proposed) PLEASE NOTE: These are proposed and are scheduled on the road map, limitations or code problems may delay or change these modes, so it is why there is no date or ETA given.\nName | Notes: ------|------------ BMSON | 0% TJA | 0% ??? | 0% ??? | 0% ??? | 0% "},{"id":57,"href":"/user-guide/games/","title":"Game types","parent":"User Guide","content":"Project OutFox supports a variety of game types, which simulate different types of rhythm games (including button layouts and, where applicable, gameplay behaviours specific to the game type). Game types are further divided into styles, which defines chart types (such as the number of columns used, single or double, etc.)\nAs of OutFox-alpha-4.9.9, they include:\nInherited from StepMania    These game types were already avaliable in StepMania as of version 5.1 (the beta from which OutFox is forked), but are undergoing improvements to their file support, mechanics, and user experiences.\n dance - The default game type. Similar to games such as Dance Dance Revolution and In the Groove, it uses four lanes in the cardinal directions (left, down, up, right). It also contains a 6-lane style (solo) adding up-left and up-right directions, and a 3-lane style using only up-left, down, and up-right. pump - A five-lane dance game, which uses four diagional directions and the center rather than cardinal directions. In terms of functionality and behavior it is in line with Pro/StepMania 4 CVS. popn - A PMS player mode, supporting 3, 4, 5, 7, and 9-button styles, and the ability to load PMS files. beat - Supports 5-key and 7-key styles, and the ability to load BMS files. Full BME/BML support is coming soon. para - A dance game designed for para para routines, which is typically played with five infrared hand sensors in a semicircular layout, and uses a considerably looser scoring system. It is modelled upon the mechanics of the defunct arcade dance game Para Para Paradise. techno - A dance game type designed for pads with nine panels, including 4-lane (similar to dance), 5-lane (similar to pump), 8-lane (using all but the center panel), and 9-lane styles in single and double versions. kb7 - A seven-lane game type designed primarily for keyboard play, with two sets of three keys flanking a centre column (usually mapped by default to the SDF, JKL, and space keys). This is a StepMania-specific game type that does not emulate any specific game. ez2 - A game type based on the defunct arcade dance game EZ2Dancer, which uses three foot panels and a pair of hand sensors. maniax - A game type based on the defunct arcade dance game Dance Maniax, which uses four hand sensors arranged into two columns (upper and lower). ds3ddx - A dance game whose format is common among Chinese arcade dance games, which uses four diagional foot panels, and four hand sensors around the pad in the cardinal directions. kickbox - Obscure lash-a-soft dance pad-to-a-punching-bag mode (four, six, and eight-sensor modes).  New to OutFox     gddm - A drum mode supporting six-part (five drums and one pedal), nine-part (seven drums, bass pedal, hi-hat pedal), and 10-part (\u0026ldquo;Real\u0026rdquo;) styles, modelled upon the mechanics of the arcade rhythm game Drummania). We support the DTX file format, which is used with simulators for the game such as DTXMania. gdgf (formerly guitar prior to OutFox-alpha-4.9.8) - A guitar mode supporting three-fret and five-fret styles, modelled upon the mechanics of the arcade rhythm game GuitarFreaks. gh - A five-fret guitar mode modelled upon the mechanics of once-popular console games originating from North America. taiko - A \u0026ldquo;don da don\u0026rdquo; styled mode. Support for .TJA files will added in the future.  Future game types    These are proposed and are scheduled on the roadmap. Limitations or code problems may delay or change these modes, so there is no date or ETA given.\n drum - A MIDI-based drum mode with 20 parts simulating a full Yamaha DTX drum kit. karaoke - A (\u0026hellip;do i need to explain this?) singing mode. Will happen if Squirrel gets off his butt. jam - A mode properly supporting o2Jam and its modes, with full .OJM loader support. piu - A major refactoring to make it more accurate to the mainline series.  "},{"id":58,"href":"/user-guide/setup/getting-started/","title":"Getting started","parent":"Setup","content":"To obtain the best experience, there are a few things you should do after installing Project OutFox. Some of these instructions assume usage of the included default theme (Soundwaves).\nSelecting a game type    When launching Project OutFox for the first time or without save data present, you will be prompted to select which game type you would like to begin with. Project OutFox supports a variety of game types, which you can learn about here, which simulate different types of rhythm games (including button layouts and, where applicable, gameplay behaviours specific to the game type). Game types are further divided into styles, which include chart types such as single, double, etc.\nTip: You can switch between game types at any time using the \u0026ldquo;Select Game\u0026rdquo; button on the main menu.  Configuring your controls    Each game type has its own default keyboard configuration; dance, for example, maps the first player to the arrow keys (when playing on keyboard, this is often referred to as the \u0026ldquo;index\u0026rdquo; playstyle). To configure your button mappings, go to Options \u0026gt; Input \u0026amp; Calibration \u0026gt; Config Key/Joy Mappings.\nUse the arrow keys to select an item to map, press Enter, and then press the button on the keyboard or controller you want to use. You can have multiple button assignments for each command.\nProject OutFox supports a wide variety of controllers and even arcade hardware. By default, the game operates with a HIDAPI and XInput-compliant input engine. If your controller does not perform as well or function as expected, you can switch to the alternate XInput input mode from the Experimental Options menu. XInput will sometimes also require you to map your controller to the input engine\u0026rsquo;s virtual gamepad, allowing the game to properly interface with the device. The Map Controller screen is available from the Input \u0026amp; Calibration menu.\nCalibrate your audio sync    !\u0026gt; Notice: Interactive calibration only works under the dance game type. If you are using a differtent game type, temporarily switch to dance, and switch back when you are done.\nIn a rhythm game, timing is everything. But latency produced by your audio outputs can affect your accuracy. You can interactively adjust the audio offset using the Calibrate Audio Sync option in the Input \u0026amp; Calibration menu.\nA song will play with a pattern of alternating notes; in the dance game type, they will be left and right arrows. Tap them to the rhythm based on what you hear. Every 24 notes, your inputs will be used to calculate a new offset; watch for \u0026ldquo;Perfect\u0026rdquo; and \u0026ldquo;Flawless\u0026rdquo; judgements.\nThe song will continue playing on a loop until you exit with the Back button (mapped to Escape by default), after which you will be given an opportunity to save the changes. If you wish to calibrate in-game with your song of choice, you can press F6 twice during gameplay to enable AutoSync Machine, which will last until the end of the song or when exited with the Back button. A message will appear asking to confirm your changes and if you wish to apply them or not.\nCreate a profile    While Project OutFox can save some data to a global \u0026ldquo;machine profile\u0026rdquo;, it is recommended that you create a local profile so you can save personal high scores, as well as player settings (such as modifiers) that can persist between sessions.\nYou can manage profiles from Options \u0026gt; Profiles. From here you can create a profile, and edit existing profiles.\nFrom the profile editor (highlight a profile and press Start, and then select \u0026ldquo;Edit profile\u0026rdquo;), you can input fitness-related information, change the layout of the optional \u0026ldquo;Detailed Stats\u0026rdquo; pane during gameplay, and add an avatar to your profile (avatars are loaded from the Appearance/Avatars directory).\nInstall songs    While Project OutFox does include a few sample songs, you will probably want to add more. We support a number of formats, including SM, SSC, SMA, DWI, BMS, and KSF.\nThe Songs folder in Project OutFox is divided into Groups (also sometimes known as \u0026ldquo;packs\u0026rdquo;). Groups, in turn, contain folders for each song.\nSongs │ └───My Group │ │ │ └───My Song │ │ mysong.ssc │ │ mysong.ogg │ │ mysong-bg.png │ │ mysong-bn.png │ │ mysong-jk.png Packs are typically distributed as ZIP files. Extract the archive with your preferred software, and copy the group folder containing the song directories to the Songs folder like so.\nNote: If the songs do not appear, be sure to check if the group folder actually containing the song folders is too deep in the folder hierarchy.  Note: If a song is not contained inside a group folder, but instead on the root Songs directory, the game will stop loading to let you know of the Song folder in question.  Next steps    The only thing left to do is have fun! If you need more help with Project OutFox, check out the other pages in our wiki documentation, and join other members of our community on our Discord server or forum.\nThank you for supporting Project OutFox!\n"},{"id":59,"href":"/dev/mods/Mods-11-ModSplines/","title":"ModSplines","parent":"Guide to Modifiers","content":"ModSplines is a system that allows for arbitrary note pathing through modifiers. This system is based off the spline system used in NotITG, which means it is usable alongside the pre-existing SM5 spline system and other modifiers, too.\nPoints are positioned like they are for Gradient modifiers, meaning in multiples of ARROW_SIZE away from the receptor.\nIn SM5, this is only accessible through the PlayerOptions functions, while NotITG has functions available in Player and also has modstring versions available (Though, it\u0026rsquo;s recommended to use the lua functions instead.)\nPoint and column numbering start at 1 in SM5, while it starts at 0 in NotITG.\nTo stop the current chain of spline points, a \u0026lsquo;null point\u0026rsquo; (Where both position and magnitude are at zero) can be used as a \u0026lsquo;null terminator\u0026rsquo; or sorts. This is only applicable for points after the first.\nThe following types are avaiable for modsplines (designated as \u0026lt;axis\u0026gt;):\n X (Positioning on the x axis, affects receptors \u0026amp; notes. Works in multiples of ARROW_SIZE) Y (Positioning on the y axis, affects receptors \u0026amp; notes. Works in multiples of ARROW_SIZE. The quirks of SpiralY apply here if holds or rolls are involved.) Z (Positioning on the z axis, affects receptors \u0026amp; notes. Works in multiples of ARROW_SIZE) RotX (Rotation on the x axis, affects notes only. Works in radians. Known as \u0026ldquo;RotationX\u0026rdquo; in NotITG, but uses RotX for functions. Also affects hold heads in SM5 without extra mods needed.) RotY (Rotation on the y axis, affects notes only. Works in radians. Known as \u0026ldquo;RotationY\u0026rdquo; in NotITG, but uses RotY for functions. Also affects hold heads in SM5 without extra mods needed.) RotZ (Rotation on the z axis, affects notes only. Works in radians. Known as \u0026ldquo;RotationZ\u0026rdquo; in NotITG, but uses RotZ for functions. Also affects hold heads in SM5 without extra mods needed.) Zoom (Zoom all three axis with the Mini calculations, affects receptors \u0026amp; notes. Known as \u0026ldquo;Size\u0026rdquo;, \u0026ldquo;Tiny\u0026rdquo; (Modstring only) or \u0026ldquo;Zoom\u0026rdquo; (Modstring only) in NotITG) SkewX (Aribtrary amounts of skewx, affects receptors \u0026amp; notes. Works like NoteSkewX. Known as \u0026ldquo;Skew\u0026rdquo; in NotITG) SkewY (Arbitrary amounts of skewy, affects receptors \u0026amp; notes. Works like NoteSkewY. Not available in NotITG v4.0) Stealth (Arbitrary amounts of stealth.)  The limit is 40 points per axis per column.\nModSplineEnable    Desc: This function turns on/off splines for the designated axis, allowing for saving performance when modsplines are not needed. In NotITG, this does not exist, as modsplines are always \u0026lsquo;on\u0026rsquo;.\nQuirks: This does not clear the modsplines themselves.\nPlayerOptions format: ModSpline(\u0026lsquo;ModSplineAxis_\u0026lt;axis\u0026gt;\u0026rsquo;, \u0026lt;enable\u0026gt;)\nModSpline    Desc: This function sets the spline point to have a given position and magnitude.\nQuirks: The position is not tweenable. Giving only three first three parameters returns the current value, position and rate for the point. Using this will not enable modsplines for the given axis. NotITG expects magnitudes and positions in multiples of 100, similar to what a modstring would parse.\nPlayerOptions format: ModSpline(\u0026lsquo;ModSplineAxis_\u0026lt;axis\u0026gt;\u0026rsquo;, \u0026lt;column\u0026gt; (nil sets all columns), \u0026lt;point\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;position\u0026gt;, \u0026lt;approach rate\u0026gt;)\nNotITG Player format: Set\u0026lt;axis\u0026gt;Spline(\u0026lt;point\u0026gt;, \u0026lt;column\u0026gt; (-1 sets all columns), \u0026lt;magnitude\u0026gt;, \u0026lt;position\u0026gt;, \u0026lt;approach rate\u0026gt;)\nNotITG modstring format: spline\u0026lt;column\u0026gt;\u0026lt;axis\u0026gt;\u0026lt;point\u0026gt; for magnitude (omitting column hits all columns) \u0026amp; spline\u0026lt;column\u0026gt;\u0026lt;axis\u0026gt;offset\u0026lt;point\u0026gt; for position (omitting column hits all columns).\nModSplineTypeSetting    Desc: This function sets what interpolation type the modsplines for a given axis will use.\nThe following types are available (denoted as \u0026lt;type\u0026gt;):\n \u0026lsquo;SplineType_Linear\u0026rsquo; (Linear interpolation, the default in both SM5 and NotITG) \u0026lsquo;SplineType_Cosine\u0026rsquo; (Cosine interpolation, magnitude must be between 0 and 100% in NotITG) \u0026lsquo;SplineType_Cubic\u0026rsquo; (Cubic bezier interpolation, magnitude must be over 100% in NotITG)  Quirks: NotITG only has this available through modstrings, and affects all columns in both SM5 and NotITG.\nPlayerOptions format: ModSplineTypeSetting(\u0026lsquo;ModSplineAxis_\u0026lt;axis\u0026gt;\u0026rsquo;, \u0026lt;type\u0026gt;) NotITG modstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; spline\u0026lt;axis\u0026gt;type\nModSplineReset    Desc: This function resets all spline points for the given axis on all columns. NotITG allows for column-specific clearing through modstring, but not their functions.\nQuirks: Unlike a normal reset, this instantly resets the splines to zero by setting the approach rate to 100000.\nPlayerOptions format: ModSplineReset(\u0026lsquo;ModSplineAxis_\u0026lt;axis\u0026gt;')\nNotITG Player format: Reset\u0026lt;axis\u0026gt;Splines()\nNotITG modstring format: spline\u0026lt;column\u0026gt;\u0026lt;axis\u0026gt;reset (omitting column hits all columns)\nPreserveModSplines    Desc: When turned on, modsplines will no longer be cleared whenever \u0026ldquo;clearall\u0026rdquo; is passed into the modstring parser. Useful when working with ModSplines in modfile templates that use clearall.\nQuirks: N/A\nPlayerOptions format: PreserveModSplines(\u0026lt;enable\u0026gt;)\nNotITG Player format: NoClearSplines(\u0026lt;enable\u0026gt;)\nExample:    SM5:\n--{point position, x magnitude (linear), z magnitude (cosine), rotz magnitude (cubic)} local splinetable = { {0.0, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}},--point 1 (placed at receptor) {1.5, {-1, 1, -1, 1}, {-1, 1, -1, 1}, {-math.pi/2, -math.pi/4, math.pi/4, math.pi/2}},--point 2 {3.0, { 2, 2, -2, -2}, { 3, 3, -3, -3}, { math.pi/2, math.pi/4, -math.pi/4, -math.pi/2}},--point 3 {4.5, {-3, -3, 3, 3}, {-3, -3, 3, 3}, { -math.pi, -math.pi/2, math.pi/2, math.pi}},--point 4 {6.0, { 4, -4, 4, -4}, { 1, -1, 1, -1}, { math.pi, math.pi/2, -math.pi/2, -math.pi}},--point 5 } for pn=1,2 do local a = po[pn] a:ModSplineEnable(\u0026#39;ModSplineAxis_X\u0026#39;, true, true)-- Enable the needed spline axis. :ModSplineEnable(\u0026#39;ModSplineAxis_Z\u0026#39;, true, true) :ModSplineEnable(\u0026#39;ModSplineAxis_RotZ\u0026#39;, true, true) :ModSplineTypeSetting(\u0026#39;ModSplineAxis_Z\u0026#39;, \u0026#39;ModSplineType_Cosine\u0026#39;, true)-- Set the desired interpolation types. :ModSplineTypeSetting(\u0026#39;ModSplineAxis_RotZ\u0026#39;, \u0026#39;ModSplineType_Cubic\u0026#39;, true) for i,v in ipairs(splinetable) do --v is the entry for a point. for col=1,4 do --Comment out the lines below as desired to see the splines on their own. --Note that all three at once may be too messy... --a:ModSpline(\u0026#39;ModSplineAxis_X\u0026#39;, col, i, v[2][col], v[1], 10000) a:ModSpline(\u0026#39;ModSplineAxis_Z\u0026#39;, col, i, v[3][col], v[1], 10000) a:ModSpline(\u0026#39;ModSplineAxis_RotZ\u0026#39;, col, i, v[4][col], v[1], 10000) end end end NotITG:\n--{point position, x magnitude (linear), z magnitude (cosine), rotz magnitude (cubic)} local splinetable = { {0.0, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}},--point 1 (placed at receptor) {1.5, {-1, 1, -1, 1}, {-1, 1, -1, 1}, {-math.pi/2, -math.pi/4, math.pi/4, math.pi/2}},--point 2 {3.0, { 2, 2, -2, -2}, { 3, 3, -3, -3}, { math.pi/2, math.pi/4, -math.pi/4, -math.pi/2}},--point 3 {4.5, {-3, -3, 3, 3}, {-3, -3, 3, 3}, { -math.pi, -math.pi/2, math.pi/2, math.pi}},--point 4 {6.0, { 4, -4, 4, -4}, { 1, -1, 1, -1}, { math.pi, math.pi/2, -math.pi/2, -math.pi}},--point 5 } for pn=1,2 do local a = SCREENMAN:GetTopScreen():GetChild(\u0026#39;PlayerP\u0026#39;..pn) GAMESTATE:ApplyModifiers(\u0026#39;*-1 100 splineztype, *-1 200 splinerotationztype\u0026#39;, pn) if a then for i,v in ipairs(splinetable) do --v is the entry for a point. for col=1,4 do --Comment out the lines below as desired to see the splines on their own. --Note that all three at once may be too messy... --a:SetXSpline(i-1, col-1, v[2][col]*100, v[1]*100, -1) a:SetZSpline(i-1, col-1, v[3][col]*100, v[1]*100, -1) a:SetRotZSpline(i-1, col-1, v[4][col]*100, v[1]*100, -1) end end end end Video Example (Shows only the z and rotz splines):\nModSpline video example\n"},{"id":60,"href":"/dev/actors/ActorsLua-Anatomy+Structure/","title":"Anatomy of a Lua actor","parent":"Lua and Actors","content":"Every actor in SM5 follows a standart general structure, with ActorFrames being more flexible in how they\u0026rsquo;re constructed.\nGeneral layout    Def.Actor { Name= \u0026#34;Example Actor\u0026#34;, InitCommand= function(self) self:zoom(100) end, OnCommand= function(self) self:linear(2):x(30) end, } Every actor starts with a Def. prefix, followed by the actor type itself. An actor can have a name and commands. These commands could be anything, as long as it\u0026rsquo;s suffixed with a Command or MessageCommand, depending on the type of commands needed.\nNames allow one to easily grab the actor through functions like GetChild, but there are other exampled given later.\nWhen the definition is complete, the actor has to be \u0026ldquo;returned\u0026rdquo; for the game to see it. Most of the time, ActorFrames are usually what\u0026rsquo;s returned instead of just a single actor.\nActorFrames and how to build them    ActorFrames can hold other actors. The Def. format is set up like any other lua table, allowing for creating actors in batches. Because of this, there are multiple ways to build an ActorFrame.\nInline building    Actors can be explicitly placed into an ActorFrame like this:\nDef.ActorFrame{ Def.Actor{ --Commands and stuff go here. }, Def.Sprite{ --More commands and stuff go here. } } Concatenation    Because lua tables can be concatenated (added) to each other, so can ActorFrames.\nThis can allow for programatically creating Actors in batches as needed.\nHowever, if one does not plan on creating actors programmaticly, then a simple return Def.ActorFrame{... is all that\u0026rsquo;s needed. Storing it into a local variable that gets returned will waste resources.\nThere are two ways to add onto an actorframe.\nMethod 1 (indexing):\nlocal t = Def.ActorFrame{ Def.Sprite{ --commands \u0026amp; stuff }, Def.BitmapText{ --who even knows }, } t[#t+1] = Def.Actor{ --It\u0026#39;s the third actor } return t Method 2 (lua concatenation):\nreturn Def.ActorFrame{ Def.Sprite{ --commands \u0026amp; stuff }, Def.BitmapText{ --who even knows }, } .. Def.Actor{ --It\u0026#39;s the third actor } Commands    Commands come in two variants: \u0026ldquo;Commands\u0026rdquo; and \u0026ldquo;Messages\u0026rdquo;.\nCommands are usually isolated to a single actor, with a few exceptions. Messages are commands that are meant to be in multiple actors and can be invoked at around the same time on all actors with a \u0026ldquo;Broadcast\u0026rdquo;.\nMESSAGEMAN:Broadcast(\u0026#34;SpecialMove\u0026#34;, {funnymove = 10, absolute = false}) (ex: this would run \u0026ldquo;SpecialMoveMessageCommand\u0026rdquo; on all actors that have this command defined, with a parameter table being passed in. Not all actors might use this table, even though they might have the command defined.)\nIf one needs to manually queue a command or message, the queuecommand or queuemessage functions can be used.\nThese queued commands run only after all previous tweens have finished.\nIf a command has to run instantly, playcommand can be used for that.\nIf one wants to pass custom parameters into the command, a single table has to be used to wrap every parameter passed.\nThese command functions generally take two paramters: The actor calling the function (often called self), and the parameters table passed into the command. The paramters table is optional.\nObtaining Childs and ActorFrame Levels    When using Actors, you can use self:GetParent() and self:GetChild() to get elements from other ActorFrames or actors. self:GetChild() can only be used by ActorFrames.  You can think of an ActorFrame as a tree of objects. This is the original table. And now you\u0026rsquo;ve called GetParent on the ActorProxy. Def.ActorFrame{ Def.BitmapText{ Name=\u0026#34;MyText\u0026#34; }, * Def.ActorProxy{ OnCommand=function(self) self:GetParent() end }, }     graph LR AF[Def.ActorFrame] --- BT(Def.BitmapText) \u0026 AP(Def.ActorProxy) style AF stroke-width:4px style BT stroke-width:4px style AP fill:#585,color:#fff,stroke-width:4px    When calling it, you go back up a level, which in this case, it will become ActorFrame.   graph LR AF(Def.ActorFrame) --- BT(Def.BitmapText) \u0026 AP(Def.ActorProxy); style AF fill:#585,color:#fff,stroke-width:4px style BT stroke-width:4px style AP stroke-width:4px    In this new location, we get the MyText actor, which can be achieved by calling the GetChild command, and can also return back to the ActorProxy, as we\u0026rsquo;re now in a level that can get both actors. Def.ActorFrame{ * Def.BitmapText{ Name=\u0026#34;MyText\u0026#34; }, Def.ActorProxy{ OnCommand=function(self) self:GetParent():GetChild(\u0026#34;MyText\u0026#34;):spin() end }, }   graph LR AF(Def.ActorFrame ) -- BT(Def.BitmapText) \u0026 AP(Def.ActorProxy); style AF fill:#f85,color:#fff,stroke-width:4px style BT fill:#585,color:#fff,stroke-width:4px style AP fill:#585,color:#fff,stroke-width:4px    The command uses a String argument, but can also grab from nested tables in case of an ActorFrame not having actors with names assigned. On those cases, actors are just indexed on that ActorFrame set.\nExample Without Names    Def.ActorFrame{ OnCommand=function(self) -- If we want to get to the BitmapText, we\u0026#39;ll need to get the second entry on the ActorFrame. self:GetChild(\u0026#34;\u0026#34;)[2] -- returns the BitmapText actor. end, Def.Sprite{}, Def.BitmapText{} } Example With Names    Def.ActorFrame{ OnCommand=function(self) -- If we want to get to the BitmapText, we\u0026#39;ll need to get the \u0026#34;Text\u0026#34; actor. self:GetChild(\u0026#34;Text\u0026#34;) -- returns the BitmapText actor. end, Def.Sprite{ Name = \u0026#34;Image\u0026#34; }, Def.BitmapText{ Name = \u0026#34;Text\u0026#34; } } "},{"id":61,"href":"/dev/mods/Mods-12-Chart-Mods/","title":"Chart modifiers","parent":"Guide to Modifiers","content":"Chart Modifiers    Chart modifiers affect the chart itself, meaning what has to be stepped changes. These cannot be called during gameplay, but can be called through attacks \u0026amp; course files. All of these are boolean modifiers. At the moment, some of these aren\u0026rsquo;t properly set up for any game other than dance.\n\u0026ldquo;Transform\u0026rdquo; Modifiers    Transform modifiers add or remove or alter notes from the chart, affecting how the chart has to be played. Some of these might disqualify your score depending on what version of SM is played. The list is shown in application order, from first to apply to last. (With exception to the first one).\nAttackMines (SM5 only)    Desc: When active, all mines apply a random attack when hit, and all other effects that come with hitting mines still happens.\nQuirks: Appears to be activatable mid-gameplay?\nPlayerOptions format: AttackMines()\nModstring format:  attackmines\nLittle    Desc: Removes all notes that aren\u0026rsquo;t on 4ths.\nQuirks: N/A\nPlayerOptions format: Little()\nModstring format:  little\nNoRolls    Desc: All rolls become normal holds.\nQuirks: N/A\nPlayerOptions format: NoRolls()\nModstring format:  norolls\nNoHolds    Desc: All holds are replaced with a single tap note where the hold would start. Has a modstring alias of \u0026ldquo;nofreeze\u0026rdquo;.\nQuirks: N/A\nPlayerOptions format: NoHolds()\nModstring format:  noholds\nNoMines    Desc: All mines are removed from the chart.\nQuirks: N/A\nPlayerOptions format: NoMines()\nModstring format:  nomines\nNoJumps    Desc: All jumps are removed from the chart, meaning a single note would be left where a jump would have been. Also affects hands (3 notes at once) and quads (4 notes at once).\nQuirks: N/A\nPlayerOptions format: NoJumps()\nModstring format:  nojumps\nNoLifts (SM5 only)    Desc: Removes all lift notes from the chart.\nQuirks: N/A\nPlayerOptions format: NoLifts()\nModstring format:  nolifts\nNoFakes (SM5 only)    Desc: Removes all fake notes from the chart.\nQuirks: N/A\nPlayerOptions format: NoFakes()\nModstring format:  nofakes\nNoHands    Desc: Removes notes until there are no more than two columns being hit at a given time.\nQuirks: N/A\nPlayerOptions format: NoHands()\nModstring format:  nohands\nNoQuads    Desc: Removes notes until there are no more than three columns being hit at a given time.\nQuirks: N/A\nPlayerOptions format: NoQuads()\nModstring format:  noquads\nNoStretch    Desc: Eliminates jumps (2 notes at once) such that there\u0026rsquo;s only one note left where there would be two. Does not affect hands (3 notes at once) or quads (4 notes at once).\nQuirks: N/A\nPlayerOptions format: NoStretch()\nModstring format:  nostretch\nBig    Desc: Adds 8th notes between the 4th notes when possible.\nQuirks: N/A\nPlayerOptions format: Big()\nModstring format:  big\nQuick    Desc: Adds 16th notes between the 8th notes when possible.\nQuirks: N/A\nPlayerOptions format: Quick()\nModstring format:  quick\nBMRize    Desc: Performs Big, then Quick on the chart, supposedly \u0026ldquo;BMR-izing\u0026rdquo; it.\nQuirks: N/A\nPlayerOptions format: BMRize()\nModstring format:  bmrize\nSkippy    Desc: Adds 16th notes between 4th notes.\nQuirks: N/A\nPlayerOptions format: Skippy()\nModstring format:  skippy\nMines    Desc: Adds more mines.\nQuirks: N/A\nPlayerOptions format: Mines()\nModstring format:  mines\nEcho    Desc: Adds 8th note \u0026ldquo;echos\u0026rdquo; after all tap notes.\nQuirks: N/A\nPlayerOptions format: Echo()\nModstring format:  echo\nWide    Desc: Turns all single 4th notes into jumps.\nQuirks: N/A\nPlayerOptions format: Wide()\nModstring format:  wide\nStomp    Desc: Turns all relatively isolated 4th notes into jumps.\nQuirks: N/A\nPlayerOptions format: Stomp()\nModstring format:  stomp\nPlanted    Desc: Turns notes into holds such that there is at least one hold being held throughout the whole chart.\nQuirks: N/A\nPlayerOptions format: Planted()\nModstring format:  planted\nFloored    Desc: Turns notes into holds such that there is at least two holds being held throughout the whole chart.\nQuirks: N/A\nPlayerOptions format: Floored()\nModstring format:  floored\nTwister    Desc: Turns notes into holds such that there is at least three holds being held throughout the whole chart.\nQuirks: N/A\nPlayerOptions format: Twister()\nModstring format:  twister\nHoldRolls    Desc: Turns all holds into rolls. Goes by \u0026ldquo;holdstorolls\u0026rdquo; in ITG.\nQuirks: N/A\nPlayerOptions format: HoldRolls()\nModstring format:  holdrolls\n\u0026ldquo;Turn\u0026rdquo; Modifiers    Turn modifiers shift around the chart, but do not add or remove any notes. These are applied after the transform modifiers, so inserted notes get affected as well. They can be turned off all at once by using this modstring: 0% turn\nMirror    Desc: The notes are mirrored across the field.\nQuirks: N/A\nPlayerOptions format: Mirror()\nModstring format:  mirror\nBackwards (SM5 only)    Desc: The chart is \u0026lsquo;rotated\u0026rsquo; 180 degrees, which may not be the same as \u0026lsquo;mirror\u0026rsquo;.\nQuirks: N/A\nPlayerOptions format: Backwards()\nModstring format:  backwards\nLeft    Desc: The chart is \u0026lsquo;rotated\u0026rsquo; 90 degrees to the left.\nQuirks: N/A\nPlayerOptions format: Left()\nModstring format:  left\nRight    Desc: The chart is \u0026lsquo;rotated\u0026rsquo; 90 degrees to the right.\nQuirks: N/A\nPlayerOptions format: Right()\nModstring format:  right\nShuffle    Desc: Mixes around where the notes are.\nQuirks: N/A\nPlayerOptions format: Shuffle()\nModstring format:  shuffle\nSoftShuffle    Desc: Randomly performs either not shuffling, swapping of L+R, swapping of U+D or mirroring on every row.\nQuirks: N/A\nPlayerOptions format: SoftShuffle()\nModstring format:  softshuffle\nSuperShuffle    Desc: Runs Shuffle, then performs an extra shuffle on the tap notes (includes normal taps, fakes, mines and lifts) alone.\nQuirks: N/A\nPlayerOptions format: SuperShuffle()\nModstring format:  supershuffle\n"},{"id":62,"href":"/user-guide/setup/controllers/","title":"Configure controllers","parent":"Setup","content":"On Alpha 4.5 and newer, we switched to using an XInput-compliant input system.\nDue to these changes, not all controllers (such as gamepads, dance pads, and other rhythm game-specific controllers) are guaranteed to function with OutFox out of the box (even if they were supported on earlier versions), unless a controller mapping profile has been created for that specific controller.\nWe would like to thank Josen Tiamat for writing these new instructions for how to configure your controllers for use on OutFox.\nStep 1: Things to check for first    So you started up the game and boom you go to “Config Key/Joy Mappings” and set up your controller, skip this guide because you’re done with what you need to do.\nYou can’t configure your Config Key/Joy Mappings! OH NO! (I will get to this)    Test your input, see if your keys are mapped and if so which ones. By pushing the buttons on the pad it’ll say something to the effect of “Key B 12 – Not Mapped” and if you step/press on the key and nothing shows up it’s not mapped, no big proceed to the next step to set it up.\nStep 2: The Easy Way    So on to the good stuff; OutFox has a built in gamepad tool that will automatically take care of most of this for you\nYou push “Enter” on the keyboard and push the appropriate button on the dance pad/etc. to map the buttons to the button you want.\nI would recommend using this screen for most controllers on pc, it takes a lot of the guess work out of the whole thing. After setting this up repeat Step 1 if your keys show up as “Unmapped” that’s great go to the “Config Key/Joy Mappings” and do your thing, you’re done with the guide!\nIf it still doesn\u0026rsquo;t work\u0026hellip;\nStep 3: The not super intuitive way (SDL2 Gamepad Tool)    There is a nifty tool around called SDL2 Gamepad Tool. You connect your controller (via USB or Bluetooth or however you desire to connect your controller to the PC), and it’ll show up on the top drop down menu.\n Click \u0026ldquo;Create a New Mapping\u0026rdquo; Step/Press the input you want for those buttons much like you would on Step 2 of this procedure. Skip the rest. Save the Mapping String. Copy the Mapping String. Go to where you installed the game, and paste the string into Data/gamecontrollerdb.txt  A note    The “#” is useful for when you want to have different Mapping Strings for the same gamepad, it basically hides the mapping string from the program reading it. I made 3 different mapping for testing the the program would only recognize one, then I hid the mapping string with a hashtag (pound symbol for you oldies around) and the one not hidden was now seen by the program.\nBasically, don’t do multiple mapping strings on the same controller (even if you change the name); the program will work with one at a time and honestly one is all you need. You should be good to go and repeat Step 1 and then go to “Config Key/Joy Mappings” right after and set up your pad.\nStill isn\u0026rsquo;t working?    This hasn’t quite happened to me (I tried with the PS3 DDR mat) but there are 2 types of controllers, a “Hat” type and not. So let’s say for example you hook up a pad/controller and the Dpad you configured up down left and right but “Config Key/Joy Mappings” only allows you to push one of them and the rest don’t work.\nTry configuring the directions to the analog stick instead and then mapping them again. I don’t think you should have to but it works, I’ve tested this with my PS4 Controller and in fact you can play with analog input.\nXInput interfering with HIDAPI mode, and breaking axis pads    If you have an axis pad which is showing two sets of buttons, or simply just cancelling out, and you cannot seem to map it in game, this is what you need to do to fix it. The pad showing two buttons will look like this:\nI am pressing the left Arrow, but getting two sets of inputs. On Linux and MacOS, this can be due to an installed xbox360 driver, or the xpad module intercepting the events, and reporting an axis anyway. The next patch of OutFox mitigates this issue a little bit, but it still is a pain.\nTo fix this, you need to write down the BUTTON numbers shown on screen, so you get a list for all four arrows:\nDown=Joy1_Button 2 Left=Joy1_Button 1 Right=Joy1_Button 4 Up=Joy1_Button 3 Make sure that you close the game. You can now navigate to your save folder, and look for your keymaps.ini file and set the buttons manually, so you can basically ignore the axis values given by the xpad driver. you need to add the mapping before the ::: as shown below:\nYou can save this, and then start the game again, and your pad will be mapped.\nDown=Joy1_Button 2 Left=Joy1_Button 1 Right=Joy1_Button 4 Up=Joy1_Button 3 Make sure that you close the game. You can now navigate to your save folder, and look for your keymaps.ini file and set the buttons manually, so you can basically ignore the axis values given by the xpad driver. you need to add the mapping before the ::: as shown below: You can save this, and then start the game again, and your pad will be mapped.\n"},{"id":63,"href":"/user-guide/controllers/controller_mapping_drums/","title":"Drums Mapping","parent":"Controllers and Peripherals","content":"    Madcatz Rock Band 4 Drum Kit (Playstation 4, Bluetooth)     Madcatz Rock Band 4 Drum Kit (Playstation 4, Bluetooth)       Outfox Joypad Button Physical Device Name popn          Button 1 Blue Pad and Cym Right Yellow   Button 2 Green Pad and Cym Right Green   Button 3 Red Pad Red   Button 4 Yellow Pad and Cym Right Blue   Button 5 Right Pedal    Button 6 Left Pedal     "},{"id":64,"href":"/dev/mods/","title":"Guide to Modifiers","parent":"Developers and Creators","content":"Want your arrows to dance around to the music (as seen in Pump it Up PRO 2 and the StepMania/ITG Modfile Community)?\nWell, if you\u0026rsquo;re a fan of modifiers and attacks, this guide is for you!\nWhat are Mods/Attacks?    Modifiers (or Mods) apply all kinds of effects to the notes in a song - they can make the notes scroll in different directions, bounce to the beat, and many, many more things!\n You can manually turn on modifiers on any song by entering the player options menu (press start twice when you pick a song to play), and choosing Modifiers then Exit at the bottom. Mods in the Acceleration, Effects, Appearance, and Scroll categories work best for attacks - feel free to play around!\n Attacks are one of the easiest ways to add Modifiers to your simfile - Attacks will apply whatever mods you want at specific times you set in the song!\nFor StepMania 5/Outfox-based arcade cabinets (and SM5-based games like PIU Infinity), Attacks can even be used in USB custom songs and charts (if enabled)!\nAdding Attacks to a Simfile    We\u0026rsquo;ll assume you\u0026rsquo;ve already created a simfile, and know a bit about how to use the editor here.\nFirst off:\n  Open a Simfile in the Outfox editor (Title Screen \u0026gt; Edit/Share \u0026gt; Edit Songs/Steps). Pick a song, then pick a difficulty (chart).\n  When editing the chart, press Enter where you want the Modifier to start.\n  Choose Modifiy attacks at current beat at the bottom of the menu.\n   Choose Add Attack\n  Here, you\u0026rsquo;ll enter a Modifier to get applied:\n Many modifiers from the Player Options menu will work (Beat, Drunk, etc), for now just type Beat and press Enter. Any attacks you add will show up to the right of the notes, both when editing and playing a simfile in the editor.     Press P to play your song - you should see the attack you added scroll up the screen with the notes.\n When the attack with your Beat modifier scrolls to the top of the screen, the arrows will start bouncing to the beat!    Editing/Removing Attacks    Attacks only last a few seconds by default - to make it last longer you\u0026rsquo;ll need to edit the attack\u0026rsquo;s length.\nEdit an Attack      In the editor, go to the beat where the Attack you want to edit is, and press Enter.\n  All Attacks on that beat are listed - pick the one you want to edit (arrow keys/enter).\n If you don\u0026rsquo;t see the attack you just added, make sure you\u0026rsquo;re lined up to the Exact time the Attack is at!    From here, press Enter on any of these options to change them:\n Starting time: When this attack starts. It\u0026rsquo;s better to remove/re-add an attack if you want to change when it starts. Seconds Remaining: How long the attack lasts (defalt: 5 seconds) Attack 1: The mod you just added - press enter to change Add Mod: Pick this to add another mod to this attack    Remove an Attack      In the editor, go to the beat the Attack is on and press Enter.\n  Pick the attack you want to remove and press Enter.\n  Pick the Mod you want to remove and press Enter.\n  When asked for a new Mod, backspace all the letters in the mod and press Enter.\n When all Mods in an attack are removed, the Attack is auto-removed.    Mod Strength/Approach Rate    Mod Strength    Is Beat too wild? Not wild enough? You can fix that!\n To change how strong a mod is, add a percentage before it, like 50% Beat\n By default, any mods you add default to 100%. You can dial this down if you don\u0026rsquo;t want a mod to be as strong.\nPercentages above 100% are a-ok if you want really strong mods! Negative percentages like -50% Beat work too if you want to totally invert an effect (it might not be obvious on all mods, but it does work).\nFinally: No means the same thing as 0%. Say, if you have a Beat attack earlier in the song, you can turn it off with 0% Beat or No Beat - either works!\nThe difference between 50% Beat and 100% Beat\n In the above video - Left = 40% Beat, Right = 125% Beat\n  Mod Approach Rate    Want a mod to slowly fade in over time, or instantly go to max strength? You can change that too!\n To change how fast/slow a mod is applied, add a * and a number before the mod, like *2 Beat\n Higher numbers apply mods faster, lower numbers (decimals included!) make mods apply slower.\n*0.5 = Half as fast, *2 = Twice as fast.\n(The default *1 applies at a rate of 100% of a mod over 1 second)\n Mod approach rate can also combine with any strength, including 0%! If you want to get rid of a mod really fast, you can use an attack like *50 0% Beat.\n The difference between *0.5 Beat and *10 Beat\n In the above video - Left = *0.5 Beat (fades in half as fast), Right = *10 Beat (fades in 10x as fast!). They both get to the same strength at the end, but the left side takes longer to do so.\n Resources/What\u0026rsquo;s Next    Next up is to play around with Modifiers! Experiment with what effects you can get, and discover what you do/don\u0026rsquo;t like!\n What Mods Can I Use?    Lots, actually!\n Check out the Guide to Mods in the sidebar for a list of mods you can use!\n  Mods Resources      FMS Cat\u0026rsquo;s Flip-Invert site helps give you combinations of various mods to move the note columns across the screen. Just drag the receptors where you want them on-screen!\n (You can alternatively use the MoveX/Y/Zn mods to move single note columns, like MoveX1, MoveX2, etc)    Check out WinDEU\u0026rsquo;s Marathon Tutorial series - it focuses on older versions of StepMania (where some mods, like Drunk and Tipsy, have different names), but a lot of the info still applies to SM5/Outfox. The later videos in the series dive really deep into how some mods behave!\n How to set up Mods in Courses in also covered in earlier videos in the series (though again, focusing on older versions of StepMania)    You can join Project Outfox\u0026rsquo;s Discord server for more help from the community - feel free to ask mods/attacks-related questions in channels like #mods-coding-help.\n   My Mods Don\u0026rsquo;t Work!     Double check you\u0026rsquo;ve spelled your Mod name right - mods from older versions of the game (like OpenITG) may have different names in SM5/Outfox! You may get strange behavior if you add new attacks into a simfile before the last attack in the file.   Mod Behaviors Across Different Themes    Some mods you add (like Drunk, Tornado, Boomerang) may change behavior depending on the theme you\u0026rsquo;re currently using.\nIn older versions (like Stepmania 5.0/5.1), the theme\u0026rsquo;s internal resolution (HD vs non-HD themes, specifically SCREEN_HEIGHT) is used in calculations for certain mods. On these versions, these mods will behave differently on themes with different internal resolutions.\nIn Outfox, these calculations are performed based on a completely separate theme metric instead, ModifierHeight. If the theme changes this value, it will affect those calculations (and therefore mod behaviors, and is noted as doing so).\nPlan accordingly if you plan on playing your simfiles/chart edits on different versions/themes!\n Other Notes     Mods obey stops and BPM changes in songs. If your song stops while a mod like Beat is in effect, the notes will freeze in the middle of Beat\u0026rsquo;s animation, skewed to the sides. Earlier versions of StepMania can round the time a mod starts at if you save and exit a simfile in the editor, making it harder/impossible to edit in the future. If this happens, you\u0026rsquo;ll need to manually edit the mod lines under the #ATTACKS tag in your simfile\u0026rsquo;s .sm/.ssc files.  "},{"id":65,"href":"/user-guide/controllers/controller_mapping_guitars/","title":"Guitars Mapping","parent":"Controllers and Peripherals","content":"    Madcatz Rock Band 4 Guitar (Playstation 4, Bluetooth)     Madcatz Rock Band 4 Guitar (Playstation 4, Bluetooth)       Outfox Joypad Button Physical Device Name gh gdgm           Button 1 Blue Fret Fret 4 Fret 4   Button 2 Green Fret Fret 1 Fret 1   Button 3 Red Fret Fret 2 Fret 2   Button 4 Yellow Fret Fret 3 Fret 3   Button 5 Orange Fret Fret 5 Fret 5   Button 9 Share     Button 10 Options Whammy    Button 11 Solo Buttons (Any)     H-Up Strum Up Strum Up    H-Down Strum Down Strum Down     "},{"id":66,"href":"/dev/effects/EffectFiles-ModifierFiles/","title":"Modifier Files","parent":"Effect Simfiles","content":"These simfiles have modifiers that are scripted to happen at various points of the song. The difficulty can range between \u0026ldquo;trivial to read\u0026rdquo; to \u0026ldquo;may as well memorize the chart\u0026rdquo;.\nOften called \u0026ldquo;Modfiles\u0026rdquo; or \u0026ldquo;Modcharts\u0026rdquo;.\nThese usually use the FGCHANGES or BGCHANGES of a simfile to load the lua files (if any are used).\nDisclaimer: Make sure you\u0026rsquo;ve got making a chart down before starting to make modcharts! Good mods can\u0026rsquo;t save a bad chart!\nHow to Apply Modifiers    There are a few ways to go about this, and it varys depending on what version of SM is being used.\nApplyGameCommand (SM3.95/oITG/nITG)    ApplyGameCommand is a GameState function that provides a way to send modifiers among other commands. The first paramter is the command type followed by the parameters. (In this case, a modstring) The second parameter is what player to apply the command (1 = player 1). If not specified, it applies to all players.\nGAMESTATE:ApplyGameCommand(\u0026#34;mod, *0.5 420 beat\u0026#34;, 1) While it\u0026rsquo;s still available in SM5 (including OutFox), it\u0026rsquo;s not recommended because it applies mods to the \u0026ldquo;Preferred\u0026rdquo; ModsLevel, which means modifiers apply instantly (no transition), and they persist outside of the simfile. SM5.2 Doesn\u0026rsquo;t even have this function available.\n#MODS (Course files, SM3.95/oITG/nITG/SM5)    Old modfiles used to require going into marathon mode to play the scripted modifiers. Unlike most things, this is time-based due to charts being able to have stops.\n#MODS:TIME=0.000:END=10.000:MODS=*0.5 420 beat; #MODS:TIME=5.000:LEN=1.600:MODS=*2 50 stealth; (ex: Beat starts at 0 seconds and ends at 10. Stealth turns on at 5 seconds and ends 1.6 seconds later)\nNowadays, this is considered obsolete in favor of lua-powered modifiers. It\u0026rsquo;s still usuable in SM5.\n#ATTACKS (Simfiles, nITG/SM5)    Allows for the application of modifiers similar to what course files have. The syntax is exactly the same, just with MODS becoming ATTACKS.\n#ATTACKS:TIME=0.000:END=10.000:MODS=*0.5 420 beat; #ATTACKS:TIME=5.000:LEN=1.600:MODS=*2 50 stealth; nITG accepts #ATTACKS or #MODS inside the .sm file, while SM5 only accepts #ATTACKS in sm \u0026amp; ssc.\nThese do not load in course mode, however.\nApplyModifiers (nITG)    A dedicated function for applying modifiers without needing the processing overhead and \u0026ldquo;mod, \u0026quot; that ApplyGameCommand does.\nGAMESTATE:ApplyModifiers(\u0026#34;*0.5 420 beat\u0026#34;, 1) Often used as a replacement for ApplyGameCommand in nITG modfiles.\nPlayerOptions functions (SM5)    Every modifier has a setter function in PlayerOptions. This can be used in place of other functions. These are case-sensitive, though. If using strings, they\u0026rsquo;ll have to be parsed to make use of these functions.\nlocal po = {GAMESTATE:GetPlayerState(0):GetPlayerOptions(\u0026#39;ModsLevel_Song\u0026#39;), GAMESTATE:GetPlayerState(1):GetPlayerOptions(\u0026#39;ModsLevel_Song\u0026#39;)} po[1]:Beat(4.2, 0.5) SetPlayerOptions (SM5)    This function works by resetting the PlayerOptions for the given level, and setting it according to the string.\nGAMESTATE:GetPlayerState(PLAYER_1):SetPlayerOptions(\u0026#39;ModsLevel_Song\u0026#39;, \u0026#39;*0.5 420 beat\u0026#39;) Because it resets PlayerOptions, it might not be so useful for applying scripted modifiers.\nFromString (SM5.1 and onwards)    Like how ApplyModifiers is specifically for modstrings in nITG, FromString provides direct access to the string parser used for modifiers in ApplyGameCommand, and works very much like how ApplyGameCommand would.\nlocal po = {GAMESTATE:GetPlayerState(0):GetPlayerOptions(\u0026#39;ModsLevel_Song\u0026#39;), GAMESTATE:GetPlayerState(1):GetPlayerOptions(\u0026#39;ModsLevel_Song\u0026#39;)} po[1]:FromString(\u0026#34;*0.5 420 beat\u0026#34;) Modfile templates    Starting to make a modfile can seem really daunting if one does not know how to begin. Luckilly, there are many templates out there to help with creating modfiles.\nOnes made for Open/NotITG and SM3.95 are usually done with .xml files, and some rare .lua files.\nOnes made for SM5 are almost always .lua files.\nStepMania 5-Based templates      MTK\u0026rsquo;s OutFox port of Exschwasion\u0026rsquo;s easing template\n https://drive.google.com/open?id=1HfCFvTHZUI4dO_eAk4iN5mO3H61caHzE Lost of local variables used up in the main scope to preserve syntax. The place to put the actual calls is a little different.    XeroOl\u0026rsquo;s port of the \u0026ldquo;Mirin\u0026rdquo; template\n https://github.com/XeroOl/sm5-mirin Unknown if up to date.    Sudospective\u0026rsquo;s Kitsu Template\n https://github.com/Tiny-Foxes/kitsu-template Up to date: fully supports Project OutFox Fully compatible with the new tween system Object Orientated Template Easy to find update loop    OpenITG/NotITG/SM3.95 templates      Exschwasion\u0026rsquo;s easing template\n OpenITG: https://drive.google.com/open?id=1q_d8bJw80uJ4UBUWRj-4iKtTe1ORNkDl NotITG: https://drive.google.com/open?id=10J7B8EOeMAcS0WSvfcnni8UG7xbq2X66 Very popular \u0026amp; widely used. Modstrings are fully usable. Has ease functions so you\u0026rsquo;re not limited to just linear, accelerate, decelerate \u0026amp; spring.  These can be applied to modifiers \u0026amp; functions. Needs sustains to ensure the eases fully complete.   Has an \u0026ldquo;actions\u0026rdquo; table (at a given beat, a function runs or a message is broadcast)    XeroOl\u0026rsquo;s \u0026ldquo;Mirin\u0026rdquo; template\n https://github.com/XeroOl/notitg-mirin Documentation: https://xerool.github.io/notitg-mirin/ Gaining popularity. Supposed to be optimized (a lot more than the ease template) Allows for \u0026lsquo;custom\u0026rsquo; modifiers through node Has a plugin system to allow for extending the template.  https://github.com/XeroOl/notitg-mirin-plugins   Has ease functions  No sustains needed.   Aims to not leave behind global variables. [citation needed] Cannot use modstrings? [citation needed] difficulty to use vs ease template [citations needed]    TaroNuke\u0026rsquo;s \u0026ldquo;Wow! It\u0026rsquo;s Made\u0026rdquo; template\n Used during TaroNuke\u0026rsquo;s \u0026ldquo;Wow! It\u0026rsquo;s Made\u0026rdquo; streams where he wrote a modfile live.  https://www.twitch.tv/videos/321383917 https://www.twitch.tv/videos/321386003 https://www.twitch.tv/videos/321379794 https://www.twitch.tv/videos/321380780   Also pretty much how mods boot camp 3 files were made. What does it have?    Daikyi\u0026rsquo;s simple template\n https://cdn.discordapp.com/attachments/227819834480656384/493515557216452638/default.xml Super simple \u0026amp; basic. (So, might be good for beginners) Modstrings are fully usable via mods table. Has an \u0026ldquo;actions\u0026rdquo; table. Lots of comments for documentation.    Ky_Dash\u0026rsquo;s template\n https://github.com/KyDash/nitg-template \u0026ldquo;somewhat cursed\u0026rdquo; ???    FMS_Cat\u0026rsquo;s template\n Used in FMS_Cat\u0026rsquo;s modfiles. Mainly uses \u0026ldquo;build.js\u0026rdquo; to construct the xml files. CatEvent system for queueing everything? Everything is a function?    XeroOl\u0026rsquo;s Galaxy Mod Loader (XGML) template\n https://github.com/XeroOl/notitg-xgml Predecesor to mirin Considered deprecated/obsolete? Has addons to extend template functionality  https://github.com/XeroOl/notitg-xgml-addons   What else?    BrotherMojo\u0026rsquo;s template\n As seen in babaroque \u0026amp; blaster \u0026amp; mkdr?    WinDEU\u0026rsquo;s template\n As seen in Mods Boot Camp?    Cering\u0026rsquo;s template (forked from exsch?)\n As seen in NJSRT \u0026amp; Aster\u0026rsquo;s Astral Adventures + Conflict?    HeySora\u0026rsquo;s template\n As seen in purple people eater?    FMS_Cat\u0026rsquo;s Automaton template\n https://github.com/FMS-Cat/automaton-notitg-template    Jaezmien\u0026rsquo;s template\n https://github.com/Jaezmien/NotITG_Template    "},{"id":67,"href":"/user-guide/config/preferences/","title":"Preferences.ini","parent":"Features \u0026 Config","content":"Preferences.ini is a file that contains many of the system preferences. Some of them are accessible within Project OutFox\u0026rsquo;s settings menu, but some of them are only accessible by editing the file. Manual edits to Preferences.ini must be performed when the game is closed, or else they may be automatically overwritten.\nIt is located in the Save folder.\nList of parameters    AdditionalCourseFolders    Takes a comma-separated list of directories where additional course (.crs) files are stored.\nDefault value: nothing\nSee folder.\nAdditionalFolders    Takes a comma-separated list of directories where additional content folders are stored. Those additional folders could have all folders your OutFox installation root has.\nWhat\u0026rsquo;s the usage of this? Simple, share themes/noteskins/avatars..etc with any other installation of OutFox you have.\nValue Example:\nAdditionalFolders=C:\\AdditionalFolder\nC:\\AdditionalFolder │ └───Apperance │ │ │ └───Themes │ │Infinitesimal │ │SoundWaves Community Edition Default values: nothing\nSee folder.\nAdditionalSongFolders    Takes a comma-separated list of directories where additional song groups are stored. Those additional song folders are expect to have Group folders inside.\nWhat\u0026rsquo;s the usage of this? The best usage of this preference would be to have songs on another disk with maybe more space or faster so your main drive doesn\u0026rsquo;t get filled with songs.\nValue Example:\nAdditionalSongFolders=C:\\AdditionalSongs\nWhere C:\\AdditionalSongs should look like this\nC:\\AdditionalSongs │ └───PackName │ │ │ └───SongName │ │Music.ogg │ │Chart.sm AdditionalSongFolders can point to any valid path and doesn\u0026rsquo;t have to be on the same disk as OutFox.\nDefault value: nothing\nSee folder.\nAllowExtraStage    When event mode is off, allow the player to qualify for an extra stage.\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nAllowHoldForOptions    Allow the user to enter the player options menu by holding the start button when selecting a song. If set to 0, the user must press the start button twice instead.\nPossible values are 0 or 1. 0 being \u0026quot;Double tap\u0026quot; and 1 being \u0026quot;Hold\u0026quot;.\nDefault value: 1\nAllowMultipleHighScoreWithSameName    Allows multiple high score entries by the same user.\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 1\nAllowMultipleInstances    Allows multiple instances of Project OutFox to be opened.\nPossible values: 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nAllowMultipleToasties    Allows the legacy toasty animation to play multiple times in a single song.\nPossible values are 0 or 1. 0 being Of and 1 being On.\nDefault value: 1\nAllowMultiTexture    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nAllowSongDeletion    Allows the ability to delete a song on the Music Wheel by performing the following combination on the selected song:\nCTRL + Backspace\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nAllowUnacceleratedRenderer    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nAllowW1    Enables the W1 judgement (\u0026ldquo;Flawless\u0026rdquo;, \u0026ldquo;Marevelous\u0026rdquo;, \u0026ldquo;Fantastic\u0026rdquo; depending on theme) in regular gameplay.\nPossible values are \u0026quot;Never\u0026quot;, \u0026quot;Courses Only\u0026quot; and \u0026quot;Always\u0026quot;.\nDefault value: everywhere\nAnisotropicFiltering    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nAnnouncer    Specifies the name of the current announcer.\nDefault value: nothing\nArcadeOptionsNavigation    Possible values are 0 and 1. 0 being StepMania Style and 1 being Arcade Style.\nDefault value: 0\nAttractSoundFrequency    Determines how often sound is enabled during the attract mode loop in arcade mode.\nPossible values are Never, Always, 2 Times, 3 Times, 4 Times and 5 Times.\nDefault value: EveryTime\nAutoJoin    AutoMapOnJoyChange    Possible values are 0 or 1. 0 being \u0026ldquo;Off\u0026rdquo; and 1 being \u0026ldquo;On (recommended)\u0026rdquo;.\nDefault value: 1\nAutoPlay    Possible values are Off, On and CPU-Controlled.\nDefault value: \u0026ldquo;Human\u0026rdquo;\nAutogenGroupCourses    Automatically generates nonstop courses based on installed songs.\nPossible values are 0 or 1. 0 being \u0026ldquo;Off\u0026rdquo; and 1 being \u0026ldquo;On\u0026rdquo;.\nDefault value: 1\nAutogenSteps    Allows charts to be generated for other game types and styles that a song does not have its own charts for.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nBGBrightness    Sets the brightness of background visuals in gameplay.\nPossible values are 0%, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% and 100%.\nBGBrightnessNoZero    Possible values are 0%, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% and 100%.\nBGBrightnessOrStatic    Possible values are Disabled, 25% Bright, 50% Bright and 75% Bright.\nBackUpAllSongSaves    BackgroundFitMode    Determines scaling/cropping of song backgrounds based on resolution and aspect ratio.\nPossible values are CoverDistort, CoverPreserve, FitInside, FitInsideAvoidLetter and FitInsideAvoidPillar\nBlinkGameplayButtonLightsOnNote    BothAtOnce    This preference controls BothAtOnce, an input mode that mirrors input across both players. This preference is\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nBreakComboToGetItem    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nCelShadeModels    Currently only used on Legacy Dancing Characters, which makes the characters have a toon-styled shade applied.\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nCenter1Player    In single-player modes, renders the notefield in the center of the screen rather than to the left or right.\nPossible values are 0 and 1. 0 being \u0026quot;Off\u0026quot; and 1 being \u0026quot;On\u0026quot;.\nDefault value: 0\nCenterImage    CenterImageAddHeight, CenterImageAddWidth, CenterImageTranslateX, and CenterImageTranslateY are used to adjust overscan.\nDefault values:\n CenterImageTranslateX = 0 CenterImageTranslateY = 0 CenterImageAddWidth = 0.000000 CenterImageAddHeight = 0.000000  CoinMode    This setting determines whether Project OutFox will behave as an arcade game or not;\n If set to Pay, coins and credits must be inserted to play. The game will use an attract loop, and the main menu will not be accessible. If set to Free Play, the game will behave similarly to Pay mode, except credits are not required to play. If set to Home, Project OutFox\u0026rsquo;s arcade workflows will be disabled. The game will use its default user experience, including access to the main menu.  Possible values are Home, Pay and Free Play.\nDefault value: Home\nCoinModeNoHome    Possible values are Pay and Free Play.\nCoinRecoveryExpirationHours    CoinsPerCredit    Specifies the number of coins that must be inserted for each credit.\nPossible values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 and 16.\nDefault value: 1\nComboContinuesBetweenSongs    If enabled, the player\u0026rsquo;s combo will carry over between songs rather than start from 0.\nPossible values are 0 or 1. 0 being Of and 1 being On.\nDefault value: 0\nConstantUpdateDeltaSeconds    Cookie    Cookies are delicious delicacies.\nCourseSortOrder    Possible values are \u0026ldquo;Num Songs\u0026rdquo;, \u0026ldquo;Average Feet\u0026rdquo;, \u0026ldquo;Total Feet\u0026rdquo; and \u0026ldquo;Ranking\u0026rdquo;\nCoursesToShowRanking    Default value: nothing\nCurrentGame    Determines the current game types.\nDefault value: nothing\nCustomSongsEnable    If set to 1, players may load their own songs from a folder in their profile on a USB media (similar to the \u0026ldquo;r21\u0026rdquo; patch from In the Groove 2).\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nCustomSongsLoadTimeout    Possible values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30 and 1000.\nDefault value: 5.000000\nCustomSongsMaxCount    The maximum number of songs that can be loaded as custom songs.\nPossible values are 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 and 1000.\nDefault value: 1000\nCustomSongsMaxMegabytes    The maximum file size for audio files of custom songs.\nPossible values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30 and 1000.\nDefault value: 5.000000\nCustomSongsMaxSeconds    The maximum length in seconds for custom songs.\nPossible values are 60, 90, 120, 150, 180, 210, 240 and 10000.\nDefault value: 120.000000\nDDRStyleRandom    DebounceCoinInputTime    Default value: 0.000000\nDebugLights    Displays a debug overlay for lights outputs.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nDefaultFailType    Possible values are Immediate, ImmediateContinue, EndOfSong and Off.\nDefaultLocalProfileIDP1    DefaultLocalProfileIDP2    DefaultModifiers    Comma-seperated list of modifiers used by players with no profile, or a new profile with no personal settings.\nDefault value: nothing\nDefaultRecordLength    DefaultTheme    Sets the theme that will be loaded as a backup if the current theme cannot be loaded. If theme cannot also be found, then it will look back for \u0026quot;default\u0026quot; as the theme to load.\nDefault value: \u0026ldquo;default\u0026rdquo;\nDelayedBack    If enabled, you must hold the back button for 0.5 seconds to exit gameplay.\nPossible values are 0 or 1. 0 being \u0026quot;Instant\u0026quot; and 1 being \u0026quot;Hold\u0026quot;.\nDefault value: 1\nDelayedCreditsReconcile    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nDelayedModelDelete    Possible values are 0 and 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nDelayedScreenLoad    DelayedTextureDelete    Possible values are 0 and 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nDisableScreenSaver    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nDisableUploadDir    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nDisabledSongs    Defines songs that will be disabled (by not making them visible or selectable) from selection. Formatting for this follows the structure of folder., and must be a path to the song.\nDisabledSongs=MyGroup/MySong,MyGroup2/MyOtherSong DisplayAspectRatio    The current aspect ratio, expressed as a decimal (i.e. 16:9 = 1.777778, or 16/9).\nPossible values are 9:16, 2:3, 3:4, 1:1, 5:4, 4:3, 3:2, 16:10, 16:9, 21:9, 8:3 and 32:9.\nDefault value: 1.777778\nDisplayColorDepth    The current color depth, either 32 or 16. 32 being 32bit and 16 being 16bit.\nDefault value: 32\nDisplayHeight and DisplayWidth    Determines the window resolution. This does not change the game internal resolution which is defined by the theme.\nPossible values = Any positive number.\nDefault value:\n DisplayWidth = 854 DisplayHeight = 480  DisplayResolution    Possible values are your GPU supported resolutions.\nDisplayId    Default value: nothing\nDisqualification    If enabled, scores will not be saved if specific modifiers (such as constant BPM) is used.\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nEXTIOComPort    EasterEggs    Enables or disables easter eggs, if a theme is aware of and uses this preference.\nPossible values are 0 or 1. 0 being \u0026quot;Off\u0026quot; and 1 being \u0026quot;On\u0026quot;.\nDefault value: 0\nEditClearPromptThreshold    Possible values are -1, 10, 50, 100, 1000 and 1000000.\nDefault value: 50\nEditRecordModeLeadIn    Default value: 1.000000\nEditorMemoryCardOsMountPoint    EditorNoteSkinP1 and EditorNoteSkinP2    EditorShowBGChangesPlay    Enables background scripts to be previewed when playing back a song in the editor.\nPossible values are 0 and 1. 0 being Hide and 1 being Show.\nEnableAttackSounds    Possible values are 0 and 1. 0 being No and 1 being Yes.\nEnableBeginnerHelperBackgrounds    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nEnableMineHitSound    Plays an explosion sound if you hit a mine note.\nPossible values are 0 or 1. 0 being No and 1 being Yes.\nEnableScoreboard    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nEventMode    Also known as \u0026ldquo;Free Mode\u0026rdquo;; if disabled, each game session is divided into a maximum number of stages (arcade-style).\nPossible values are 0 or 1. 0 being Off and 1 being On (recommended).\nDefault value: 1\nExtendedChineseGlyphs    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nExtendedJapaneseGlyphs    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nExtendedKoreanGlyphs    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nEffectVolume    Possible values are Silent, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% and 100%.\nFailOffForFirstStageEasy    Possible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nFailOffInBeginner    Possible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nFastLoad    Caches all songs available in your songs folder, meaning the next time you open the game it won\u0026rsquo;t have to load them again. This is recommended to be 0 when creating your own charts otherwise the game might not detect your changes.\nPossible values are 0 or 1. 0 being \u0026ldquo;Off\u0026rdquo; and 1 being \u0026ldquo;On\u0026rdquo;.\nDefault value: 1\nFastLoadAdditionalSongs    Caches all songs available in your additionalsongfolder path, meaning the next time you open the game it won\u0026rsquo;t have to load them again. This is recommended to be 0 when creating your own charts otherwise the game might not detect your changes. Cached songs will always be saved on the game folder or appdata if portable mode is disabled.\nPossible values are 0 or 1. 0 being \u0026ldquo;Off\u0026rdquo; and 1 being \u0026ldquo;On\u0026rdquo;.\nDefault value: 1\nFastNoteRendering    In short, this makes so the renderer stops doing z-axis corrections possibily making the performance better but notes might appear merged with another. This is recommended to be 1 when playing modfiles as those abuse its enabled behavior to make masking effects.\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nForceLogFlush    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nForceMipMaps    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nFrameLimitPercent    FullscreenIsBorderlessWindow    Enables borderless fullscreen.\nPossible values being 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nGetRankingName    Possible values are Off, On, Ranking Songs.\nGlobalOffsetSeconds    Default value: -0.008\nHarshHotLifePenalty    Possible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 1\nHiddenSongs    Possible values are 0 and 1. 0 being \u0026quot;Off\u0026quot; and 1 being \u0026quot;On\u0026quot;.\nDefault value: 0\nHideIncompleteCourses    HighResolutionTextures    Possible values are Auto, Force Off and Force On.\nDefault value: Auto\nHighresScreenshotsBydefault    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nIgnoredDialogs    ImageCache    Default value: \u0026ldquo;Off\u0026rdquo;\nInputBackgroundEvents    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nInputDebounceTime    Possible valures are 0ms, 10ms, 20ms, 30ms, 40ms, 50ms, 60ms, 70ms, 80ms, 90ms and 100ms.\nInputDrivers    Interlaced    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nJointPremium    Possible values are Off and 2 Players for 1 Credit.\nLanguage    Default value: nothing\nLastConnectedServer    LastSeenInputDevices    LastSeenVideoDriver    Identifies the video card last used with the game. Automatically generated.\nDefault value: nothing\nLastSeenMemory    Automatically generated.\nLifeDifficulty    Possible values are 1, 2, 3, 4, 5, 6 and 7.\nLifeDifficultyScale    Default value: 1.000000\nLightsAheadSeconds    LightsComPort    LightsDriver    LightsFalloffSeconds    LightsStepsDifficulty    If there is no dedicated lights chart, generates lighting patterns from the existing charts on the specified difficul(ties).\nDefault value: \u0026ldquo;hard, medium\u0026rdquo;\nLockCourseDifficulties    Possible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 1\nLogCheckpoints    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nLogFPS    At intervals, the current FPS and average FPS will be appended to the log file.\nLogSkips    This preference is obsolete.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nLogToDisk    Enabling this will write log files.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nLongVerSongSeconds    Determines how long a song must be for it to be classified as \u0026ldquo;long\u0026rdquo; (which costs two stages outside of Event Mode).\nMarathonVerSongSeconds    Determines how long a song must be for it to be classified as a \u0026ldquo;marathon\u0026rdquo; (which costs three stages outside of Event Mode).\nMachineName    Default value: nothing\nMaxHighScoresPerListForMachine    Possible values are 1, 2. 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 and 20.\nDefault value: 10\nMaxHighScoresPerListForPlayer    Possible values are 1, 2. 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 and 20.\nDefault value: 3\nMaxInputLatencySeconds    MaxRegenComboAfterMiss    Default value: 5\nMaxSongsInEditCourse    MaxTextureResolution    Defines the resolution which the game will load/show textures at, textures higher than the defined max resolution will have its resolution lowered. It\u0026rsquo;s not recommended to go above 2048 while OutFox is still in Alpha until futher notice. Try going down to 1024 if you want more performance as 2048 is still not much used.\nPossible values are 256, 512, 1024, 2048, 4096 and 8192.\nDefault value: 2048\nMemoryCardDriver    MemoryCardOsMountPoint    MemoryCardOsMountPoint    MemoryCardPadmissEnabled    MemoryCardProfileImportSubdirs    MemoryCardProfileSubdir    The name of the subfolder used to store profile data on a USB device.\nMemoryCardProfiles    MemoryCardUsbBusP1    MemoryCardUsbBusP2    MemoryCardUsbLevelP1    MemoryCardUsbLevelP2    MemoryCardUsbPortP1    MemoryCardUsbPortP2    MemoryCards    MenuTimer    If enabled, a timer is used in gameplay menus. Usually used in arcade or event settings.\nPossible values are 0 and 1. 0 being Off and 1 being On.\nDefault value: 0\nMercifulBeginner    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nMercifulDrain    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nMercifulSuperMeter    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nMinPercentageForMachineCourseHighScore    Default value: 0.0001\nMinPercentageForMachineSongHighScore    Default value: 0.0001\nMinTNSToHideNotes    The minimum judgement window needed for notes to disappear after hitting them.\nPossible values are TNS_None, TNS_HitMine, TNS_AvoidMine, TNS_CheckpointMiss, TNS_Miss, TNS_W5, TNS_W4, TNS_W3, TNS_W2, TNS_W1, TNS_PRO_W5, TNS_PRO_W4, TNS_PRO_W3, TNS_PRO_W2, TNS_PRO_W1 and TNS_CheckpointHit.\nDefault value: TNS_W3\nMinimum1FullSongInCourses    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nMonkeyInput    A deprecated input mode no longer used on Project OutFox. This is maintained for compatibility only.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nMoveRandomToEnd    Possible values are 0 or 1. 0 being \u0026ldquo;No\u0026rdquo; and 1 being \u0026ldquo;Yes\u0026rdquo;.\nDefault value: 0\nMovieColorDepth    Possible values are 16 or 32. 16 being 16bit and 32 being 32bit.\nDefault value: 32\nMovieDrivers    MusicWheelSwitchSpeed    Possible values Slow, Normal, Fast and Really fast.\nDefault value: 15\nMusicWheelUsesSections    Possible values are \u0026ldquo;Never\u0026rdquo;, \u0026ldquo;Always\u0026rdquo; and \u0026ldquo;Title Only\u0026rdquo;\nDefault value: Always\nMuteActions    Mutes sound effects in menus.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nNetworkStartOffset    NeverBoostAppPriority    NeverCacheList    Default value: nothing\nNumBackgrounds    Possible values are 1, 5, 10, 15 and 20.\nDefault value: 10\nNotePathWidth    Possible values are Thin, 500, 250, 150, 100 and Fat.\nOnlyDedicatedMenuButtons    Possible values Use Gameplay Buttons and Only Dedicated Buttons.\nDefault value: 0\nOnlyPreferredDifficulties    Possible values are 0 or 1. 0 being \u0026ldquo;Off\u0026rdquo; and 1 being \u0026ldquo;On\u0026rdquo;.\nDefault value: 0\nOITGStyleLights    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nPAL    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nPacDriveLightOrdering    PadStickSeconds    Default value: 0.000000\nPercentageScoring    If enabled and themes are aware, scores will be expressed as percentages.\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 1\nPreCacheAllWheelSorts    PreferredSortUsesGroups    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nPremium    Pay Mode-specific setting, allowing styles requiring two controllers (such as Double) to be played without requiring 2 credits.\nDefault value: DoubleFor1Credit\nProductID    Default value: 1\nProfileCourseEdits    ProfileDataCompress    ProfileStepEdits    ProgressiveLifebar    Possible values are 0(Off) or 1, 2, 3, 4, 5, 6, 7 and 8.\nDefault value: 0\nProgressiveNonstopLifebar    Possible values are 0(Off) or 1, 2, 3, 4, 5, 6, 7, 8 and 9(Insanity).\nDefault value: 0\nProgressiveStageLifebar    Possible values are 0(Off) or 1, 2, 3, 4, 5, 6, 7, 8 and 9(Insanity).\nDefault value: 0\nPruneFonts    PseudoLocalize    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nPython23IO_HDXB_DEV_ID    Python23IO_HDXB_PORT    Python23IO_Mode    Python23IO_P2IO_EXTIO    PickExtraStage    Possible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nQuirksMode    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nRageSoundSampleCountClamp    Default value: 0\nRandomBackgroundMode    Possible values are \u0026quot;Off\u0026quot;, \u0026quot;Animations\u0026quot; and Random Movies\nRateModsAffectFGChanges    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nRefreshRate    Possible values are Default, 60, 70, 72 ,75, 90, 100, 120, 144, 165, 200 and 240.\nDefault value: Default\nRegenComboAfterMiss    Default value: 5\nReverseMouseButtons    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nSatelliteComPort    ScoreBroadcastURL    SextetStreamOutputFilename    ShowBanners    Possible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 1\nShowBeginnerHelper    Possible values are 0 or 1. 0 being \u0026ldquo;Off\u0026rdquo; and 1 being \u0026ldquo;On\u0026rdquo;.\nDefault value: 0\nShowCaution    Displays a caution screen before gameplay begins.\nPossible values are 0 or 1. 0 being \u0026ldquo;Skip\u0026rdquo; and 1 being \u0026ldquo;Show\u0026rdquo;.\nDefault value: 0\nShowDancingCharacters    Possible values are Default to Off, Default to Random and Select.\nDefault value: Random\nShowDanger    If the theme is aware, this can toggle visual effects used to signify low health.\nPossible values are 0 or 1. 0 being \u0026ldquo;Hide\u0026rdquo; and 1 being \u0026ldquo;Show\u0026rdquo;.\nDefault value: 1\nShowInstructions    If the theme is aware, this can toggle additional tutorial screens shown in-game.\nPossible values are 0 or 1. 0 being \u0026ldquo;Skip\u0026rdquo; and 1 being \u0026ldquo;Show\u0026rdquo;.\nDefault value: 1\nShowLoadingWindow    Toggles the splash screen.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nShowLogOutput    On Windows, this will open a cmd.exe window to display log output when the game is running.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nShowLyrics    Shows lyrics from a .crs file in-game in present.\nPossible values are 0 and 1. 0 being \u0026ldquo;Hide\u0026rdquo; and 1 being \u0026ldquo;Show\u0026rdquo;.\nDefault value: 1\nShowMasks    ShowMouseCursor    Determines whether the OS mouse cursor will disappear if hovered over the game window.\nPossible values: 0 or 1. 0 being \u0026quot;Off\u0026quot; and 1 being \u0026quot;On\u0026quot;. Changing this in-game might require a game restart.\nDefault value: 1\nShowNativeLanguage    Toggles whether song titles are displayed in their native language (1), or in a transliterated or translated form as determined in their metadata (0)\nPossible values are 0 or 1. 0 being \u0026ldquo;Romanization\u0026rdquo; and 1 being \u0026ldquo;Native Language\u0026rdquo;.\nDefault value: 0\nShowSongOptions    Toggles whether the game will ask players if they wish to view the Song Options menu when exiting the player options menu, whether the screen will always be displayed, or if song options will not be accessible.\nPossible values are Ask, Hide and Show\nDefault value: \u0026ldquo;Ask\u0026rdquo;\nShowStats    Shows an overlay in the top corner of the screen for information such as frame rate and memory usage.\nPossible values are 0 and 1. 0 being Off and 1 being On.\nDefault value: 0 (1 if in debug mode)\nShowThemeErrors    If enabled, Lua errors will be displayed in an overlay at the top of the screen.\nPossible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nSignProfileData    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nSmoothLines    Possible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 0\nSongBackgrounds    SongBroadcastURL    SongMinTNSToHideNotes    SongNoteskins    SongsPerPlay    Number of songs per-session (excluding extra stages) if EventMode is disabled.\nPossible values are 1, 2, 3, 4 and 5.\nDefault value: 3\nSongsPerPlayOrEvent    Possible values are 1, 2, 3, 4, 5 and Event.\nSoundDevice    Default value: nothing\nSoundDrivers    SoundPreferredSampleRate    Default value: 44100\nSoundPreload16bit    SoundPreloadMaxSamples    SoundVolume    System sound volume.\nPossible values are Silent, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% and 100%.\nDefault value: 0.400000\nSoundVolumeAttract    Possible values are Silent, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% and 100%.\nVolume used in arcade attract mode.\nSoundWriteAhead    Default value: 4096\nStretchBackgrounds    Possible values are 0 or 1. 0 being \u0026ldquo;Off\u0026rdquo; and 1 being \u0026ldquo;On\u0026rdquo;.\nDefault value: 0\nStreamerMode    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nSubSortByNumSteps    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nSuperMeterPercentChange**    TestInitialScreen    Default value: nothing\nTextureColorDepth    Possible values are 16 and 32. 16 being 16bit and 32 being 32bit.\nDefault value: 32\nTheme    ThreadedInput    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 1\nThreadedMovieDecode    ThreeKeyNavigation    Possible values are 0 or 1. 0 being \u0026quot;Five Key Menu\u0026quot; and 1 being \u0026quot;Three Key Menu\u0026quot;.\nDefault value: 0\nTimeMeterSecondsChange*    TimingWindowAdd    TimingWindowJump    TimingWindowScale    Possible values are 1, 2, 3, 4, 5, 6, 7, 8 and Justice.\nDefault value: 4.000000\nTimingWindowSeconds*    These settings define the timing windows used in themes that do not use the Project OutFox LuaTiming system. These settings are provided for backwards compatibility purposes.\nTrilinearFiltering    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nTugMeterPercentChange*    These settings are used for the lifebar in battle mode.\nTurnOffWMCompositor    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nUpdateCheckEnable    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nUseEGLonLinux    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nUseOldJoystickMapping    Toggles between HIDAPI and XInput modes.\nPossible values are 0 or 1. 0 being \u0026quot;XInput\u0026quot; and 1 being \u0026quot;HIDAPI\u0026quot;.\nDefault value: 1\nUsePointsandBlending    Enable or disable the use of points between each section of an ActorMultiVertex and use blending modes into it.\nPossible values are 0 or 1. 0 being No and 1 being Yes.\nDefault value: 1\nUseUnlockSystem    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nUsingArcadePads    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nVideoRenderers    Determines the renderer used by Project OutFox.\nVisualDelaySeconds    Possible values are -5, -4, -3, -2, -1, 0, +1, +2, +3, +4 and +5\nVideoUpscaleFilter    Possible values are 0 or 1. 0 being disabled and 1 being enabled.\nDefault value: 0\nVsync    Enables vertical sync (Vsync)\nPossible values are 0 or 1. 0 being Off and 1 being On.\nDefault value: 1\nWideScreen16_10    Possible values are 0 and 1. 0 being Off and 1 being On\nWideScreen16_9    Possible values are 0 and 1. 0 being Off and 1 being On\nWindowed    Enables windowed mode.\nPossible values are 0 or 1. 0 being Full Screen and 1 being Windowed.\nDefault value: 1\n"},{"id":68,"href":"/dev/actors/ActorsLua-CommandList/","title":"Command List","parent":"Lua and Actors","content":"OutFox has actors and actors can have commands. Makes sense that there would be a lot of commands pre-defined by the game, so this is a list of what commands the game has, how and when they\u0026rsquo;re used and what parameters they give.\nCommands    InitCommand\nOnCommand\nOffCommand\nBeginCommand\nEndCommand\n SetAttackCommand    Called on the noteskin actor before drawing an Attack-type TapNote\nParameters:\nModifiers (string, The attack associated with the tap note.)\n UnsetAttackCommand    Called on the noteskin actor after drawing an Attack-type TapNote\n ScreenGainFocusCommand    Called when processing the SM_GainFocus Screen Message.\nOnly used in ScreenOptionsManageProfiles, ScreenOptionsManageEditSteps and ScreenOptionsManageCourses.\n ScreenLoseFocusCommand    Called when processing the SM_LoseFocus Screen Message.\nOnly used in ScreenOptionsManageProfiles, ScreenOptionsManageEditSteps and ScreenOptionsManageCourses.\n LoseLifeCommand    Called when losing a battery.\nPrefixed in metrics with \u0026ldquo;NumLivesP1\u0026rdquo; and \u0026ldquo;NumLivesP2\u0026rdquo;.\n GainLifeCommand    Called when gaining a battery.\nPrefixed in metrics with \u0026ldquo;NumLivesP1\u0026rdquo; and \u0026ldquo;NumLivesP2\u0026rdquo;.\n AfterSetCommand    Called on the TextBanner after having set the title, subtitle and artist fields. (Runs after calling SetFromSong or SetFromString)\n LoseFocusCommand    Called on BGAs when fading away, on ScreenDebugOverlay\u0026rsquo;s pages when switching away, on OptionRows when switching away from a row, and other places\n GainFocusCommand    Called on BGAs when fading in, on ScreenDebugOverlay\u0026rsquo;s pages when switching to them, on OptionRows when switching to a row, and other places\n FadeCommand    Called when setting the brightness overlay to the actual brightness (based on cover \u0026amp; BGBrightness)\nPrefixed in metrics with \u0026ldquo;BrightnessOverlay\u0026rdquo;.\n NextPageCommand    Called when switching to the next page in ScreenRanking.\n SwitchedPageCommand    Called when handling the SM_HidePage Screen Message in ScreenRanking.\n ReverseOnCommand    Called on a column\u0026rsquo;s Receptor when the column goes beyond 50% reverse\n ReverseOffCommand    Called on a column\u0026rsquo;s Receptor when the column goes below 50% reverse\n LiftCommand    Called on a column\u0026rsquo;s Receptor when the column stops being pressed.\n PressCommand    Called on a column\u0026rsquo;s Receptor when the column gets pressed.\n ProW1/ProW2/ProW3/ProW4/ProW5/W1/W2/W3/W4/W5/MissCommand    Called on a column\u0026rsquo;s Receptor and noteflash when a column gets the relevant judgment.\n ShowNoteUpcomingCommand    Called on a column\u0026rsquo;s Receptor when the column has notes approaching\n HideNoteUpcomingCommand    Called on a column\u0026rsquo;s Receptor when the column has no notes approaching\n EditCommand    Called on ScreenEdit\u0026rsquo;s overlay \u0026amp; underlay when entering the Edit state.\n RecordCommand    Called on ScreenEdit\u0026rsquo;s overlay \u0026amp; underlay when entering the Record state.\n RecordPausedCommand    Called on ScreenEdit\u0026rsquo;s overlay \u0026amp; underlay when entering the RecordPaused state.\n PlayingCommand    Called on ScreenEdit\u0026rsquo;s overlay \u0026amp; underlay when entering the Playing state.\n AnimationFinishedCommand    Called on a Sprite when looping an animation.\n HoldingOffCommand    Called on a noteflash when ending a hold.\n RollOffCommand    Called on a noteflash when ending a roll.\n HoldingOnCommand    Called on a noteflash when starting a hold.\n RollOnCommand    Called on a noteflash when starting a roll.\n ColumnJudgmentCommand    Called on a noteflash when a judgment happens. Also seen as a MessageCommand.\nParameters:\n TapNoteScore (TapNoteScore enum, The related judgment. nil for hold notes) HoldNoteScore (HoldNoteScore enum, The related judgment. nil for tap notes) Column (integer, The column the judgment happened on.) Color (string, The last color seen on the noteskin. ScreenNetSelectBase appears to modify this)   JudgmentCommand    (Not to be confused with the Judgment MessageCommand!)\nCalled on a noteflash when a judgment happens.\n BrightCommand    Called on a noteflash when the combo is higher than the bright threshold.\n DimCommand    Called on a noteflash when the combo is lower than the bright threshold.\n ToggledCommand    Called on the button text of ScreenDebugOverlay when the button is pressed.\nPrefixed in metrics with \u0026quot;ButtonText\u0026quot;\n DeSelCommand    Called when pressing menuup or menudown on ScreenNetEvaluation.\nPrefixed in metrics with \u0026quot;User\u0026quot;\n SelCommand    Called when pressing menuup or menudown on ScreenNetEvaluation.\nPrefixed in metrics with \u0026quot;User\u0026quot;\n Tier02OrBetterCommand    Called in ScreenNetEvaluation when a player got a grade of tier 2 or better.\nPrefixed in metrics with \u0026quot;User\u0026quot;\n ShowCommand    Called in ScreenGameplayLesson when showing a page, in OptionsList when something is selected, in DifficultyList, and on the ScreenSyncOverlay when showing help.\n HideCommand    Called in ScreenGameplayLesson when hiding a page, in OptionsList when something is deselected, in DifficultyList, and on the ScreenSyncOverlay when hiding help.\n StartTransitioningCommand    Called when starting a screen transition.\n GoToOptionsCommand    Called when going into the Song Options menu.\n AskFroGoToOptionsCommand    Called when asking if the player wants to go into the Song Options menu.\n DisabledCommand    Called when showing that an OptionRow or ScreenSelectMaster choice is disabled.\n RefreshCommand    Called on OptionRow when setting the ModIcon.\nParameters:\n GameCommand (GameCommand object, The related commands.) Text (string, The text that goes with the commands.)   LevelCommand    Called when setting the content of a PaneDisplay.\n ConnectedCommand    Called in ControllerStateDisplay.\n UnpluggedCommand    Called in ControllerStateDisplay.\n NeedsMultitapCommand    Called in ControllerStateDisplay.\n NoInputHandlerCommand    Called in ControllerStateDisplay.\n SetTwoRowsCommand    Called when setting an OptionsList underline to work with items in two rows.\nPrefixed in metrics with \u0026quot;Underline\u0026quot;.\n SetOneRowCommand    Called when setting an OptionsList underline to work with items in one row.\nPrefixed in metrics with \u0026quot;Underline\u0026quot;.\n PositionTwoRowsCommand    Called when setting an OptionsList cursor to work with items in two rows.\nPrefixed in metrics with \u0026quot;Cursor\u0026quot;.\n PositionOneRowCommand    Called when setting an OptionsList cursor to work with items in one row.\nPrefixed in metrics with \u0026quot;Cursor\u0026quot;.\n TweenOffCommand    Called when loading or closing an OptionRow, tweening off the debug text in ScreenGameplay, and in ScreenMapControllers.\n TransformCommand    Called on the Player\u0026rsquo;s Judgment \u0026amp; Combo during `Player::Init``\nPrefixed in metrics with \u0026quot;Judgment\u0026quot; and \u0026quot;Combo\u0026quot;\nParameters:\n Player (PlayerNumber enum, The PlayerNumber for the combo \u0026amp; judgment.) MultiPlayer (MultiPlayer enum, The MultiPlayer for the combo \u0026amp; judgment.) iEnabledPlayerIndex (integer, The enabled player index) iNumEnabledPlayers (integer, The number of total enabled players) bPlayerUsingBothSides (boolean, If the current style has one player on both \u0026ldquo;sides\u0026rdquo;, like Doubles) bReverse (boolean, Is the player on Reverse?) bCentered (boolean, Is the player on Centered?)   ResetCommand    Called when resetting an OptionRow or Player Judgment.\n TweenOffCommand    Called when opening an OptionRow, displaying the debug text in ScreenGameplay, and in ScreenMapControllers.\n TweenOutForwardCommand    Called when tweening out of an OptionsList.\nPrefixed in metrics with \u0026quot;OptionsList\u0026quot;\n TweenOutBackwardCommand    Called when tweening out of an OptionsList.\nPrefixed in metrics with \u0026quot;OptionsList\u0026quot;\n TweenInForwardCommand    Called when tweening into an OptionsList.\nPrefixed in metrics with \u0026quot;OptionsList\u0026quot;\n TweenInBackwardCommand    Called when tweening into an OptionsList.\nPrefixed in metrics with \u0026quot;OptionsList\u0026quot;\n EnabledCommand    Called when showing that a ScreenSelectMaster choice is enabled.\n SwitchToPage1Command / SwitchToPage2Command    Called when switching to a different page in ScreenSelectMaster.\nPrefixed in metrics with \u0026quot;IconChoice1/2/3/4\u0026quot;, \u0026quot;ExplanationPage1/2\u0026quot;, \u0026quot;MorePage1/2\u0026quot;\n LostSelectedLoseFocusCommand    Called when canceling a selection in ScreenSelectMaster.\n LostSelectedGainFocusCommand    Called when canceling a selection in ScreenSelectMaster.\n ChangeCommand    Called when changing a selection in ScreenSelectMaster, when updating a StepsDisplayList/DifficultyList or when updating ScreenOptions.\nPrefixed in metrics with \u0026quot;CursorP1\u0026quot; and \u0026quot;CursorP2\u0026quot;in the case of ScreenSelectMaster.\n MadeChoiceP1Command / MadeChoiceP2Command    Called when making a selection in ScreenSelectMaster.\n ChooseCommand    Called on the cursor when making a selection in ScreenSelectMaster.\n InitialSelectionCommand    Called when making a selection in ScreenSelectMaster during a two-step selection.\n OffFocusedCommand    Called when tweening off ScreenSelectMaster.\n OffUnfocusedCommand    Called when tweening off ScreenSelectMaster.\n BackCommand    Called when turning on a BG in ScreenPackages? Also when setting up the backside of the CDTitle.\nPrefixed in metrics with \u0026quot;PackagesBG\u0026quot;, \u0026quot;WebBG\u0026quot; and \u0026quot;CDTitle\u0026quot;\n AwayCommand    Called when turning off a BG in ScreenPackages?\nPrefixed in metrics with \u0026quot;PackagesBG\u0026quot; and \u0026quot;WebBG\u0026quot;\n HeldCommand    Called on a HoldJudgment when a hold or roll is completed.\nPrefixed in metrics with \u0026quot;HoldJudgment\u0026quot;\n LetGoCommand    Called on a HoldJudgment when a hold or roll is dropped.\nPrefixed in metrics with \u0026quot;HoldJudgment\u0026quot;\n MissedHoldCommand    Called on a HoldJudgment when a hold or roll is missed.\nPrefixed in metrics with \u0026quot;HoldJudgment\u0026quot;\n TwentyFiveMilestoneCommand    Called on Player when displaying a 25 combo milestone.\n FiftyMilestoneCommand    Called on Player when displaying a 50 combo milestone.\n HundredMilestoneCommand    Called on Player when displaying a 100 combo milestone.\n TwoHundredFiftyMilestoneCommand    Called on Player when displaying a 250 combo milestone.\n ThousandMilestoneCommand    Called on Player when displaying a 1000 combo milestone.\n ComboCommand    Called on the Player when updating the combo amount.\nParameters:\n Combo (integer, The current combo.) Misses (integer, The current number of misses.) FullComboW1 (boolean, The player currently has a full combo and the lowest TNS is W1.) FullComboW2 (boolean, The player currently has a full combo and the lowest TNS is W2.) FullComboW3 (boolean, The player currently has a full combo and the lowest TNS is W3.) FullComboW4 (boolean, The player currently has a full combo and the lowest TNS is W4.)   SortOnCommand    Called when tweening on the sorting screen in Music Wheels.\nPrefixed in metrics with \u0026quot;MusicWheel\u0026quot;, \u0026quot;MusicWheelItem\u0026quot; and \u0026quot;Highlight\u0026quot;\n SortOffCommand    Called when tweening off the sorting screen in Music Wheels.\nPrefixed in metrics with \u0026quot;MusicWheel\u0026quot;, \u0026quot;MusicWheelItem\u0026quot; and \u0026quot;Highlight\u0026quot;\n DieCommand    Called when a Player dies in Oni mode\nPrefixed in metrics with \u0026quot;OniGameOverP1\u0026quot; and \u0026quot;OniGameOverP2\u0026quot;\n SetCommand (ScreenGameplay)    Called when setting a Player\u0026rsquo;s StepsDisplay?\nPrefixed in c++ with \u0026quot;SetDummy%i\u0026quot;, \u0026quot;SetP1\u0026quot; and \u0026quot;SetP2\u0026quot;\n SetReverseCommand    Called on LyricsDisplay and StepsDisplay when Reverse is on.\nPrefixed in metrics with \u0026quot;LyricDisplay\u0026quot;, \u0026quot;StepsDisplayP1\u0026quot; and \u0026quot;StepsDisplayP2\u0026quot;\n SetNoReverseCommand    Called on LyricsDisplay and StepsDisplay when Reverse is off.\nPrefixed in metrics with \u0026quot;LyricDisplay\u0026quot;, \u0026quot;StepsDisplayP1\u0026quot; and \u0026quot;StepsDisplayP2\u0026quot;\n SetOneReverseCommand    Called on LyricsDisplay when Reverse is on at least one Player, but not all.\nPrefixed in metrics with \u0026quot;LyricDisplay\u0026quot;\n PauseCommand    Called on ScreenGameplay when pausing the game.\n UnpauseCommand    Called on ScreenGameplay when unpausing the game.\n StartOnCommand    Called on ScreenGameplay\u0026rsquo;s debug text when start is held\nPrefixed in metrics with \u0026quot;Debug\u0026quot;\n BackOnCommand    Called on ScreenGameplay\u0026rsquo;s debug text when the back button is held\nPrefixed in metrics with \u0026quot;Debug\u0026quot;\n StartCommand    Called on ScreenGameplay\u0026rsquo;s next course song item when starting to load the next song.\n FinishCommand    Called on ScreenGameplay\u0026rsquo;s next course song item when switching to the next song.\n FadeFromCachedCommand    Called on FadingBanner when loading from a cached image to the actual image.\nPrefixed in metrics with \u0026quot;Banner\u0026quot;\n FadeOffCommand    Called on FadingBanner when loading from nothing to the actual image.\nPrefixed in metrics with \u0026quot;Banner\u0026quot;\n ResetFadeCommand    Called on FadingBanner after performing the fade.\nPrefixed in metrics with \u0026quot;Banner\u0026quot;\n RouletteCommand    Called on FadingBanner when fading to the roulette banner.\nPrefixed in metrics with \u0026quot;Banner\u0026quot;\n RandomCommand    Called on FadingBanner when fading to the random banner.\nPrefixed in metrics with \u0026quot;Banner\u0026quot;\n \u0026lt;custom\u0026gt;Command    Called on FadingBanner when fading to a custom banner.\nPrefixed in metrics with \u0026quot;Banner\u0026quot;\n SpecialKey    Called on ScreenTextEntry\u0026rsquo;s cursor when on a special key.\n RegularKey    Called on ScreenTextEntry\u0026rsquo;s cursor when on a regular key.\n NeverShow    Called on ScreenMapControllers' warning actor if it exists.\n MappedInputCommand    Called in ScreenMapControllers after having mapped a key.\nPrefixed in metrics with \u0026quot;MappedTo\u0026quot;?\n LoseMarkCommand    Called in ScreenMapControllers when removing an element from the set list.\nPrefixed in metrics with \u0026quot;MappedTo\u0026quot;?\n GainMarkCommand    Called in ScreenMapControllers when adding an element to the set list.\nPrefixed in metrics with \u0026quot;MappedTo\u0026quot;?\n WaitingCommand    Called in ScreenMapControllers when waiting for the player to set a key after hitting enter.\nPrefixed in metrics with \u0026quot;MappedTo\u0026quot;?\n SetTextCommand    Called when sanity checking the input from ScreenMapControllers.\nParameters:\n Text (string, The reasons a sanity check failed.)   FirstUpdateCommand    Called when ScreenWithMenuElements begins the screen.\n SetHelptextCommand    Called when ScreenWithMenuElements updates the HelpText.\nParameters:\n Text (string, The help text.)   CancelCommand    Called when canceling out of a ScreenWithMenuElements menu.\nPrefixed in metrics with \u0026quot;Out\u0026quot;, \u0026quot;Cancel\u0026quot;\n ChangeCommand    Called when ScreenWithMenuElements begins the screen.\n FrontCommand    Called when setting up the frontside of the CDTitle.\nPrefixed in metrics with \u0026quot;CDTitle\u0026quot;\n ModsCommand    Called during ScreenSelectMusic\u0026rsquo;s BeginScreen.\n ShowEnteringOptionsCommand    Called when entering the PlayerOptions menu after selecting a song.\n HidePressStartForOptionsCommand    Called when hiding the prompt to enter the Player Options menu.\n SortChangeCommand    Called when changing the sort order of ScreenSelectMusic\n ShowPressStartForOptionsCommand    Called when showing the prompt to enter the Player Options menu.\n ChangeToExitCommand    Called when moving the highlight line to the exit button.\nPrefixed in metrics with \u0026quot;LineHighlight\u0026quot;, \u0026quot;LineHighlightP1\u0026quot; and \u0026quot;LineHighlightP2\u0026quot;\n SelectedCommand    Called when changing a value in ScreenOptions?\n UnselectedCommand    Called when changing a value in ScreenOptions?\n ``ChangedCommand`    Called when changing the group \u0026amp; song banner in ScreenEdit as well as when updating the LyricDisplay.\nPrefixed in metrics for LyricDisplay with \u0026quot;LyricFront\u0026quot; and \u0026quot;LyricBack\u0026quot;\n PlayerStateSetCommand    Called when running NoteField::Init(), can be seen in 5.0.12\u0026rsquo;s default theme with NoteField board.\nParameters:\n PlayerNumber (PlayerNumber enum, The player number for the notefield\u0026rsquo;s PlayerState.)   LoadCommand (StepsDisplay)    Called when running StepsDisplay::Load.\nPrefixed in metrics with \u0026quot;Frame\u0026quot; and maybe others?\nParameters:\n PlayerState (PlayerState object, The PlayerState for the given StepsDisplay.)   SetCommand (StepsDisplay)    Called when running StepsDisplay::SetInternal.\nPrefixed in metrics with \u0026quot;Frame\u0026quot;, \u0026quot;Ticks\u0026quot;, \u0026quot;Meter\u0026quot;, \u0026quot;Description\u0026quot;, \u0026quot;Credit\u0026quot;, \u0026quot;Autogen\u0026quot; and \u0026quot;StepsType\u0026quot;\nParameters:\n CustomDifficulty (string, Representation of the difficulty.) DisplayDescription (string, The chart\u0026rsquo;s related description.) Steps (Steps object, The steps of the chart. nil if not available.) Trail (Trail object, The trail for the course. nil if not available.) Meter (integer, The chart meter value.) StepsType (StepsType enum, The type of chart being shown.)   AnalogInputCommand    Called on TopScreen from InputHandler when doing analog input. As seen in ScreenTestLuaAnalog\nParameters:\n Device (integer, The device ID(?) recorded from the input.) Button (string, The button recorded from the input.) Value` (float, The level recorded from the input.)   PostSwitchPageCommand    Called on ScreenSelectMaster after switching the page? Also has a MessageCommand variant?\nParameters:\n NewPageIndex (integer, The page to switch to.)   PreSwitchPageCommand    Called on ScreenSelectMaster before switching the page? Also has a MessageCommand variant?\nParameters:\n OldPageIndex (integer, The page to switch from.) NewPageIndex (integer, The page to switch to.)   SetCommand (MusicWheelItem)    Called on MusicWheelItem when loading from WheelItemData or when handling a change message.\nParameters:\n Song (Song object, The song for the wheel item.) Course (Course object, The course for the wheel item.) Index (integer, The index of the wheel item. nil if done through a change message) HasFocus (boolean, Is the wheel item focused? nil if done through a change message) Text (string, The text of the wheel item?) DrawIndex (integer, The draw index of the wheel item. nil if done through a change message) Type (string, The MusicWheelItemType.) Color (RageColor?, The color associated with the wheel item.) Label (string, The label for the wheel item.)   SetGradeCommand    Called on MusicWheelItem when refreshing grades.\nParameters:\n PlayerNumber (PlayerNumber enum, The player who has the grade) Grade (Grade enum, The highest grade gotten. nil if there\u0026rsquo;s no HighScoreList.) NumTimesPlayed (integer, How many times the song or course was played. nil if there\u0026rsquo;s no HighScoreList.)   MenuTimerExpired    Called on ScreenNameEntryTraditional when the menu timer hits zero. Also seen as a MessageCommand.\n PlayerFinishedCommand    Called on ScreenNameEntryTraditional when a player finishes entering their name. Also seen as a MessageCommand.\nParameters:\n PlayerNumber (PlayerNumber enum, The player that finished.)   EntryChangedCommand    Called on ScreenNameEntryTraditional when a player updates their selection text.\nParameters:\n PlayerNumber (PlayerNumber enum, The player that updated their selection text.) Text (string, The current text. Has a _ at the end if more characters can be entered.)   SelectKeyCommand    Called on ScreenNameEntryTraditional when a player changes which key is being selected.\nParameters:\n PlayerNumber (PlayerNumber enum, The player that changed the key.) Key (string, The currently selected key)   SetSongCommand    Called on CourseContentsList when setting the item from GameState.\nParameters:\n PlayerNumber (PlayerNumber enum, The player who selected the course) Song (Song object, The song for this part of the course) Steps (Steps object, The Steps of the song.) Difficulty (Difficulty enum, The Difficulty of the course) Meter (integer, The difficulty meter) Number (integer, The position in the course) Modifiers (string, The modifiers to apply for the song) Secret (boolean, Is the song considered a secret?)   HurryTimerCommand    Called on ScreenContinue when hurrying up the timer.\nParameters:\n PlayerNumber (PlayerNumber enum, The player hurrying up the timer.)   LoadCommand (ScoreDisplayNormal)    Called when running ScoreDisplayNormal::Init\nParameters:\n PlayerState (PlayerState object, The associated PlayerState.) PlayerStageStats (PlayerStageStats object, The associated PlayerStageStats.)   SetStatusCommand    Called when updating ScreenSyncOverlay.\nParameters:\n Text (string, The status text.)   SetAdjustmentsCommand    Called when updating ScreenSyncOverlay.\nParameters:\n Text (string, The adjustment text.)   SetCommand (ScreenHighScores)    Called when configuring the ScoreScroller.\nParameters:\n Song (Song object, The song with the high score. nil if it\u0026rsquo;s a course high score.) Course (Course object, The course with the high score. nil if it\u0026rsquo;s a song high score.) Entries (lua table, Steps data. Iterate with pairs and not ipairs.)   ScrolledCommand    Called when scrolling ScreenHighScores.\nParameters:\n Direction (integer, the direction.)   Messages (Suffix with MessageCommand)    RouletteStoppedMessageCommand    Called when the music wheel is slowing down during roulette.\n StartRouletteMessageCommand    Called when the music wheel is starting the roulette\n StartRandomMessageCommand    Called when the music wheel chosing a random song from the Random item.\n CoinInsertedMessageCommand    Called when insering a coin and clearing credits.\nThemes can use this command to update other actors about coin information (Does not send any data).\n ToggleConsoleDisplayMessageCommand    Called when pressing the pause key on the keyboard. Its' use in fallback is commented out and the keybind conflicts with the mute actions keybind.\n LifeChangedMessageCommand    Called when updating the LifeMeter. Different LifeMeter types give different parameters.\nParameters:\n Player (PlayerNumber enum, The Player who\u0026rsquo;s having life differences.) LifeMeter (LifeMeter object, The LifeMeter for that player.) LivesLeft (integer, number of batteries left. nil if not using LifeMeterBattery.) LostLife (boolean, Did the player lose a life? nil if not using LifeMeterBattery.) TapNoteScore (TapNoteScore enum LuaReference, the TapNoteScore the player got. nil if not using LifeMeterTime.) HoldNoteScore (HoldNoteScore enum LuaReference, the HoldNoteScore the player got. nil if not using LifeMeterTime.) OldLife (float, the previous amount of time nil if not using LifeMeterTime.) Difference (float, the difference between the old amount of life and current amount. nil if not using LifeMeterTime.)   ShowDangerAllMessageCommand    Called in Background when all players are in danger of failing.\n HideDangerAllMessageCommand    Called in background when all players are not in danger of failing (or if they\u0026rsquo;re all dead).\n ScreenChangedMessageCommand    Called when running ScreenManager::LoadDelayedScreen\nPrefixed in metrics with \u0026quot;CreditsP1\u0026quot; and \u0026quot;CreditsP2\u0026quot; when dealing with the credits text.\n SystemMessageMessageCommand    Called when creating a SystemMessage\nParameters:\n Message (string, The message itself.) NoAnimate (boolean, Do we do an animated SystemMessage?)   HideSystemMessageMessageCommand    Called when hiding the SystemMessage. Seemingly unused?\n RefreshCreditTextMessageCommand    Called when refreshing the credits text.\nPrefixed in metrics with \u0026quot;CreditsP1\u0026quot; and \u0026quot;CreditsP2\u0026quot;.\n AutosyncChangedMessageCommand    Called when changing the Autosync type from ScreenDebugOverlay.\n ToggleScriptErrorMessageCommand    Called when toggling the error display from ScreenDebugOverlay.\n ClearScriptErrorMessageCommand    Called when clearing the current lua errors from ScreenDebugOverlay.\n UpdateNetEvalStatsMessageCommand    Called when updating the evaluation stats during net play.\nParameters:\n ActivePlayerIndex (integer, The current active player.) Difficulty (Difficulty enum, The song\u0026rsquo;s difficulty.) Score (integer, The player\u0026rsquo;s score.) Grade (integer, The player\u0026rsquo;s grade.) PlayerOptions (string, The player\u0026rsquo;s playeroptions.) Steps (Steps object, The song\u0026rsquo;s steps. nil if they don\u0026rsquo;t exist.)   ScoreChangedMessageCommand    Called when loading ScoreKeeperNormal and handling score.\nParameters:\n PlayerNumber (PlayerNumber enum, The PlayerNumber associated with the score.) MultiPlayer (MultiPlayer enum, The MultiPlayer associated with the score.) ToastyCombo (integer, The current combo as the toasty sees it. nil if not coming from ScoreKeeperNormal::HandleTapRowScore)   CurrentComboChangedP1MessageCommand / CurrentComboChangedP2MessageCommand    Called when dealing with combo in ScoreKeeperNormal.\n ToastyAchievedMessageCommand    Called when a player gets the toasty.\nParameters:\n PlayerNumber (PlayerNumber enum, The PlayerNumber associated with the toasty.) ToastyCombo (integer, The current combo as the toasty sees it. nil if not coming from ScoreKeeperNormal::HandleTapRowScore) Level (integer, How many times has the player gotten a toasty?)   ToastyDroppedMessageCommand    Called when a player drops the toasty.\nParameters:\n PlayerNumber (PlayerNumber enum, The PlayerNumber associated with the dropped toasty.)   AutoJoyMappingAppliedMessageCommand    Called when automapping a joystick.\n CrossedBeatMessageCommand    Called every time a beat is crossed?\nParameters:\n Beat (integer, The beat that was just crossed?)   LessonClearedMessageCommand    Called when clearing a lesson?\n LessonFailedMessageCommand    Called when failing a lesson?\n LessonTry1MessageCommand / LessonTry2MessageCommand    Called when attempting a lesson?\n StorageDevicesChangedMessageCommand    Called when updating the MemoryCardManager.\n CardRemovedP1MessageCommand / CardRemovedP2MessageCommand    Called when a memory card is removed?\n SongModifiedMessageCommand    Called when saving sync changes while in EditMode.\n OptionsListOpenedMessageCommand    Called every time an OptionsList is opened.\nParameters:\n Player (PlayerNumber enum, The player that opened the OptionsList.)   OptionsListClosedMessageCommand    Called every time an OptionsList is closed.\nParameters:\n Player (PlayerNumber enum, The player that closed the OptionsList.)   OptionsListQuickChangeMessageCommand    Called every time an OptionsList selection changes. Used when Start is used as down, and the button is left or right.\nParameters:\n Player (PlayerNumber enum, The player that changed the OptionsList.) Direction (integer, The direction to move.) Selection (integer, The item being selected.)   OptionsListLeftMessageCommand / OptionsListRightMessageCommand    Called every time an player moves on the OptionsList.\nParameters:\n Player (PlayerNumber enum, The player that moved through the OptionsList.) Selection (integer, The item being selected.)   OptionsMenuChangedMessageCommand    Called when switching to a different row.\nParameters:\n Player (PlayerNumber enum, The player that changed to the row.) Menu (string, The menu being switched to?)   OptionsListPopMessageCommand    Called when popping off an OptionsList.\nParameters:\n Player (PlayerNumber enum, The player that popped off the list.)   OptionsListResetMessageCommand    Called when resetting an OptionsList.\nParameters:\n Player (PlayerNumber enum, The player that reset the list.)   OptionsListPushMessageCommand    Called when pushing an OptionsList.\nParameters:\n Player (PlayerNumber enum, The player that pushed the list.)   OptionsListStartMessageCommand    Called when pushing the start button in an OptionsList.\nParameters:\n Player (PlayerNumber enum, The player that pushed the start button.) Selection (integer, The item being selected.)   DownloadFinishedMessageCommand    Called when a download finishes in ScreenInstallOverlay.\n MenuLeftP1MessageCommand / MenuLeftP2MessageCommand / MenuDownP1MessageCommand / MenuDownP2MessageCommand / MenuUpP1MessageCommand / MenuUpP2MessageCommand / MenuRightP1MessageCommand / MenuRightP2MessageCommand    Called when moving around ScreenSelectMaster, ScreenOptions or ScreenSelectProfile.\n MenuSelectionChangedMessageCommand    Called when updating a menu selection on ScreenSelectMaster or ScreenOptions.\n MenuStartP1MessageCommand / MenuStartP2MessageCommand    Called when pushing the start button ScreenSelectMaster or ScreenOptions.\nParameters:\n ScreenEmpty (boolean, Is the screen empty?) (Is this the screen we\u0026rsquo;re about to go to?)   CurrentCourseChangedMessageCommand    Called when changing the course, shuffling the Workout or shuffling the course.\n ComboChangedMessageCommand    Called when updating the player\u0026rsquo;s Combo.\nParameters:\n Player (PlayerNumber enum, The player whose combo is getting updated.) OldCombo (integer, the old combo) OldMissCombo (integer, the old miss combo) PlayerState (PlayerState object LuaReference, the Player\u0026rsquo;s PlayerState. nil if it doesn\u0026rsquo;t exist.) PlayerStageStats (PlayerStageStats object LuaReference, the Player\u0026rsquo;s PlayerStageStats. nil if it doesn\u0026rsquo;t exist.)   ScoreNoneMessageCommand    Called when processing a TapNoteScore_None in Player.\n StepMessageCommand    Called when any player steps.\nParameters:\n PlayerNumber (PlayerNumber enum, the player that did the step.) MultiPlayer (MultiPlayer enum, The MultiPlayer that did the step.) Column (integer, the column getting stepped. 0-indexed?)   StepP1MessageCommand / StepP2MessageCommand    Called when any player steps. For backwards compatbility with older content.\n JudgmentMessageCommand    (Not to be confused with JudgmentCommand!)\nCalled when any player gets a judgment.\nParameters:\n Player (PlayerNumber enum, the player that did the step.) MultiPlayer (MultiPlayer enum, The MultiPlayer that did the step.) FirstTrack (integer, The first column to hit the note.) NumTracks (integer, Number of columns with a hold? Only seen with Hold judgments.) TapNoteScore (TapNoteScore enum, the tap note score that was gotten.) HoldNoteScore (HoldNoteScore enum, the hold note score that was gotten.) Early (boolean, Was the hit early? Only seen with non-Hold judgments.) TapNoteOffset (float, How far away was the hit in seconds?) Holds (lua table, indexable by column number for everything that has a hold running. Only seen with non-Hold judgments.) Notes (lua table of TapNotes, indexable by column number for everything that has a note hit at once. Only seen with non-Hold judgments.) TapNote (TapNote object?, The TapNote for the hold. Only seen with Hold Judgments.)   JudgmentMessageCommand (Mines)    (Not to be confused with JudgmentCommand!)\nCalled when any player gets a judgment relating to a mine.\nParameters:\n Player (PlayerNumber enum, the player that did the step.) TapNoteScore (TapNoteScore enum, the tap note score that was gotten.) FirstTrack (integer, The first column to hit the mine.)   JudgmentWindowMessageCommand    Called when making use of luajudgments.\nParameters:\n Type (string, The thing being judged.) Window (float, How far away the note was when it was hit.) score (TapNoteScore enum, Set from lua, determines the score a player should get.) timing (float, Set from lua, determines the timing window a player should use.)   \u0026lt;DeviceInput\u0026gt;PressedMessageCommand / \u0026lt;DeviceInput\u0026gt;ReleasedMessageCommand    Called from ScreenTestInput when recieving input. \u0026lt;DeviceInput\u0026gt; is replaced with a ToString\u0026rsquo;d input name.\n UpdateScreenheaderMessageCommand    Called when updating a NetRoom\u0026rsquo;s room title.\nParameters:\n Header (string, The header text.) Subheader (string, The subheader text.)   DoneLoadingNextSongMessageCommand    Called when ScreenGameplay finishes loading the next song in a course. Seems unused?\n HealthStateMessageCommand    Called when a player\u0026rsquo;s HealthState changes.\nParameters:\n PlayerNumber (PlayerNumber enum, the player that\u0026rsquo;s having their health state change.) HealthState (HealthState enum, The current health state.) OldHealthState (HealthState enum, The previous health state.)   PlayerFailedMessageCommand    Called when a player fails.\nParameters:\n PlayerNumber (PlayerNumber enum, the player that failed.)   BeatCrossedMessageCommand    Called every time a beat is crossed in ScreenGameplay. Seems unused?\n NoteCrossedMessageCommand / NoteWillCrossMessageCommand    Called when a player\u0026rsquo;s note will cross or has crossed.\nParameters:\n PlayerNumber (PlayerNumber enum, the player whose note is gonna cross. nil if both players have the same style.) ButtonName (string, The column\u0026rsquo;s button.) NumTracks (integer, The number of tracks with a tap or hold head.) IsMine (boolean, Is the note a mine?) NumMessagesFromCrossed (integer, How many messages is the note away from crossing? 0 = crossed.)   NoteWillCrossIn400Ms / NoteWillCrossIn800Ms / NoteWillCrossIn1200Ms    Called when a note is going to cross. Refer to message names for distance?\n NoteCrossedJumpMessageCommand    Called when a jump crosses.\n BeforeLoadingNextCourseSongMessageCommand    Called before playing the next song transition in a course.\n ChangeCourseSongInMessageCommand    Called after playing the next song transition in a course.\n ChangeCourseSongOutMessageCommand    Called when loading the next song in a course.\n \u0026lt;PreferenceName\u0026gt;ChangedMessageCommand    Called when a preference changes. \u0026lt;PreferenceName\u0026gt; is replaced with the actual preference name.\n PlayerJoinedMessageCommand    Called when a player joins.\nParameters:\n Player (PlayerNumber enum, the player that joined.)   PlayerUnjoinedMessageCommand    Called when a player leaves.\nParameters:\n Player (PlayerNumber enum, the player that left.)   GoalCompleteP1MessageCommand / GoalCompleteP2MessageCommand    Called when a player completes a workout goal?\n WorkoutGoalCompleteMessageCommand    Called when a player completes a workout goal during a course.\n ScriptErrorMessageCommand    Called when a lua script errors or reports an error.\nParameters:\n message (string, The error message.)   DisplayLanguageChangedMessageCommand    Called when switching between transliterated and native language on the music wheel (Press F9).\n StepsUnchosenMessageCommand    Called when a player unselects steps.\nParameters:\n Player (PlayerNumber enum, The player that backed out.)   SelectMenuInputMessageCommand    Called in ScreenSelectMusic. Not sure when.\nParameters:\n Player (PlayerNumber enum, The player that caused this.) Button (string, The button that was pressed)   PreviousSongMessageCommand    Called when moving to the previous song in ScreenSelectMusic.\n NextSongMessageCommand    Called when moving to the next song in ScreenSelectMusic.\n PreviousGroupMessageCommand    Called when moving to the previous group in ScreenSelectMusic.\nNextGroupMessageCommand    Called when moving to the next group in ScreenSelectMusic.\nTwoPartConfirmCanceledMessageCommand    Called when canceling out of a Two-Part confirm.\n SongUnchosenMessageCommand    Called when a player unselects a song.\nParameters:\n Player (PlayerNumber enum, The player that backed out.)   PlayerOptionsChangedMessageCommand    Called when a player changes their PlayerOptions through CodeDetector (ScreenSelectMusic).\nParameters:\n PlayerNumber (PlayerNumber enum, The player that performed the code.)   SongOptionsChangedMessageCommand    Called when a player changes the SongOptions through CodeDetector (ScreenSelectMusic).\n SelectMenuOpenedMessageCommand / SelectMenuClosedMessageCommand    Called when updating the select button status on ScreenSelectMusic.\nParameters:\n Player (PlayerNumber enum, The player that pushed select.)   ChangeStepsMessageCommand    Called when changing the current steps.\nParameters:\n Player (PlayerNumber enum, The player that changed the steps.) Direction (integer, The direction the player went.)   SongChosenMessageCommand    Called when choosing the steps like in pump pro.\n StepsChosenMessageCommand    Called when choosing the steps.\nParameters:\n Player (PlayerNumber enum, The player that chose the steps.)   StartSelectingSongMessageCommand / StartSelectingStepsMessageCommand / StartFinalizedMessageCommand    Called at some point in ScreenSelectMusic?\n SelectMultipleMessageCommand    Called when changing the rows in ScreenOptions.\nParameters:\n PlayerNumber (PlayerNumber enum, The player that is changing things.) RowIndex (integer, The current row.) ChoiceInRow (integer, The current selection in the row.) Selected (boolean, Is the current item selected?)   ChangeValueMessageCommand    Called when changing the value in ScreenOptions.\nParameters:\n PlayerNumber (PlayerNumber enum, The player that is changing things.) RowIndex (integer, The current row.)   ChangeRowMessageCommand    Called when changing the rows in ScreenOptions in an absolute amount.\nParameters:\n PlayerNumber (PlayerNumber enum, The player that is changing things.) RowIndex (integer, The current row.) ChangedToExit (boolean, Is the current row an exit?)   LifeMeterChangedP1MessageCommand / LifeMeterChangedP2MessageCommand    Called when setting the life meter state for a given point of time.\nParameters:\n Life (float, The current amount of life.) StepsSecond (float, The point of time in the song/course)   FriendsUpdateMessageCommand    Called when updating the friends list?\n UsersUpdateMessageCommand    Called when updating the users list?\n CurrentGameChangedMessageCommand    Called when the current game changes? Seems unused?\n PlayModeChangedMessageCommand    Called when the play mode changes? Seems unused?\n CoinsChangedMessageCommand    Called when the amount of coins changes? Seems unused?\n PreferredSongGroupChangedMessageCommand    Called when the preferred song group changes? Seems unused?\n PreferredCourseGroupChangedMessageCommand    Called when the preferred course group changes? Seems unused?\n PreferredStepsTypeChangedMessageCommand    Called when the preferred steps type changes? Seems unused?\n PreferredDifficultyP1ChangedMessageCommand / PreferredDifficultyP2ChangedMessageCommand    Called when the preferred difficulty changes? Seems unused?\n PreferredCourseDifficultyP1ChangedMessageCommand / PreferredCourseDifficultyP2ChangedMessageCommand    Called when the preferred course difficulty changes? Seems unused?\n SortOrderChangedMessageCommand    Called when the sort order changes?\n CurrentSongChangedMessageCommand    Called when the current song changes?\n CurrentStepsP1ChangedMessageCommand / CurrentStepsP2ChangedMessageCommand    Called when the current steps change?\n CurrentCourseChangedMessageCommand    Called when the current course changes?\n CurrentTrailP1ChangedMessageCommand / CurrentTrailP2ChangedMessageCommand    Called when the current trail changes?\n GameplayLeadInChangedMessageCommand    Called when changing the Gameplay lead-in?\n EditStepsTypeChangedMessageCommand    Called when the edit steps type changes? Seems unused?\n EditCourseDifficultyChangedMessageCommand    Called when the edit course difficulty changes? Seems unused?\n EditSourceStepsChangedMessageCommand    Called when the edit source steps changes? Seems unused?\n EditSourceStepsTypeChangedMessageCommand    Called when the edit source steps type changes? Seems unused?\n EditCourseEntryIndexChangedMessageCommand    Called when the edit course entry index changes? Seems unused?\n EditLocalProfileIDChangedMessageCommand    Called when the edit local profile ID changes? Seems unused?\n CurrentStyleChangedMessageCommand    Called when the current style changes? Seems unused?\n"},{"id":69,"href":"/dev/mods/Mods-13-Miscellaneous-Mods/","title":"Miscellaneous Modifiers","parent":"Guide to Modifiers","content":"Miscellaneous Modifiers    These modifiers don\u0026rsquo;t really fit into any of the above categories, so they\u0026rsquo;re here instead.\n\u0026ldquo;clearall\u0026rdquo;    Desc: Tells PlayerOptions to do a reset. Often used in modfiles to mimic crs-style resetting. Only available in modstring form right now.\nQuirks: N/A\nModstring format: clearall\nHoldGrainMult    Desc: Adds a multiplier to the \u0026lsquo;step size\u0026rsquo; of holds, allowing one to control how \u0026lsquo;granular\u0026rsquo; a hold is. In NotITG, this is known as \u0026ldquo;granulate\u0026rdquo; or \u0026ldquo;grain\u0026rdquo; (alias).\nNegative values make the hold smoother (with a \u0026lsquo;limit\u0026rsquo; of -93.75% which results in a step size of 1 pixel), but could cost performance due to the extra calculations being done. Positive values make the hold look more polygonal (with no real limit). Very noticable on modifiers that work on position, like Drunk.\nCommon values can range from practically anywhere due to it being a multiplier. Try starting with -50% or 100% and go further if extra points or less points are desired.\nQuirks: In NotITG, this modifier works a bit differently. At 0%, the holds are drawn with the normal stepsize, but the magnitude when nonzero controls the step size in pixels (100% = step size of 1 pixel, 400% = step size of 4 pixels (normal in NotITG)). This means NotITG can have step sizes below 1 pixel.\nPlayerOptions format: HoldGrainMult(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: HoldGrainMult(4, 2)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; holdgrainmult\nExample: *2 400% holdgrainmult\nHoldGrainMult video example\nExtendHolds    Desc: Adds a multiplier to the visual length of holds. In NotITG, this is known as \u0026ldquo;longholds\u0026rdquo;, \u0026ldquo;longboy\u0026rdquo; (alias) or \u0026ldquo;longboys\u0026rdquo; (alias).\nCommon values range from -100% to 300%\nQuirks: N/A\nPlayerOptions format: ExtendHolds(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: ExtendHolds(0.5, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; extendholds\nExample: *1 50% extendholds\nExtendHolds video example\nStraightHolds    Desc: Makes holds react less to mods, similar to what holds do in \u0026ldquo;Pump It Up\u0026rdquo;. NotITG has an alias called \u0026ldquo;gayholds\u0026rdquo;, which applies negative straightholds (so 100% gayholds = -100% straightholds). There is also a column-specific variant.\nCommon values range from -100 to 200%\nQuirks: N/A\nAvailable variants (modstring): straightholds, gayholds (NotITG negative alias), straightholds\u0026lt;column\u0026gt;, gayholds\u0026lt;column\u0026gt; (NotITG negative alias for straightholds\u0026lt;column\u0026gt;)\nPlayerOptions format: StraightHolds(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: StraightHolds(1, 0.2)\nColumn-specific format: StraightHoldsCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: StraightHoldsCol(3, 2, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.2 100% straightholds *0.5 200% straightholds3\nStraightHolds video example\nNotePath    Desc: Draws a line that shows the path a note takes to the receptor and beyond, which means it depends on all position mods that are in the game. Known as \u0026ldquo;arrowpath\u0026rdquo; in NotITG. Effectively a \u0026lsquo;hold\u0026rsquo; that lasts the whole notefield, so it could hurt performance depending on what mods are being used. Has a column-specific variant available which is additive like Stealth \u0026amp; Dark.\nCommon values range from -100 to 100% due to the additive nature.\nQuirks: N/A\nAvailable variants (modstring): notepath, notepath\u0026lt;column\u0026gt;, arrowpath (NotITG name), arrowpath\u0026lt;column\u0026gt; (NotITG name)\nPlayerOptions format: NotePath(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: NotePath(1, 0.4)\nColumn-specific format: NotePathCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: NotePathCol(4, 1, 0.4)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.4 100% notepath *0.4 100% notepath4\nNotePath video example\nAvailable sub modifiers:    NotePathBlendMode    Desc: Set the blend mode used for the NotePath. This does not have a modstring form, and in NotITG, is only available in Player.\nPlayerOptions format: NotePathBlendMode(\u0026lt;blend mode\u0026gt;)\nNotITG Player format: SetArrowPathBlendMode(\u0026lt;blend mode\u0026gt;)\nNotePathDrawMode    Desc: Set the secondary draw mode used for the NotePath. It allows for different \u0026lsquo;looks\u0026rsquo; for the notepath. For example, \u0026ldquo;DrawMode_Fan\u0026rdquo; creates a veil-type visual with 50% NotePath, while \u0026ldquo;DrawMode_Lines\u0026rdquo; creates a dotted line.\nThis does not have a modstring form and does not reset with a clearall.\nPlayerOptions format: NotePathDrawMode(\u0026lt;draw mode\u0026gt;)\nNotePathGrainMult    Desc: Allows for adjusting the step size like what HoldGrainMult does for holds. The same notes from there apply here.\nAvailable variants (modstring): notepathgrainmult, arrowpathgranulate (NotITG name), arrowpathgrain (NotITG alias)\nPlayerOptions format: NotePathGrainMult(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nNotePathWidth    Desc: Allows for adjusting how wide the notepath is. It\u0026rsquo;s added onto the default, which is one pixel in theme-space.\nAt the moment, there is a GPU-enforced limit on the actual width. In NotITG, this can be worked around by turning off smoothlines (Which uses CPU-based quads, also has a side-effect of showing depth in the lines)\nAvailable variants (modstring): notepathwidth, arrowpathsize (NotITG name), arrowpathgirth (NotITG alias), arrowpathwidth (NotITG alias)\nPlayerOptions format: NotePathWidth(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nNotePathDrawSize    Desc: Where DrawSize affects the notefield\u0026rsquo;s rendering space, this affects the rendering space of NotePath. This is unaffected by normal DrawSize, but the rendering space starts out the same as a whole notefield.\nAvailable variants: NotePathDrawSize (Affects area below the receptors), NotePathDrawSizeBack (Affects area above the receptors)\nAvailable variants (modstring): notepathdrawsize, notepathdrawsizeback, arrowpathdrawsize (NotITG name for notepathdrawsize), arrowpathdrawsizefront (NotITG alias for notepathdrawsize), arrowpathdrawdistance (NotITG alias for notepathdrawsize), arrowpathdrawdistancefront (NotITG alias for notepathdrawsize), arrowpathdrawsizeback (NotITG name for notepathdrawsizeback), arrowpathdrawdistanceback (NotITG alias for notepathdrawsizeback)\nPlayerOptions format: \u0026lt;NotePathDrawSize variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nModTimer    Desc: Allows one to set the timer used by many modifiers.\nThese are the following types (denoted as \u0026lt;type\u0026gt;):\n \u0026lsquo;ModTimerType_Default\u0026rsquo; just go with the game\u0026rsquo;s default timer type (5.2 defaults to song, 5.1 \u0026amp; OutFox default to game) \u0026lsquo;ModTimerType_Game\u0026rsquo; (Use the game\u0026rsquo;s current uptime in seconds.) \u0026lsquo;ModTimerType_Song\u0026rsquo; (Use the song\u0026rsquo;s current time in seconds.) \u0026lsquo;ModTimerType_Beat\u0026rsquo; (Use the song\u0026rsquo;s current beat.)  Often, song time is used as the setting.\nQuirks: In NotITG, this is done by a single name (\u0026ldquo;modtimer\u0026rdquo;, \u0026ldquo;timer\u0026rdquo; or \u0026ldquo;globalmodtimer\u0026rdquo;) with magnitudes. 0% = game time, 100% = song time, 200% = song beat.\nAvailable variants (modstring): modtimerdefault, modtimergame, modtimersong, modtimerbeat\nPlayerOptions format: ModTimerSetting(\u0026lt;type\u0026gt;)\nExample: ModTimerSetting('ModTimerType_Beat')\nModstring format: \u0026lt;modstring variant\u0026gt;\nExample: modtimerbeat\nAvailable sub modifiers:\nModTimerMult    Desc: Add a multiplier onto the timer used for modifiers. 100% = 2x, -50% = 0.5x.\nAvailable variants (modstring): modtimermult, timermult (NotITG alias), globalmodtimermult (NotITG alias)\nPlayerOptions format: ModTimerMult(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nModTimerOffset    Desc: Offset the timer used for modifiers. 100% = 1 time unit.\nAvailable variants (modstring): modtimeroffset, timeroffset (NotITG alias), globalmodtimeroffset (NotITG alias)\nPlayerOptions format: ModTimerOffset(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nNoteSkew    Desc: Applies skew on the notes and receptors. Does not affect holds. Comes in skewx \u0026amp; skewy variants, and is also column-specific. NotITG calls the skewx variant \u0026ldquo;noteskew\u0026rdquo; because they originally only had skewx.\nCommon values range from -200 to 200%\nQuirks: N/A\nAvailable variants: NoteSkewX, NoteSkewY\nColumn-specific variants: NoteSkewXCol, NoteSkewYCol\nAvailable variants (modstring): noteskewx, noteskewx\u0026lt;column\u0026gt;, noteskew (NotITG name), noteskew\u0026lt;column\u0026gt; (NotITG name), noteskewy, noteskewy\u0026lt;column\u0026gt;\nPlayerOptions format: \u0026lt;NoteSkew variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;) Example: NoteSkewX(0.7, 4)\nColumn-specific format: \u0026lt;NoteSkewCol variant\u0026gt;(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: NoteSkewXCol(1, 0.25, 0.25, true):NoteSkewXCol(2, 0.5, 0.5, true):NoteSkewXCol(3, 0.75, 0.75, true):NoteSkewXCol(4, 1, 1)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *4 70% noteskewx *0.25 25% noteskewx1, *0.5 50% noteskewx2, *0.75 75% noteskewx3, *1 100% noteskewx4\nNoteSkewX video example\nAvailable sub modifiers:    noteskewtype (NotITG only)    Desc: When active, the note skews get rotated (but not the receptors). In SM5, this can be often (mostly) replicated in dance by using the negative amount of NoteSkewY on columns 1 and 4.\nAvailable variants (modstring): noteskewtype, skewtype (alias)\nModstring format: \u0026lt;enable\u0026gt; \u0026lt;modstring variant\u0026gt;\nTrigClip    Desc: Performs clipping on the trigonometric waves used in many modifiers and their variants.\nThe following are available:\n SinClip (sine wave clipping. Affects Wave (all non-tan variants), SpiralY, Bumpy (all non-tan variants), Beat (all variants), Zigzag (All variants), Digital (All non-tan variants), Bounce (All variants), Blink (All variants), Pulse (all non-tan variants), CosClip (cosine wave clipping. Affects Tornado (all non-tan varians), Tipsy (all non-tan variants), Expand, Drunk (all non-tan variants), SpiralX TanClip (tangent wave clipping, use values close to 100% for visible effects. Affects all tangent variants of all modifiers)  Quirks: Going beyond 100% may result in interesting effects on some modifiers. In NotITG, this was \u0026lsquo;fixed\u0026rsquo;.\nCommon values range from 50 to 100%\nPlayerOptions format: \u0026lt;TrigClip variant\u0026gt;(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: CosClip(0.5, 0.5)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: *0.5 50% cosclip\nCosClip video example\nDisableMines    Desc: When active, stepping on mines will not have any effect. Useful if you want to place mines for aesthetic purposes, but don\u0026rsquo;t want to penalize players for ghost-tapping.\nQuirks: N/A\nPlayerOptions format: DisableMines(\u0026lt;enable\u0026gt;)\nExample: DisableMines(true)\nModstring format: \u0026lt;enable\u0026gt; disablemines\nExample: disablemines\nZBuffer    Desc: When active, the zbuffer gets enabled regardless of modifiers active. Can act as an alternate way to enable zbuffer instead of using low amounts of z position modifiers. NotITG also allows having negative values to force it off. When the zbuffer is enabled, holds draw at a step size of 4 instead of 16. Also has \u0026ldquo;ztest\u0026rdquo; as an alias in NotITG.\nQuirks: N/A\nPlayerOptions format: ZBuffer(\u0026lt;enable\u0026gt;)\nExample: ZBuffer(true)\nModstring format: \u0026lt;enable\u0026gt; zbuffer\nExample: zbuffer\nCosecant    Desc: When active, all tangent modifiers use a cosecant wave instead of a tangent wave, mimicking how NotITG v1 did tangent wave modifiers. Known as \u0026ldquo;cosec\u0026rdquo; or \u0026ldquo;glitchytan\u0026rdquo; (alias) in NotITG.\nQuirks: N/A\nPlayerOptions format: Cosecant(\u0026lt;enable\u0026gt;)\nExample: Cosecant(true)\nModstring format: \u0026lt;enable\u0026gt; cosecant\nExample: cosecant\nCosecant video example\nWireFrame    Desc: A Column-specific modifier that allows setting the column to use wireframe mode for notes and holds. NotITG has a modstring alias that hits all columns.\nQuirks: Using a 3D noteskin is recommended if using this modifier.\nAvailable variants (modstring): wireframe\u0026lt;column\u0026gt;, wireframe (NotITG alias that hits all columns)\nPlayerOptions format: WireFrameCol(\u0026lt;column\u0026gt;, \u0026lt;enable\u0026gt;)\nExample: WireFrameCol(2, true)\nModstring format: \u0026lt;enable\u0026gt; \u0026lt;modstring variant\u0026gt;\nExample: wireframe2\nWireFrame video example\nAvailable sub modifiers:    WireFrameWidth    Desc: Like how NotePath has a width sub modifier, this affects the width of the wireframe lines.\nAvailable variants (modstring): wireframewidth\u0026lt;column\u0026gt;, wireframegirth\u0026lt;column\u0026gt; (NotITG alias), wireframewidth (NotITG alias that hits all columns), wireframegirth (NotITG alias that hits all columns)\nPlayerOptions format: WireFrameWidthCol(\u0026lt;column\u0026gt;, \u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nModstring format: *\u0026lt;approach rate\u0026gt; \u0026lt;magnitude\u0026gt; \u0026lt;modstring variant\u0026gt;\nNoteSkin    Desc: Get and set the NoteSkin for the player.\nQuirks: Returns both the previous name \u0026amp; if the set succeeded upon being given a string. Cannot be used to change noteskins mid-song (If forcing a noteskin, you have to reload the screen) like what OpenITG/SM3.95/NotITG has.\nPlayerOptions format: NoteSkin(\u0026lt;noteskin name\u0026gt;)\nExample: NoteSkin('Metal')\nModstring format: \u0026lt;noteskin name\u0026gt;\nExample: metal\nNoteSkinCol    Desc: Allow getting and setting the noteskin on a column-basis. Unlike NoteSkin, this allows for changing the noteskin mid-song.\nWhen used on a single column, the receptors will not change.\nWhen \u0026lt;column\u0026gt; is nil, all columns will use the requested noteskin, and the receptors will change to match.\nQuirks: Requires a Preferences.ini for the song that lists the noteskins to load. May not play nice when the noteskin isn\u0026rsquo;t loaded. NOTESKIN:DoesNoteSkinExist could be used to ensure the noteskin exists before setting. The change is instant unlike noteskin changes done through attacks in OpenITG/SM3.95/NotITG.\nPlayerOptions format: NoteSkinCol(\u0026lt;column\u0026gt;, \u0026lt;noteskin name\u0026gt;)\nExample: NoteSkinCol(nil, 'lambda')\nModstring format: \u0026lt;noteskin name\u0026gt; noteskin\u0026lt;column\u0026gt; (ommitting column will hit all columns)\nExample: lambda noteskin\nNoteSkinCol video example\nLifeSetting    Desc: Set the lifebar type to be used. There are three types (denoted as \u0026lt;type\u0026gt;):\n Bar (The normal lifebar most people are used to.) Modstring form is \u0026ldquo;bar\u0026rdquo;. Battery (Mess up a certain number of times and you fail the song) Modstring form is \u0026ldquo;battery\u0026rdquo;. Time (You have a limited amount of time to live. Hit notes better to gain time.) Modstring form is \u0026ldquo;lifetime\u0026rdquo;.  Quirks: This cannot be set during gameplay. It must be set before entering ScreenGameplay.\nPlayerOptions format: LifeSetting(\u0026lsquo;LifeType_\u0026lt;type\u0026gt;')\nExample: LifeSetting('LifeType_Time')\nModstring format: \u0026lt;type\u0026gt;\nExample: lifetime\nDrainSetting    Desc: Set how the lifebar\u0026rsquo;s health behavior works. There are three drain types (denoted as \u0026lt;type\u0026gt;):\n Normal (The health goes up and down at the expected rate.) Modstring form is \u0026ldquo;normal-drain\u0026rdquo;. NoRecover (The health only goes down.) Modstring form is \u0026ldquo;norecover\u0026rdquo; or \u0026ldquo;power-drop\u0026rdquo;. SuddenDeath (Getting any judgment below the required one will instantly kill you.) Modstring form is \u0026ldquo;suddendeath\u0026rdquo; or \u0026ldquo;death\u0026rdquo;.  Quirks: Initial health will start at 100% when not using Normal drain. Initial health for Normal is a theme metric, as well as the minimum judgment for SuddenDeath. This also works mid-gameplay, allowing for sections that require good accuracy.\nPlayerOptions format: DrainSetting(\u0026lsquo;DrainType_\u0026lt;type\u0026gt;')\nExample: DrainSetting('DrainType_NoRecover')\nModstring format: \u0026lt;type\u0026gt;\nExample: norecover\nBatteryLives    Desc: Set how many lives are available in the Battery life bar at the start. Probably shouldn\u0026rsquo;t be set mid-gameplay.\nQuirks: N/A\nPlayerOptions format: BatteryLives(\u0026lt;number of lives\u0026gt;)\nExample: BatteryLives(5)\nModstring format: \u0026lt;number of lives divided by 100\u0026gt; lives\nExample: 0.05% lives\nRandAttack    Desc: When active, random attacks will be launched throughout the song. Any nonzero magnitude will activate it. Cannot be set through modstrings.\nQuirks: The attacks chosen come from /Data/RandomAttacks.txt\nPlayerOptions format: RandAttack(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: RandAttack(1,1)\nNoAttack    Desc: When active, RandAttack is canceled out. Any nonzero magnitude will activate it. Cannot be activated through modstrings.\nQuirks: N/A\nPlayerOptions format: NoAttack(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: NoAttack(1,1)\nPlayerAutoPlay    Desc: When active, AutoPlay will be set on the player. Cannot be set through modstrings.\nQuirks: Do not set this during gameplay. Attempting to enable it will result in no input for the player and no autoplay, which will result in a stage fail.\nPlayerOptions format: PlayerAutoPlay(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: PlayerAutoPlay(1, 1)\nPassmark    Desc: Set what life amount is required to pass a stage. Cannot be set through modstrings.\nQuirks: N/A\nPlayerOptions format: Passmark(\u0026lt;magnitude\u0026gt;, \u0026lt;approach rate\u0026gt;)\nExample: Passmark(0.5, 2)\nMuteOnError    Desc: When active, keysounds will not play upon errors (letting go hold notes and/or missing).\nQuirks: N/A\nPlayerOptions format: MuteOnError(\u0026lt;enable\u0026gt;)\nExample: MuteOnError(true)\nModstring format: \u0026lt;enable\u0026gt; muteonerror\nExample: muteonerror\nFailSetting    Desc: Set how failing a song works. There are four drain types (denoted as \u0026lt;type\u0026gt;):\n Immediate (Song ends the moment you fail) Modstring forms are \u0026ldquo;failimmediate\u0026rdquo; and \u0026ldquo;failarcade\u0026rdquo;. ImmediateContinue (Song continues after failure, but you still fail at the end) Modstring forms are \u0026ldquo;failendofsong\u0026rdquo; and \u0026ldquo;failimmediatecontinue\u0026rdquo;. EndOfSong (Failure status is determined at the end of the song) Modstring form is \u0026ldquo;failatend\u0026rdquo;. Off (You cannot fail.) Modstring form is \u0026ldquo;failoff\u0026rdquo;.  The default can be set in modstrings through \u0026ldquo;faildefault\u0026rdquo;\nQuirks: N/A\nPlayerOptions format: FailSetting(\u0026lsquo;FailType_\u0026lt;type\u0026gt;')\nExample: FailSetting('FailType_Off')\nModstring format: \u0026lt;type\u0026gt;\nExample: failoff\n"},{"id":70,"href":"/dev/translation/","title":"Translation","parent":"Developers and Creators","content":"Are you translating a theme to another language? Reading this might help you.\nWhere are language files stored    Inside every theme there\u0026rsquo;ll be a Languages folder. Inside that folder is where language files are stored. Example:\nLanguages/ en.ini ja.ini Here we can see 2 language files: en for English and ja for Japanese. It\u0026rsquo;s a standard to name language files in that format (language-COUNTRY.ini). For example: In this case, there\u0026rsquo;s a Portuguese translation, but since there\u0026rsquo;s also Portuguese from Portugal, the file was named pt-BR (BR = Brazil).\nFallback    You probably already noticed a _fallback theme in the themes folder, but in case you didn\u0026rsquo;t: it\u0026rsquo;s where things that are necessary for every theme gets stored, so when someone is making a theme the game doesn\u0026rsquo;t blow up. The same goes for Languages: it\u0026rsquo;s important to also translate the fallback for your language because the theme you\u0026rsquo;re translating might not have every string that it uses on it\u0026rsquo;s own folder.\nStarting a translation    To start your work, create a new file for your language(-COUNTRY, if needed) and don\u0026rsquo;t forget to use the .ini extension. You can do this on Notepad with no problem but it\u0026rsquo;s recommended to use a editor like Visual Studio Code or Notepad++.\nNow open en.ini and your new language file, then copy all the content from en.ini to your language file. You can close en.ini now.\nWhat you should translate    This is an code example taken from Soundwaves theme.\n[Common] WindowTitle=Project OutFox StepMania=Project OutFox # Dedicated Character Display strings ModelLoadError=Model for %s (%s) Has a invalid model. Please check if the model.txt file is correctly named and formatted. ModelAnimLoadError=An animation file for %s\u0026#39;s model (%s) is invalid or non-existant. Please check the animation folders and see if there\u0026#39;s any file missing. LocationLoadError=Current Location (%s) is missing its location model. Please check if the model.txt file is correctly named and formatted. SongLoaderSingleSong=Random Song Play: Current Folder only contains 1 song. OutFox might get confused when picking the song via random. Selecting to index 1. SongLoaderNoSongs=Random Song Play: No songs were found in your OutFox install folder! Switching back to fallback music. You can see on this image and on your file that every line has a Title=Value, and that\u0026rsquo;s how translation works on OutFox, you need to translate the value of the titles and you\u0026rsquo;re done. The theme does all the work of what string it should use.\nNow, you can\u0026rsquo;t just translate literally everything that you see. On ModelLoadError for example there\u0026rsquo;s a \u0026ldquo;%s\u0026rdquo; that means the theme or the game will put a string replacing that %s.\nAn example of that can be seen on the string %d Song Played that you\u0026rsquo;ll see on the next image.\n[Screen] HelpText=\u0026amp;BACK; Exit \u0026amp;START; Select \u0026amp;SELECT; Options \u0026amp;MENULEFT;\u0026amp;MENURIGHT;\u0026amp;MENUUP;\u0026amp;MENUDOWN; Move [ScreenWithMenuElements] HelpText=\u0026amp;BACK; Exit \u0026amp;START; Select \u0026amp;MENULEFT;\u0026amp;MENURIGHT; Move StageCounter=%s Stage EventStageCounter=Song %i You\u0026rsquo;ll also see lines like \u0026amp;START;, \u0026amp;SELECT; etc. They\u0026rsquo;re buttons that will be replaced once the game draws that string. Let\u0026rsquo;s see one of those strings in action?\n[ScreenSelectProfile] SingularSongPlayed=%d Song Played SeveralSongsPlayed=%d Songs Played PressStart=Press \u0026amp;START; to join. Here we can see that \u0026amp;START; gets replaced by a green square that represents the start button, and %d gets replace by a number that\u0026rsquo;s how many songs that profile played.\nAnother special string is \\n. It creates a line break. For example, First Line\\nSecondLine would result in:\nFirst Line\nSecond Line\nHere\u0026rsquo;s a example in action from _fallback/en.ini:\nText Context    You might also want to translate the theme in a way that someone who has never played before will understand it, instead of expecting everyone to already know what everything is. A new player might not understand what \u0026ldquo;holds\u0026rdquo; mean if that word is translated to your language, but if it was kept as \u0026ldquo;holds\u0026rdquo; the user would know that it\u0026rsquo;s the literal name of the thing and not something that should make sense in your language.\nAnother hard example are steps: in OutFox, there are 2 kinds of steps. The ones that you press in gameplay and the steps of the chart made by the author (easy steps, hard steps\u0026hellip;). In English, it\u0026rsquo;s easy to only say steps because it makes sense for both, but that isn\u0026rsquo;t the case with every language. That\u0026rsquo;s why it was decided to keep it named \u0026ldquo;steps\u0026rdquo; for the pt-BR translation of Soundwaves, for example.\nCommunity Translations for Soundwaves (OutFox default until Alpha V)    Many folks are already helping translate the new Soundwaves theme for various languages. As requested by one of our translators, we\u0026rsquo;ll mention those projects below in order to give them some visibility and encourage more people to join and help.\n° Polish - Done by Moneko\n° Japanese - Done by はぬべき(hanubeki)\n° Portuguese-Brazilian - Done by zerinho6, SHRMP0 and SheepyChris\n° German - Done by DanielRotwind\n° Hebrew - Done by Snil4\n° French - Done by Ksempac and Kaede573\n° Español - Done by JoseVarelaP\n° Hungarian - Done by KaZo75\n° Italian - Done by Gabrimax\n Tools and Practices    Translating can be boring and tedious. Sometimes it\u0026rsquo;s hard to locate \u0026amp; remove lines that shouldn\u0026rsquo;t be there or find missing ones. Because of that, translators themselves create tools to make our job easier and faster.\nTranslation Toolkit  Translation Toolkit is a tool made by Ksempac to help remove lines that are not needed anymore, warn about lines that are missing, check your progress, etc. It supports linux, Mac and Windows.\n This project is intended as a small application to automate some tasks for translators.\nIt is able to parse, analyze and fix the OutFox translation files.   Stepmania-TranslatorViewMaker  Stepmania-TranslatorViewMaker is a tool made by Snil4. It supports any OS that has python 3 installed.\n Have you ever tried to translate a program like OutFox and wondered \u0026ldquo;Hmm, now where can I find that line in the .ini?\u0026rdquo; Now there\u0026rsquo;s no need to wonder! This program will make a translator view file for your translation .ini and make you translation job easier.\n  Tiny-Webini  Tiny-Webini is a tool made by zerinho6 to help with translations of OutFox Website. While not used to translate OutFox (unless themes adopt HTML in the future), it uses the same translation system as OutFox. It makes less HTML code or none at all being necessary to translate the website. While the souce code might be able to run on other OS by building manually, it only supports Windows officially.\n Translate OutFox website with the same style OutFox uses for its translations.\n   Best practices    Be constant with your words    When doing a mention to \u0026ldquo;Steps\u0026rdquo;, ask yourself: is it clear which \u0026ldquo;type of Steps\u0026rdquo; you\u0026rsquo;re referring to? We have the following \u0026ldquo;types of steps\u0026rdquo;:\n Steps, which means the notes inside of the chart or the note count. StepDifficulty, which means the difficulty selected of the chart, such as Novice, Expert, Hard. Step, which means the action of stepping in the pad or a single note. StepType, which means the quantization (timing/color) of the note (e.g. 4th = red, an entire beat; 8th = blue, half a beat; etc).  Soundwaves does not have this issue as it says \u0026ldquo;Taps\u0026rdquo; instead of Steps and directly says the difficulty.\nReload translations    Imagine you\u0026rsquo;re editing the Soundwaves ScreenCaution and want to see how the translated string looks. You don\u0026rsquo;t need to restart the entire game to see the changes, here\u0026rsquo;s what you should do instead: Exit the screen you just translated, reload the metrics (Shift + Insert; or Shift + F2 on older alpha versions) and enter the screen again.\nSome themes might have a problem where not all strings are updated when metrics are reloaded due to how they are made. In that case, unfortunately the only option is restart the game.\n OutFox Releases    Now that you have translated the latest alpha, you need to send it to OutFox somehow. This tutorial explains how you can do it!\nThe first thing to keep in mind is that each OutFox translation is hosted inside Tiny-Foxes to easily maintain and keep track of updates, so contact Team Rizu through any of their available social media profiles to get invited into Tiny-Foxes.\nIt is also required to know how git and Github works.\nExact steps are:\n Create a Github account Download and learn basic git commands such as (git status, git push, git pull, git commit and git checkout) Learn how github organization works.  Having an editor such as Visual Studio Code will make git interactions way easier as those commands are available by the interface.\nRepository    OutFox translation repositories adhere to a standard style. Repository title should be:\n\u0026ldquo;OutFox-[languageFileName[-COUNTRY]]\u0026rdquo;\n\u0026quot;-COUNTRY\u0026quot; should only be added in special cases (example: there\u0026rsquo;s Portuguese from Portugal and Brazilian Portuguese, so the Portuguese-Brazilian language file is \u0026ldquo;pt-BR.ini\u0026rdquo;).\nThe description of the repository should be:\n\u0026ldquo;[Language Name] ([languageFileName]) Translation for Project OutFox\u0026rdquo;\u0026quot;\nHere\u0026rsquo;s an example:\nOutFox-ja Japanese (ja) Translation for Project OutFox Repository Format    The repository should have 2 folders: \u0026ldquo;_fallback\u0026rdquo; and \u0026ldquo;default\u0026rdquo;. Inside the _fallback will be the _fallback translation and default translation inside the default folder.\nOnly the translation file is required to be inside the folders/repository.\nKeep track    It\u0026rsquo;s recommended that you include the version that the translation is targeting inside the files. Here\u0026rsquo;s an example:\n# Version: 4.9.7 Alpha [Common] WindowTitle=Project OutFox StepMania=OutFox Submitting to OutFox    So you finished the translation for this alpha before the release? You can then commit directly to master OR make a Pull Request with your files to OutFox-Translations so Jose_Varela includes them in the next alpha release.\nThis all assumes that you\u0026rsquo;re already a member of Tiny-Foxes and the translator team.\nWebmasters Project    Webmasters is an internal OutFox initiative to translate OutFox Website. Being a webmaster means:\n Partial access to the website backend to implement your translation files; Closer contact with the OutFox Commmunity team for quick updates and help; Having a special role in our Discord Server.  The requirements to join Webmasters are having previous experience as a long-term OutFox translator, being a Discord Server member, and receiving a special invitation from the OutFox Team.\nIf you meet those requirements, there are already tools to help you:\n  OutFoxWeb\n Constantly updated to represent elements that are possible to be translated in the website. Translating those files would result in translating 80% what is possible to translate in the website already.    Tiny-Webini\n A tool created by zerinho6 to make website translation faster, easier, better and more like OutFox. Tiny-Webini removes all need to editing HTML files and uses a single .ini file like OutFox instead, it also has translator tools such as: show what can be translated by highlighting translatable elements, changing all translatable text to show its string key instead of string value and generate the HTML files needed to apply on the website backend.    "},{"id":71,"href":"/dev/actors/ActorsLua-Tweening/","title":"Tweening","parent":"Lua and Actors","content":"Actors have the ability to transition from point A to point B using Tweening.\nIt allows for queueing up movements \u0026amp; transitions on position, size, color and other attributes as well as commands and messages.\nQueueing-style tweens    These help with queueing actions after a certain amount of time.\nSleep    The actor waits for a given amount of seconds before performing the next command.\nhibernate    Like sleep, but the actor is also hidden for the duration of the hibernate.\nTween manipulation    These functions manipulate the flow of the tweening\nstoptweening    finishtweening    hurrytweening    SM3.95-era tweens    These tweens are what most people would be familiar to those who work with ITG and SM3.95\nlinear    The actor transitions at a constant rate.\naccelerate    decelerate    bouncebegin    It\u0026rsquo;s done in Lua in SM5 for some reason.\nbounceend    It\u0026rsquo;s done in Lua in SM5 for some reason.\nspring    tween (NotITG only)    Takes a string that references a global function\nSM5-era tweens    These tween functions were added in SM5.\n\u0026ldquo;ease\u0026rdquo;    smooth    drop    bezier    A 2D or 3D bezier curve can be passed into the function to allow for extra tweening options.\nOutFox-era tweens    OutFox added all of the standard easing functions. All of these are prefixed with ease and in/out/inout\nsine    in: easeinsine, out: easeoutsine, inOut: easeinoutsine\nquad    in: easeinquad, out: easeoutquad, inOut: easeinoutquad\ncubic    in: easeincubic, out: easeoutcubic, inOut: easeinoutcubic\nquart    in: easeinquart, out: easeoutquart, inOut: easeinoutquart\nquint    in: easeinquint, out: easeoutquint, inOut: easeinoutquint\nexpo    in: easeinexpo, out: easeoutexpo, inOut: easeinoutexpo\nback    in: easeinback, out: easeoutback, inOut: easeinoutback\ncircle    in: easeincircle, out: easeoutcircle, inOut: easeinoutcircle\nelastic    in: easeinelastic, out: easeoutelastic, inOut: easeinoutelastic\nbounce    in: easeinbounce, out: easeoutbounce, inOut: easeinoutbounce\n"},{"id":72,"href":"/dev/actors/Converting-ini-to-Lua/","title":"Converting INI files to Lua","parent":"Lua and Actors","content":"Converting BGAnimation INI files into lua files.    StepMania 3.9 \u0026amp; ITG are capable of using BGAnimation.ini files to define actors in place of xml files.\nIn StepMania 5, these have to be converted into .lua files instead.\nGeneral Layout of a BGAnimation.ini file.    [BGAnimation] [Layer2] File=path/to/a/different_file.png InitCommand=zoomx,3;zoomy,4;diffuse,1,0,0,0 OnCommand=diffusealpha,0;linear,3;diffusealpha,1 CommandRepeatSeconds=20 [Layer3] File=Common Normal Text=Help Me InitCommand=diffusealpha,0.5 OnCommand=spin;effectmagnitude,0,0,-100 [Layer1] File=path/to/a/file InitCommand=diffusealpha,0.5 OnCommand=spin;effectmagnitude,0,0,100 Here, layers are defined with the section name of Layer, followed by numbers or letters.\nThey are sorted by the characters used after Layer (so Layer1 comes before Layer2, even if Layer2 was placed first.)\nThe actual actor type has to be inferred from the path given in File. (Often, it\u0026rsquo;s a Sprite)\nCommands are done in command format.\nCreating the .lua equivalent.    The entire ini can be expressed as a single ActorFrame. In this example, both are sprites, and they have to be sorted manually.\nCommandRepeatSeconds isn\u0026rsquo;t a feature in lua actors, so it has to be replicated with queuecommand and sleep. (It would loop the OnCommand every given amount of seconds)\nThe commands have to be converted into function format as well.\nreturn Def.ActorFrame{ Def.Sprite{ Name=\u0026#34;Layer1\u0026#34;, InitCommand= function(self) self:diffusealpha(0.5) end, OnCommand= function(self) self:spin():effectmagnitude(0,0,100) end, }, Def.Sprite{ Name=\u0026#34;Layer2\u0026#34;, InitCommand= function(self) self:zoomx(3):zoomy(4):diffuse(1,0,0,0) end, OnCommand= function(self) self:diffusealpha(0):linear(3):diffusealpha(1):sleep(20-3):queuecommand(\u0026#34;On\u0026#34;) end, }, Def.BitmapText{ File=\u0026#34;Common Normal\u0026#34;, Text=\u0026#34;Help Me\u0026#34;. InitCommand= function(self) self:diffusealpha(0.5) end, OnCommand= function(self) self:spin():effectmagnitude(0,0,-100) end, }, } Other ini-style files (.sprite, .model)    Older SM also has alternate files that follow the ini format to define other actor types.\n.sprite files have an extra set of attributes for defining frames.\nFrame0000=0 Delay0000=0.25 Frame0001=4 Delay0001=0.25 Frame0002=2 Delay0002=0.25 Frame0003=1 Delay0003=0.25 Frame0004=3 Delay0004=0.25 These can be turned into Frames tables for a Def.Sprite.\nFrames= { {Frame= 0, Delay= 0.25}, {Frame= 4, Delay= 0.25}, {Frame= 2, Delay= 0.25}, {Frame= 1, Delay= 0.25}, {Frame= 3, Delay= 0.25}, } If all frames from the animation are the same and in order, you can use the Sprite.LinearFrames function helper to alieviate the ammount of lines.  -- This will tell the function to create a frame table that goes through -- 5 frames within 1 second. Frames = Sprite.LinearFrames( 5, 1 ) .model files have extra attributes to define bones, meshes and materials. These translate almost-1:1 into lua.\n[Model] Meshes=arrowmesh.txt Materials=4th.txt Bones=arrowmesh.txt becomes\nDef.Model{ Meshes=\u0026#34;arrowmesh.txt\u0026#34;, Materials=\u0026#34;4th.txt\u0026#34;, Bones=\u0026#34;arrowmesh.txt\u0026#34; } "},{"id":73,"href":"/dev/actors/Converting-xml-to-Lua/","title":"Converting XML files to Lua","parent":"Lua and Actors","content":"Converting xml files into lua files.    StepMania 3.95 \u0026amp; ITG use xml files for both themeing and effect scripting. It also allows embedding lua functions to perform more complex effects \u0026amp; scripting.\nIn StepMania 5, these have to be converted into .lua files instead.\nThe \u0026lsquo;easy way\u0026rsquo; of converting    There are two semi-automatic ways to convert xml files into lua.\n StepMania 5\u0026rsquo;s built-in XML to LUA converter   Converts positions to be based off of SCREEN_CENTER_X (which can result in some lost position information.) Condition attributes are turned into uses of a local function Commands are left in command format Misses commands in .sprite files Accessible from the debug menu Rearranges commands to be in alphabetical order  XeroOl\u0026rsquo;s xmlconvert tool   Requires some extra libraries on your system Does not touch positions Condition attributes are turned into ternary expressions Commands are turned into function format. performs a bit more work when dealing with modifier-related calls Sorts the actors to match what the xml tag sorting would do  The result isn\u0026rsquo;t going to always work, but should do a good amount of the grunt-work needed.\nGeneral layout of an xml file.    \u0026lt;ActorFrame\u0026gt; \u0026lt;children\u0026gt; \u0026lt;ZZZActor Type=\u0026#34;Quad\u0026#34; InitCommand=\u0026#34;hidden,1\u0026#34; OnCommand=\u0026#34;sleep,1000\u0026#34; /\u0026gt; \u0026lt;Special Type=\u0026#34;Sprite\u0026#34; File=\u0026#34;funny.png\u0026#34; OnCommand=\u0026#34;%function(self) SCREENMAN:SystemMessage(\u0026#39;hi\u0026#39;) end\u0026#34; /\u0026gt; \u0026lt;Sprite File=\u0026#34;circle\u0026#34; Condition=\u0026#34;GAMESTATE:IsHumanPlayer(0)\u0026#34; /\u0026gt; \u0026lt;/children\u0026gt; \u0026lt;/ActorFrame\u0026gt; Here, layers can have a name as well as a tag or Type. Either the tag name or the Type attribute defines what type of actor it is. If neither of these are given, the game would have to infer the actor type by itself.\nActorFrames have a children tag for holding their inner actors.\nUnlike .ini files, layers can have practically any name in the tag, instead of a required Layer prefix.\nThe layer sorting is somewhat like ini files, with the tag name being used to determine actor order. (This is separate from the Name attribute)\nFor example, the layer tagged as ZZZActor gets sorted to be after Special, even though it was written the other way around.\nCreating the .lua equivalent manually.    return Def.ActorFrame{ -- Special -- Def.Sprite{ Texture=\u0026#34;funny.png\u0026#34;, OnCommand= function(self) SCREENMAN:SystemMessage(\u0026#39;hi\u0026#39;) end, }, -- Sprite -- GAMESTATE:IsHumanPlayer(PLAYER_1) and Def.Sprite{ Texture=\u0026#34;circle\u0026#34;, } or Def.Actor{}, -- ZZZActor -- Def.Quad{ Texture=\u0026#34;funny.png\u0026#34;, InitCommand=function(self) self:visible(false) end, OnCommand=function(self) self:sleep(1000) end, }, } Often, the main xml file is an ActorFrame, with the inner actors matching the layout of the xml after sorting.\nConditions can be turned into ternary expressions, though they now run at different times compared to the original xml file.\nJust like in ini files, commands have to be turned into function format.\nThe commands that are already in function format are mostly 1:1. The \u0026ldquo;% \u0026quot; that are around the functions must be removed.\n"},{"id":74,"href":"/categories/","title":"Categories","parent":"Project OutFox Wiki","content":""},{"id":75,"href":"/user-guide/config/folders/","title":"Content folders","parent":"Features \u0026 Config","content":"Project OutFox uses various folders to store content, such as songs, save data, themes, noteskins, etc. Content is stored in one of the three following locations;\n Global folders are located within the Project OutFox installation directory. If you are on a multi-user operating system, content in these folders will be accessible to all users. When Portable Mode is enabled, your save data (including profiles and preference files) will be placed in the installation directory. User folders are also created in your operating system\u0026rsquo;s home/user directory if Portable Mode is disabled. When Portable Mode is disabled, this is where your save data will be stored.  On macOS, these folders are located in ~/Library/Preferences/StepMania 5.3/ On Linux, these folders are located in ~/.stepmania-5.3/ On Windows, these folders are located in %APPDATA%\\StepMania 5.3   Additional folders are paths configured in the Preferences.ini file; for instance, you can store your song library on a second hard drive and link to it there, or share content between multiple installations.  These content folders comprise the game\u0026rsquo;s \u0026ldquo;Virtual File System\u0026rdquo; (VFS). They are, in turn, divided into various subdirectories for storing specific types of content.\nAnnouncers    Announcers are a collection of audio files that play automatically based on specific triggers, such as in-game events or navigating to specific screens.\nAppearance    Avatars    Square images that can be used as avatars for your profile.\nJudgments    If supported by the current theme, you can pick a different design for in-game judgement displays from images in this folder.\nJudgement fonts are divided into equally-sized sprites for each judgement. Fonts designed for specific timing modes have a modifier in their file name, such as [Advanced], [FAPlus], etc. A judgement font can also have specific versions for early and late timings.\nNoteSkins    NoteSkins affect the appearance of notes. They could be arrows, bars, circles, pawprints, etc. Project OutFox is compatible with noteskins designed for StepMania 5.\nThe NoteSkins folder is divided into subfolders for specific game types. A global noteskin appears in all game types.\nNoteSkins │ └───dance │ │ │ └───metal │ │NoteSkin.lua │ │... Themes    Themes determine the look, feel, and functionality of the game. Themes compatible with StepMania 5.0.12 and 5.1 are also compatible with OutFox, while themes from older versions or StepMania 5.2 won\u0026rsquo;t.\nThemes │ └───My Theme │ │ Metrics.ini │ │ ... Toasties    Inspired by the famous Mortal Kombat easter egg, a toasty is an image and sound played on specific combo milestones.\nBackgroundEffects    Visual effects used for background script sequences in songs.\nBackgroundTransitions    Visual effects used for background script sequences in songs.\nBGAnimations    Actor-based animations that can be played in the background in-game. They can also be used as part of background script sequences in songs.\nCache    The cache generated by Project OutFox when loading songs. Delete this folder to force the game to reload all songs.\nCharacters    3D character models that can be displayed in-game.\nCourses    Playlists of songs used in course modes (such as Extended).\nLogs    When Project OutFox is running, it generates various log files to record diagnostic information and errors. If you are having issues with the game, the log file is a good place to begin.\nRandomMovies    Video clips that can be played in the background in-game. They can also be used as part of background script sequences in songs.\nSave    This is where data such as preferences, profiles, high scores, etc. are stored. If portable mode is enabled, the game will load the Save folder from your installation directory. It is otherwise located in your user folders.\nScreenshots    Screenshots taken in-game are stored here.\nSongMovies    Similar in use to RandomMovies, except that they will be excluded from the RandomMovies pool.\nSongs    Songs that are used to play the game. They are stored in folders known as Groups.\nSongs │ └───My Group │ │ │ └───My Song │ │ mysong.ssc │ │ mysong.ogg │ │ mysong-bg.png │ │ mysong-bn.png │ │ mysong-jk.png Additional folders    Via the preferences file (Save/Preferences.ini), you can specify additional folders.\nBoth of these parameters accept multiple directory paths, comma-separated.\nAdditionalSongFolders    The AdditionalSongFolders option allows you to specify other locations for where Project OutFox can search for songs. As with the installation directory\u0026rsquo;s song folder, they are divided into groups. For example (assuming a location such as D:\\AdditionalSongs);\nD:\\AdditionalSongs │ └───My Group │ │ │ └───My Song │ │ mysong.ssc │ │ mysong.ogg │ │ mysong-bg.png │ │ mysong-bn.png │ │ mysong-jk.png AdditionalFolders    AdditionalFolders is like the above, except they can contain any of the usual content subdirectories like so;\nD:\\OutFoxExtra │ └───Announcers │ └───Appearance │ └───etc. "},{"id":76,"href":"/user-guide/controllers/","title":"Controllers and Peripherals","parent":"User Guide","content":""},{"id":77,"href":"/dev/actors/","title":"Lua and Actors","parent":"Developers and Creators","content":"StepMania (and it\u0026rsquo;s many forks) use what\u0026rsquo;s known as the Actor model. OutFox inherits this behaviour. Everything in the engine is an Actor at its' very core.\nBecause everything is an actor, there are many types of actors, which are described below. Not everything listed is able to be created in Lua. Those that aren\u0026rsquo;t will be noted as such. However, all of these can be found in the Lua environment.\nA note on LoadActor()    This is a helper function that can be used to dynamically load an actor based on the file type. However, this should not be used as it is more resource intensive and can be easily avoided when the filetype is known. For loading external lua files, loadfile(path)() can be used, though the full path is required.\nActor    This is the base that everything derives from. Whatever an Actor can do, everything else can as well. It can be useful for creating control variables without creating something visible on screen.\nExample:\n-- Actors can be very useful as variable controllers since it does not perform any kind of -- overhead to the draw pipe. local Value = 2 Def.Actor{ InitCommand=function(self) Value = Value + 2 Trace(\u0026#34;My Value is now \u0026#34;.. Value) end } ActorFrame    An Actor that can contain one or more Actors. Think of it as a box that can hold as many objects as it can.\nExample:\nDef.ActorFrame{ -- This sprite is now included inside of the ActorFrame. -- Any changes from the ActorFrame will affect the sprite, such as position, rotation, -- zoom and such. Def.Sprite{} } ActorFrameTexture    It\u0026rsquo;s like an ActorFrame, but instead of displaying what\u0026rsquo;s inside onto the screen, it places the contents of the ActorFrame onto a Texture that a Sprite (or any other actor that can load textures) can read from.\nPopularized by its' use in NotITG, although the behavior is different. NotITG\u0026rsquo;s version places the screen itself onto a texture instead of what\u0026rsquo;s inside the ActorFrame and requires basezoom to be used on sprites to make the image fit inside the game window.\nExample:\n--[[ This example will create an ActorFrameTexture that uses a sample BitmapText, and project it to the center to the screen in half of the available size of the viewport window. ]] -- This ActorFrame will contain everything. local t = Def.ActorFrame{} -- First, create the ActorFrameTexture. local AFT = Def.ActorFrameTexture{ InitCommand = function(self) -- Start by adding a name to the texture. This is optional, but best to provide one, -- in case you need to work with several ActorFrameTextures in the same screen. self:SetTextureName( \u0026#34;MyAFT\u0026#34; ) -- Now we need to give the ActorFrameTexture a resolution, which will be -- how much is available to render. -- As this example will be half the size of the available screen, we\u0026#39;ll give the size -- half of the screen. self:SetWidth( SCREEN_WIDTH*.5 ):SetHeight( SCREEN_HEIGHT*.5 ) -- By default this option is disabled, but you can enable it to allow transparency -- in your ActorFrameTexture. -- In this case, it will disabled to show the available render area (shown as black) self:EnableAlphaBuffer( false ) -- We are done with the AFT, so now we have to create it. self:Create() end, -- After the initializer command, any actors included inside will be projected. -- The actors here act exactly the same as a ActorFrame, so they will start on the top-left -- corner of the available draw area given (in this case, half of the screen.) Def.BitmapText{ Font = \u0026#34;Common Normal\u0026#34;, Text = \u0026#34;Testing String!\u0026#34;, BeginCommand = function(self) self:zoom(2):spin() -- In order to see the texture, let\u0026#39;s center it. -- Calculations in actors inside of the AFT will need conversion as dimensions are -- different, so for example: -- Since we\u0026#39;re doing half of the screen for dimensions, to center it, we need to half -- that size as well. -- 1280 / 2 = 640 (Screen Size) -- 640 / 2 = 320 (Actor Position) -- 0 - 640 = 0 .. 1 (Size Area, using Screen Size) -- (320/640) = 0.5 (Point of Actor Position using above calculation) self:xy( SCREEN_WIDTH*.25, SCREEN_HEIGHT*.25 ) end } } t[#t+1] = AFT -- Now that we\u0026#39;ve created the ActorFrameTexture, it will be sent into a global texture, that we -- can then grab into a sprite, and it can be done in two ways. These will be shown inside the -- OnCommand in the sprite. -- Method 1: Load sprite directly into sprite. t[#t+1] = Def.Sprite{ -- Sprite name given inside the SetTextureName command in your AFT. Texture = \u0026#34;MyAFT\u0026#34;, -- Let\u0026#39;s center the projection so we can see it. OnCommand=function(self) self:xy( SCREEN_CENTER_X, SCREEN_CENTER_Y ) end } -- Method 2: Load sprite on demand on runtime. t[#t+1] = Def.Sprite{ -- Let\u0026#39;s center the projection so we can see it. OnCommand=function(self) self:xy( SCREEN_CENTER_X, SCREEN_CENTER_Y ) -- Sprite name given inside the SetTextureName command in your AFT. self:Load( \u0026#34;MyAFT\u0026#34; ) end } return t ActorMultiTexture    A quad that allows for layering of multiple textures. Every layer\u0026rsquo;s TextureMode can be manipulated using SetTextureMode (Note that it\u0026rsquo;s 0-indexed).\nCan be manipulated like how a Sprite would. once textures are added. By default, every layer is multiplicative.\nActorMultiVertex    Allows for arbitrary polygons to be created. Every vertex has a position on the xyz plane, a color formatted like diffuse values, and a uv coordinate for textures. In NotITG, this is known as \u0026ldquo;Polygon\u0026rdquo;, and the functions available are different, even though it achieves the same thing.\nreturn Def.ActorMultiVertex{ OnCommand=function(self) -- First, setup the kind of DrawMode is going to be performed. There are several kinds available. -- In this example, we\u0026#39;ll use Lines, to use a two point example. self:SetDrawState{ Mode=\u0026#34;DrawMode_Lines\u0026#34; } -- Time to generate the vertices that will become the vertex map. local vertices = { -- Data is inserted as the following: -- { { x, y, z }, Color, { TextureOffsetX, TextureOffsetY } } -- First table is the position of the vertex relative to the position of the ActorMultiVertex. -- Second table is the color that vertex will contain. -- Third table is optional for when you have a texture loaded into the AMV, and mapping is needed for the texture. -- Value goes from 0 to 1. -- Since no textures will be used in this example, the third table can be ignored. { {0, 0, 0}, Color.White }, { {15, 15, 0}, Color.Green } } -- Now with the vertices assigned, now it\u0026#39;s time to send them back to the AMV for it to generate them. self:SetVertices( vertices ) end } Vertices from the ActorMultiVertex can also be tweened to create animations. This must be done by modifying an existing vertice already assigned on the table, otherwise, it won\u0026rsquo;t be recognized and will just snap into the new position assigned.\n-- Let\u0026#39;s say this is your original vertex data, using DrawMode_Lines. -- This creates a line going from the topleft to bottom right by 15 pixels. local verts = { { {0, 0, 0}, Color.White }, { {15, 15, 0}, Color.Green } } -- Generate the verts so they can be rendered on screen. self:SetVertices(verts) -- Now let\u0026#39;s begin a transition using linear for 2 seconds. self:linear(2) -- Let\u0026#39;s modify the ending vertice so its Y position becomes the same as the starting vertex. -- There are two ways to modify vertex data here: -- METHOD 1: SetVertex. -- Simply call the SetVertex command that is available for ActorMultiVertex, and assign its new values. -- int index, table { table pos, table color, table textcoords } self:SetVertex( 2, { {15, 15, 0} } ) -- METHOD 2: Modifying the table itself. -- (This is recommended if you\u0026#39;re planning to modify a lot of points at the same time, or just need to modify a specific data type rather than the entire entry data) verts[2][1][2] = 0 -- Let\u0026#39;s analyze what\u0026#39;s going on here: verts[2]\t-- Go to the second entry on the verts table [1]\t-- Go to the first table of that entry, which contains the position of the vertex. [2]\t-- Go to the second value on that table, which is the Y position. -- With this value now modified, generate the new set of vertices. self:SetVertices(verts) ActorProxy    Creates a visual clone of any Actor given as a target. Anything done to the Target Actor shows up in the Proxy, but anything done to the Proxy will not show up on the Target.\nlocal t = Def.ActorFrame{} -- Let\u0026#39;s say you want to clone this object, it\u0026#39;s a bitmaptext actor that contains some words. -- An example using an object assigned to a local variable. local mytext t[#t+1] = Def.BitmapText{ Font=\u0026#34;Common Normal\u0026#34;, Text=\u0026#34;Hello There!\u0026#34; InitCommand=function(self) -- We assign this BitmapText to become mytext, so any actor who uses mytext can control this BitmapText. -- Note the InitCommand, this is neccesary so the object can be assigned at construction time, leaving space for it to be properly -- generated. mytext = self end } t[#t+1] = Def.ActorProxy{ BeginCommand=function(self) -- With mytext generated, using a later command in the pipeline, like [On/Begin]Command, we call SetTarget to get mytext, -- and clone the actor that\u0026#39;s in it. self:SetTarget( mytext ) end } -- You can also grab from nested ActorFrames, and even outside of the scope. t[#t+1] = Def.ActorFrame{ Def.BitmapText{ Font=\u0026#34;Common Normal\u0026#34;, Text=\u0026#34;Hello There!\u0026#34;, Name=\u0026#34;MyText\u0026#34;, }, Def.ActorProxy{ BeginCommand=function(self) -- For information about the GetParent and GetChild functions, check \u0026#34;Anatomy of a Lua Actor: Obtaining Childs and ActorFrame Levels\u0026#34;. self:SetTarget( self:GetParent():GetChild(\u0026#34;MyText\u0026#34;) ) end } } return t -- Finish by returning the ActorFrame. ActorScroller    An actor that allows for creating scrolling displays. If BitmapTexts are used, they have to be encased in an ActorFrame.\nBanner    A song or course banner, meant for use with custom music wheels or any other place a song\u0026rsquo;s banner would show up.\nBGAnimation    A background animation that can be used during gameplay Can either be loaded from a BGAnimation.ini file (Only if Quirks Mode is enabled), or constructed like an ActorFrame would.\nBitmapText    Used to display text on screen.\nBPMDisplay    Shows the BPMs of the song currently selected. What shows depends on what the simfile sets for the display BPM.\nUsually used as part of ScreenSelectMusic.\nComboGraph    Shows the combos that were held throughout the song, with combo breaks separating the blocks, and the largest combo being colored.\nDef.ComboGraph{ InitCommand=function(self) -- Load the MetricsGroup that will create the basis for the graph. self:Load(\u0026#34;ComboGraph\u0026#34;) local playerStageStats = STATSMAN:GetCurStageStats():GetPlayerStageStats(player) local stageStats = STATSMAN:GetCurStageStats() -- Data is graph from the current stage stats and the player\u0026#39;s stats. self:Set(stageStats, playerStageStats) end } ControllerStateDisplay    Appears to show the status of controllers/pads.\nCourseContentsList    A list of the songs for a given course. Can be given a limit for how many songs to show and how many to show at a time.\nDeviceList    Displays a list of all input devices. Often, Keyboard and Mouse will be listed.\nFunctions like most other BitmapText actors.\nDifficultyIcon    A Sprite-type actor that shows a different icon for each difficulty.\nIf there number of frames are double the amount of difficulties available in the engine, the player number will offset the icon shown.\nDynamicActorScroller    Inherits from ActorScroller, uses only one child Actor to draw all items.\nFadingBanner    A song or course banner that can fade between the banner for different songs or courses.\nOften seen in ScreenSelectMusic.\nGradeDisplay    Shows the grade a player has gotten for a given song\u0026rsquo;s chart.\nGraphDisplay    Displays a graph containing data points for a player\u0026rsquo;s life throughout the stage.\nSettings for a GraphDisplay can only be defined through metrics.\nDef.GraphDisplay{ InitCommand=function(self) -- Load the MetricsGroup that will create the basis for the graph. self:Load(\u0026#34;GraphDisplay\u0026#34;) local playerStageStats = STATSMAN:GetCurStageStats():GetPlayerStageStats(player) local stageStats = STATSMAN:GetCurStageStats() -- Data is graph from the current stage stats and the player\u0026#39;s stats. self:Set(stageStats, playerStageStats) end } GrooveRadar    A recreation of the five-point \u0026ldquo;Groove Radar\u0026rdquo; from DDR. Can take arbitrary values as well as the song\u0026rsquo;s radar values.\nHelpDisplay    A BitmapText-type actor that allows for cycling automatically through tips.\nDef.HelpDisplay { File=\u0026#34;Common Normal\u0026#34;, InitCommand=function(self) local s = \u0026#34;Hello\u0026#34; .. \u0026#34;::\u0026#34; .. \u0026#34;This is a new line\u0026#34; .. \u0026#34;::\u0026#34; .. \u0026#34;And another one!\u0026#34; -- We\u0026#39;ll set the next to toggle between each line (Separated by double colons) by 0.5 seconds. self:SetSecsBetweenSwitches(0.5) -- And tell the HelpDisplay to show that text. :SetTipsColonSeparated(s) end } HoldJudgment    Often found in Player, though there is no way to grab the ones that are in Player.\nThe judgment that shows up on a column when dropping or clearing a hold \u0026amp; roll.\nThere is an extra function to allow tracking the hold judgments from a MultiPlayer.\nInputList    Displays a list of inputs as they occur. Can show unmapped and mapped inputs.\nFunctions like most other BitmapText actors.\nLogDisplay    This is an actor type created from _fallback\u0026rsquo;s scripts.\nDisplays lua script errors as they happen. Most themers shouldn\u0026rsquo;t need to touch this.\nLifeMeter    Cannot be created from lua, but can be grabbed from ScreenGameplay.\nOften used in gameplay screens. This shows how much life a Player currently has.\nLifeMeterBattery    Cannot be created from lua.\nOften used in gameplay screens. This shows how many more mistakes a player is allowed before failing.\nMemoryCardDisplay    Shows the current state of a player\u0026rsquo;s inserted memory card. Made of images, with one for each state.\nMenuTimer    Cannot be created from lua, but is a part of every screen that inherits from ScreenWithMenuElements.\nA Timer that counts down and proceeds to the next screen when it reaches 0.\nMeterDisplay    Shows the current progress of an operation. It appears to only show the progress as 50%.\nModel    Allows one to display MilkShape3D ASCII models, having separate attributes for materials, bones and meshes.\nDef.Model{ Meshes=\u0026#34;MyModel.txt\u0026#34;, Materials=\u0026#34;MyModel.txt\u0026#34;, Bones=\u0026#34;MyModel.txt\u0026#34;, OnCommand=function(self) self:Center() -- When a model begins its animation, it will loop indefinitely. To stop that, use the loop command to -- set the flag to false. self:loop(false) end } Meshes are the composition and structure of the Model. This data represents the vertices that make the Model take shape.\nMaterials are the textures that the model will use. These can be any of the image formats listed in the Supported File Extensions page. They can also be .ini files that define animated textures on a Def.Sprite.\nBones make the model come to life. They can be defined within the primary model file, or, in the case of dancing characters, be controlled via a separate file that only contains the bones.\nIn the above example, all three attributes used the same filepath; all the necessary data was contained within a single file. It is possible to configure the MilkShape 3D software to output distinct files for meshes, materials, and bones, and set each Def.Model attribute accordingly, but that is outside the scope of this lesson.\nNOTE: All three attributes must be provided within Def.Model as paths to resources that can be loaded or the game will crash.\nWith OutFox, you can store several types of animations on the same model and call them at any moment.\n-- Let\u0026#39;s load a animation called WarmUp, located on a file called \u0026#34;Warm1.txt\u0026#34;. self:LoadBones( \u0026#34;WarmUp\u0026#34;, \u0026#34;Warm1.txt\u0026#34; ) -- Now the model has an animation called \u0026#34;WarmUp\u0026#34;, and can be called at any time with playanimation. -- The second value is optional, and sets the rate of the animation\u0026#39;s speed. self:playanimation( \u0026#34;WarmUp\u0026#34;, 1 ) ModIconRow    Shows icons for the currently set modifiers of a player.\nNot all modifiers have an icon, and the settings can only be set through metrics.\nMusicWheel    Cannot be created from lua, but can be grabbed from the TopScreen.\nThe wheel used to select songs in ScreenSelectMusic or courses in ScreenSelectCourse.\nNoteColumnRenderer    Cannot be created from lua, but can be grabbed from NoteField.\nThis is a dedicated actor for a column in the notefield, and can be treated like any other actor.\nNoteField    Cannot be created from lua, but resides in Player.\nContains the receptors and notes as seen in gameplay.\nOptionRow    Cannot be created from lua.\nOften seen in options screens, this actor allows for picking and choosing various options for a given setting.\nPaneDisplay    Shows the number of steps, jumps, holds, rolls, mines, hands, lifts, fakes, the machine profile\u0026rsquo;s highscore \u0026amp; name and the current profile\u0026rsquo;s high score for a given chart.\nSettings must be defined through Metrics.\nPercentageDisplay    Shows a player\u0026rsquo;s current percentage (Actual DancePoints divided by Possible DancePoints).\nPlayer    Cannot be created from lua, but is part of ScreenGameplay\nThe entirety of the playfield. Holds the judgment, hold judgments, combo and the NoteField.\nQuad    An arbitrary rectangle. Acts like a Sprite with a blank texture.\n-- Generate a 64 x 64 rectangle on the center of the screen, and color it Yellow. Def.Quad{ OnCommand=function(self) self:zoomto( 64,64 ):diffuse( Color.Yellow ) :xy( SCREEN_CENTER_X, SCREEN_CENTER_Y ) end } RollingNumbers    A BitmapText with a number that transitions to the target number.\nRequires metrics for it to be loaded before anything else is done with it.\nDef.RollingNumbers{ -- Load the font that the numbers will be rendered with. File = THEME:GetPathF(\u0026#34;Common\u0026#34;, \u0026#34;Normal\u0026#34;), InitCommand=function(self) -- Loads the MetricsGroup to use it\u0026#39;s settings on. self:Load(\u0026#34;RollingNumbers\u0026#34;) -- To update the value, use the targetnumber function. self:targetnumber(300) end } ScoreDisplayAliveTime    A BitmapText-type actor that shows how long a player has survived through the stage.\nScoreDisplayCalories    A RollingNumbers-type actor that shows how many calories a player has burned through the stage.\nScreen    Can\u0026rsquo;t be defined in lua, but can be defined in a theme\u0026rsquo;s metrics.\nA screen the theme can go to. There are screens for gameplay, selecting music, pre-gameplay, etc. Each screen has a background, underlay, overlay and decorations that can be used.\nSongBPMDisplay    Shows the current BPM during gameplay. Does not appear to take split timing into account.\nSongMeterDisplay    A MeterDisplay that shows the current position of the song being played.\nDef.SongMeterDisplay{ InitCommand=function(self) -- This generates a 300 x [the height of your Stream texture] that will define the current progress of whatever song is currently being played. -- The actor will automatically update progress for the Tip and the Stream. self:SetStreamWidth( 300 ) end, -- Both the Stream and Tip are AutoActors, so they can be any actor type. Stream=Def.Sprite{ Texture=\u0026#34;MyStreamBar\u0026#34; }, Tip=Def.Sprite{ Texture=\u0026#34;MyTip\u0026#34; } } Sound    Used to play sound files outside of the common theme sound effects and the simfile\u0026rsquo;s song itself.\nRemoves the need to use SOUND:PlayOnce(), as it allows for pre-loading the sound file at the start instead of loading (possibly many times) and playing the sound mid-screen.\nDef.Sound{ -- Load the audio called MySound, which is a ogg file in this example. File=\u0026#34;MySound.ogg\u0026#34;, -- Lets the audio pane from side to side. Useful for audios that need to play on a specific player side. SupportPan=true, -- Allows the audio to change rate and pitch. SupportRateChanging=false, -- this assigns the audio to be an Action, which is a flag for sounds that allows it to be muted by the player, -- with the use of the Mute Actions key (Default to \u0026#34;Pause\u0026#34;). IsAction=true, OnCommand=function(self) -- When creating the actor, sound will not play automatically, so you need to use the play command -- to perform such action. self:play() -- If the audio has the \u0026#34;(loop)\u0026#34; flag set on its filename, it will loop infinetly. So to top it, use the -- appropiate command. self:stop() -- If the sound needs to be paused on a particular frame, and not to reset, use the pause command. self:pause( true ) -- Use false to resume it. -- To control actions like volume, you need to access the ActorSound\u0026#39;s RageSound, by using the get function. local MyRageSound = self:get() MyRageSound:volume(0.5) -- Changes volume (0 to 1). MyRageSound:pitch( 1.2 ) -- Requires SupportRateChanging to work. MyRageSound:speed( 1.4 ) -- Requires SupportRateChanging to work. end } Sprite    Allows one to display images on screen. These images can be a png, jpeg, gif or even a video file.\nDef.Sprite{ Texture=\u0026#34;MyTexture.png\u0026#34;, -- The Texture is optional, you can start a sprite without a texture. -- You can manipulate the ammount of frames that a sprite can use using the Sprite argument. Frames={ -- The structure for the Frame is as follows: --{ Frame = int, Delay = float , {float,float}, {float,float} } -- The two tables are optional upper left and lower right corners of the fraction of the -- frame to use. -- This will make a 4 frame sprite toggle between its frames for 0.5 seconds, -- making a 2 second animation. { Frame = 0, Delay = 0.5 }, { Frame = 1, Delay = 0.5 }, { Frame = 2, Delay = 0.5 }, { Frame = 3, Delay = 0.5 }, }, OnCommand=function(self) -- You can also load new textures after assigning one beforehand. -- The path in Load is absolute, so you must put the entire path to the new image. self:Load( --[[ [Path to another texture] ]] ) -- You can pause or jump to other sprites with the following commands. self:animate(0) -- 0 pauses the animation, 1 resumes it (Can be used as well for Models). self:pause() -- An alias for animate(0) (Can be used as well for Models). self:play() -- An alias for animate(1) (Can be used as well for Models). -- setstate jumps to a frame of the animation assigned. Animation states are 0-indexed. self:setstate( 2 ) -- Jumps to the third frame of the animation. -- If an out-of-range value is assigned ( \u0026lt; 0 or \u0026gt; #Frames ), an error is displayed -- displaying the total ammount of frames available on the current sprite. -- The Frames set can also be manipulated during runtime, by using the SetStateProperties -- function. This example now inverts the animation. self:SetStateProperties( { { Frame = 3, Delay = 0.5 }, { Frame = 2, Delay = 0.5 }, { Frame = 1, Delay = 0.5 }, { Frame = 0, Delay = 0.5 }, } ) end } StepsDisplay    Displays the data for a given chart. Can show difficulty number, description, credit, if it\u0026rsquo;s autogen and steps type.\nCurrently, all setings are done through metrics.\nStepsDisplayList    Shows the list of steps available for a given song.\nThe name given determines what metrics group to load from.\nDef.StepsDisplayList { Name=\u0026#34;StepsDisplayList\u0026#34;, -- These define the cursor the players will be controlling. The rest of the elements are defined -- by the metrics. CursorP1=Def.Actor{}, CursorP2=Def.Actor{}, CursorP1Frame=Def.Actor{}, CursorP2Frame=Def.Actor{} } TextBanner    A \u0026ldquo;Banner\u0026rdquo; that contains the song name, artist and subtitle.\nUsually seen in the CourseContentsList of ScreenSelectMusic or the ScrollerItem in ScreenHighScores.\nWheelBase    Cannot be created from lua.\nA base class for wheels. Currently, the MusicWheel and RoomWheel inherit from this.\nWheelItemBase    Cannot be created from lua.\nA base class for items residing in wheels. MusicWheelItems inherit from this.\nWorkoutGraph    A graph showing the calories burned over time during a workout.\n"},{"id":78,"href":"/","title":"Project OutFox Wiki","parent":"","content":"Pardon our dust! We have rebuilt the wiki using a new framework to make things nicer and more organized.\nAll of the existing content has been migrated, but be sure to report any issues you encounter, and we\u0026rsquo;ll get them fixed ASAP.\n Welcome to the documentation wiki for Project OutFox! Project OutFox is a fork of StepMania with a focus on internal modernization to its code, as well as refurbishing and extending its ability to support various types of rhythm games.\nThis wiki is still a work in progress, so keep checking back for updates on new content! It is edited via a Git repository; commit access is limited to the development team, but you can always perform pull requests too.\n Table of contents  Project OutFox  About   FAQ   The Team   Release History    User\u0026rsquo;s guide  Installation   Getting Started   Controllers   Game modes   Content folders   Preferences file    For Developers and Creators  Mode support   Lua and Actors   Effects and Gimmicks   Modifiers   Translation      Credits and license  Text available under the CC-BY SA 4.0 licence, attributed to Team Rizu unless otherwise noted.\nPowered by GitHub Pages, Hugo, and Geekdocs.\n"},{"id":79,"href":"/tags/","title":"Tags","parent":"Project OutFox Wiki","content":""}]